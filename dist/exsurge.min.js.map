{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///exsurge.min.js","webpack:///webpack/bootstrap 47b4f9ec3c0ad91f4482","webpack:///./src/index.js","webpack:///./src/Exsurge.Core.js","webpack:///./src/Exsurge.Text.js","webpack:///./src/Exsurge.Glyphs.js","webpack:///./src/Exsurge.Drawing.js","webpack:///./src/Exsurge.Chant.js","webpack:///./src/Exsurge.Chant.Signs.js","webpack:///./src/Exsurge.Gabc.js","webpack:///./src/Exsurge.Chant.Markings.js","webpack:///./src/Exsurge.Chant.Neumes.js"],"names":["root","factory","exports","module","define","amd","this","modules","__webpack_require__","moduleId","installedModules","id","loaded","call","m","c","p","Object","defineProperty","value","_Exsurge","_loop","_key10","enumerable","get","_Exsurge2","_loop2","_key11","_Exsurge3","_loop3","_key12","_Exsurge4","_loop4","_key13","_Exsurge5","_loop5","_key14","_ExsurgeChant","_loop6","_key15","_ExsurgeChant2","_loop7","_key16","_ExsurgeChant3","_loop8","_key17","_Exsurge6","_loop9","_key18","_classCallCheck","instance","Constructor","TypeError","isDef","val","undefined","DeviceIndependent","n","Centimeters","Units","ToDeviceIndependent","Millimeters","Inches","ToCentimeters","FromDeviceIndependent","ToMillimeters","ToInches","generateRandomGuid","s4","Math","floor","random","toString","substring","_createClass","defineProperties","target","props","i","length","descriptor","configurable","writable","key","protoProps","staticProps","prototype","DeviceIndepenedent","DIU_PER_INCH","DIU_PER_CENTIMETER","inputUnits","outputUnits","StringToUnitsType","s","ToLower","UnitsTypeToString","units","Point","x","y","Step","Rect","width","height","Infinity","bottom","rect","other","right","max","min","Margins","left","top","margins","Size","size","Do","Du","Re","Me","Mi","Fa","Fu","So","La","Te","Ti","__StepToStaffPosition","__StaffOffsetToStep","Pitch","step","octave","pitch","toInt","offset","MarkingPositionHint","Default","Above","Below","_interopRequireWildcard","obj","__esModule","newObj","hasOwnProperty","_possibleConstructorReturn","self","ReferenceError","_inherits","subClass","superClass","create","constructor","setPrototypeOf","__proto__","Spanish","Latin","Language","name","text","parsedWords","words","split","end","push","syllabifyWord","_Language","_this","getPrototypeOf","diphthongs","wordExceptions","vowels","muteConsonantsAndF","liquidConsonants","word","lookahead","haveLookahead","syllables","haveCompleteSyllable","previousWasVowel","workingString","toLowerCase","startSyllable","makeSyllable","substr","wordLength","cIsVowel","isVowel","isDiphthong","isMuteConsonantOrF","isLiquidConsonant","startIndex","index","d","indexOf","found","_Language2","_this2","weakVowels","strongVowels","dipthongs","uDipthongExpections","previousIsVowel","previousIsStrongVowel","cIsStrongVowel","isStrongVowel","createSyllable","numberOfConsonants","j","consonant2","tripthong","endj","findVowelSegment","Glyphs","None","svgSrc","paths","type","data","bounds","origin","AcuteAccent","Apostropha","BeginningAscLiquescent","BeginningDesLiquescent","CustodDescLong","CustodDescShort","CustodLong","CustodShort","DoClef","FaClef","Flat","Mora","Natural","OriscusAsc","OriscusDes","PodatusLower","PodatusUpper","Porrectus1","Porrectus2","Porrectus3","Porrectus4","PunctumCavum","PunctumCuadratum","PunctumCuadratumAscLiquescent","PunctumCuadratumDesLiquescent","PunctumInclinatum","Quilisma","TerminatingAscLiquescent","TerminatingDesLiquescent","VerticalEpisemaAbove","VerticalEpisemaBelow","VirgaLong","VirgaShort","Virgula","MarkupStackFrame","symbol","cssClass","ChantNotationElement","Annotation","DropCap","Lyric","LyricType","TextElement","GlyphVisualizer","HorizontalEpisemaLineVisualizer","NeumeLineVisualizer","DividerLineVisualizer","ChantLayoutElement","ChantContext","QuickSvg","GlyphCode","_get","object","property","receiver","Function","desc","getOwnPropertyDescriptor","parent","getter","__syllableConnector","ns","xmlns","xlink","svg","node","document","createElementNS","setAttribute","setAttributeNS","defs","appendChild","clearNotations","removeChild","hasChildNodes","lastChild","line","x1","y1","x2","y2","g","tspan","str","textContent","use","nodeRef","createFragment","attributes","child","fragment","attr","parseFragment","well","createElement","container","innerHTML","replace","il","firstChild","childNodes","translate","scale","sx","sy","lyricTextSize","lyricTextFont","lyricTextColor","dropCapTextSize","dropCapTextFont","dropCapTextColor","annotationTextSize","annotationTextFont","annotationTextColor","glyphPunctumWidth","glyphPunctumHeight","glyphScaling","staffInterval","staffLineWeight","neumeLineWeight","dividerLineWeight","episemaLineWeight","activeClef","staffLineColor","dividerLineColor","defaultLanguage","glyphName","glyph","path2D","Path2D","svgTextMeasurer","querySelector","hyphen","SingleSyllable","hyphenWidth","minLyricWordSpacing","intraNeumeSpacing","syllableConnector","drawGuides","drawDebuggingBounds","condensingTolerance","staffPosition","selected","highlighted","ctxt","TextSpan","_ChantLayoutElement","staffPosition0","staffPosition1","y0","calculateHeightFromStaffPosition","temp","fill","class","_ChantLayoutElement2","note0","note1","hanging","neumeLineColor","_ChantLayoutElement3","boundsToMark","position","_this3","minDistanceAway","abs","_ChantLayoutElement4","glyphCode","_this4","setGlyphShape","glyphSrc","transform","xlink:href","cssClasses","boldMarkup","italicMarkup","redMarkup","smallCapsMarkup","createStackFrame","_ChantLayoutElement5","fontFamily","fontSize","textAnchor","_this5","generateSpansFromText","recalculateMetrics","unsanitizedText","spans","markupStack","spanStartIndex","that","closeSpan","spanText","extraCssClass","markupRegex","match","exec","markupSymbol","pop","filter","frame","Symbol","createDrawable","bbox","getBBox","options","getCssClasses","font-family","font-size","text-anchor","BeginningSyllable","MiddleSyllable","EndingSyllable","Directive","_TextElement","lyricType","_this6","needsConnector","needs","widthWithConnector","lastSpanTextWithConnector","widthWithoutConnector","lastSpanText","textWithConnector","activeLanguage","result","getSubStringLength","classes","_TextElement2","_this7","padding","_TextElement3","_this8","_ChantLayoutElement6","_this9","leadingSpace","trailingSpace","keepWithNext","lyric","score","visualizers","chantLayoutElement","isEmpty","clone","union","hasLyric","inner","ChantDocument","ChantScore","ChantLine","ChantLineBreak","Clef","Note","NoteShape","Inclinatum","Virga","Cavum","OriscusAscending","OriscusDescending","AscLiquescent","DesLiquescent","glyphVisualizer","isLiquescent","shape","markings","console","log","setStaffPosition","marking","performLayout","generateVisualizerPath","draw","_ChantNotationElement","isClef","defaultAccidental","activeAccidental","_Clef","stepToStaffOffset","octaveOffset","staffOffsetToStep","accidentalType","addVisualizer","finishLayout","_Clef2","AccidentalType","_ChantNotationElement2","justify","lb","scoreNotationStart","scoreNotationCount","notations","notationBounds","lyricBounds","staffLeft","staffRight","custod","startingClef","nextLine","previousLine","spaceAfterNotations","spaceBetweenTextTracks","clef","notation","lyricVerticalOffset","dropCap","annotation","stroke","stroke-width","newElementStart","setStartingClef","current","previous","previousWithLyric","rightBoundary","scoreNotations","fitsOnLine","positionNotationElement","k","cne","chantLine","extraSpace","last","getLyricRight","notes","Custod","referringNeume","justifyElements","indices","prev","curr","prevWithLyrics","allowsConnector","increment","lastIndex","prevWithLyric","maxRight","setNeedsConnector","getLyricLeft","currLyricLeft","prevLyricRight","lines","compiled","autoColoring","finishedCallback","setTimeout","compileElement","timeout","Date","getTime","currIndex","buildFromChantNotationIndex","lastLine","drawable","def","version","xmlns:xlink","prevNeume","currNotation","createDropCap","Gabc","parseChantNotations","defaults","layout","default-font","page","margin-left","margin-top","margin-right","margin-bottom","scores","copyLayout","to","from","unserializeFromJson","serializeToJson","Accidental","DoubleBar","FullBar","HalfBar","QuarterBar","DividingLine","note","getGlyphCode","resetsAccidentals","_DividingLine","apply","arguments","_DividingLine2","_DividingLine3","_DividingLine4","line0","line1","Sharp","_ChantNotationElement3","isAccidental","adjustStep","_ChantNotationElement4","Markings","Signs","Neumes","__syllablesRegex","__notationsRegex","loadChantScore","gabcNotations","prepareNotesForAudio","passByRef","currSyllable","trim","matches","lyricText","notationData","items","createNotations","notationWithLyrics","makeLyric","resetAccidentals","concat","elides","italic","startsWith","endsWith","bold","elidesToNext","TextOnly","out","addNotation","neumes","createNeumesFromNotes","atoms","atom","lineBreak","convertGabcStaffPositionToScribamPitch","createNoteFromData","accidental","finalTrailingSpace","prevNote","currNote","firstNoteIndex","currNoteIndex","createNeume","neume","includeCurrNote","lastNoteIndex","unknownState","Punctum","handle","apostrophaState","virgaState","punctumState","podatusState","climacusState","clivisState","distrophaState","Podatus","scandicusState","pesSubpunctisState","torculusState","Clivis","porrectusState","Climacus","state","Porrectus","PorrectusFlexus","PesSubpunctis","Scandicus","scandicusFlexusState","ScandicusFlexus","bivirgaState","Bivirga","Trivirga","Distropha","Tristropha","Torculus","torculusResupinusState","TorculusResupinus","TorculusResupinusFlexus","toUpperCase","convertGabcStaffPositionToScribamStaffPosition","mark","HorizontalEpisema","positionHint","Ictus","gabcStaffPos","charCodeAt","scribamStaffPosition","staffPositionToPitch","applyToPitch","Marking","Exsurge","horizontalOffset","verticalOffset","_Marking","orizontalOffset","_Marking2","_Marking3","_Marking4","PesQuassus","Oriscus","Neume","playbackData","prevIsQuilisma","duration","multiplier","className","horizontalEpisemaActive","_Neume","ApostrophaLiquescent","_Neume2","note2","_Neume3","note3","_Neume4","prevStaffPosition","punctumInclinatumLiquescent","multiple","_Neume5","upper","lower","upperStaffPos","lowerStaffPos","_Neume6","_Neume7","_Neume8","needsLines","_Neume9","PunctumInclinatumLiquescent","_Neume10","_Neume11","first","second","third","firstStaffPosition","secondStaffPosition","thirdStaffPosition","_Neume12","fourth","fourthStaffPosition","_Neume13","_Neume14","_Neume15","iisLiquescent","staffPos3","staffPos4","extraLine","_Neume16","_Neume17","staffPos1","staffPos2","_Neume18","_Neume19","fifth","fifthStaffPosition","_Neume20","_Neume21"],"mappings":"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","file":"exsurge.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"exsurge\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"exsurge\"] = factory();\n\telse\n\t\troot[\"exsurge\"] = factory();\n})(this, function() {\nreturn \n\n\n/** WEBPACK FOOTER **\n ** webpack/universalModuleDefinition\n **/","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"exsurge\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"exsurge\"] = factory();\n\telse\n\t\troot[\"exsurge\"] = factory();\n})(this, function() {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t//\n\t// Author(s):\n\t// Fr. Matthew Spencer, OSJ <mspencer@osjusa.org>\n\t//\n\t// Copyright (c) 2008-2016 Fr. Matthew Spencer, OSJ\n\t//\n\t// Permission is hereby granted, free of charge, to any person obtaining a copy\n\t// of this software and associated documentation files (the \"Software\"), to deal\n\t// in the Software without restriction, including without limitation the rights\n\t// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n\t// copies of the Software, and to permit persons to whom the Software is\n\t// furnished to do so, subject to the following conditions:\n\t//\n\t// The above copyright notice and this permission notice shall be included in\n\t// all copies or substantial portions of the Software.\n\t//\n\t// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n\t// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n\t// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n\t// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n\t// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n\t// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n\t// THE SOFTWARE.\n\t//\n\t\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\n\tvar _Exsurge = __webpack_require__(1);\n\n\tvar _loop = function _loop(_key10) {\n\t  if (_key10 === \"default\") return 'continue';\n\t  Object.defineProperty(exports, _key10, {\n\t    enumerable: true,\n\t    get: function get() {\n\t      return _Exsurge[_key10];\n\t    }\n\t  });\n\t};\n\n\tfor (var _key10 in _Exsurge) {\n\t  var _ret = _loop(_key10);\n\n\t  if (_ret === 'continue') continue;\n\t}\n\n\tvar _Exsurge2 = __webpack_require__(2);\n\n\tvar _loop2 = function _loop2(_key11) {\n\t  if (_key11 === \"default\") return 'continue';\n\t  Object.defineProperty(exports, _key11, {\n\t    enumerable: true,\n\t    get: function get() {\n\t      return _Exsurge2[_key11];\n\t    }\n\t  });\n\t};\n\n\tfor (var _key11 in _Exsurge2) {\n\t  var _ret2 = _loop2(_key11);\n\n\t  if (_ret2 === 'continue') continue;\n\t}\n\n\tvar _Exsurge3 = __webpack_require__(3);\n\n\tvar _loop3 = function _loop3(_key12) {\n\t  if (_key12 === \"default\") return 'continue';\n\t  Object.defineProperty(exports, _key12, {\n\t    enumerable: true,\n\t    get: function get() {\n\t      return _Exsurge3[_key12];\n\t    }\n\t  });\n\t};\n\n\tfor (var _key12 in _Exsurge3) {\n\t  var _ret3 = _loop3(_key12);\n\n\t  if (_ret3 === 'continue') continue;\n\t}\n\n\tvar _Exsurge4 = __webpack_require__(4);\n\n\tvar _loop4 = function _loop4(_key13) {\n\t  if (_key13 === \"default\") return 'continue';\n\t  Object.defineProperty(exports, _key13, {\n\t    enumerable: true,\n\t    get: function get() {\n\t      return _Exsurge4[_key13];\n\t    }\n\t  });\n\t};\n\n\tfor (var _key13 in _Exsurge4) {\n\t  var _ret4 = _loop4(_key13);\n\n\t  if (_ret4 === 'continue') continue;\n\t}\n\n\tvar _Exsurge5 = __webpack_require__(5);\n\n\tvar _loop5 = function _loop5(_key14) {\n\t  if (_key14 === \"default\") return 'continue';\n\t  Object.defineProperty(exports, _key14, {\n\t    enumerable: true,\n\t    get: function get() {\n\t      return _Exsurge5[_key14];\n\t    }\n\t  });\n\t};\n\n\tfor (var _key14 in _Exsurge5) {\n\t  var _ret5 = _loop5(_key14);\n\n\t  if (_ret5 === 'continue') continue;\n\t}\n\n\tvar _ExsurgeChant = __webpack_require__(8);\n\n\tvar _loop6 = function _loop6(_key15) {\n\t  if (_key15 === \"default\") return 'continue';\n\t  Object.defineProperty(exports, _key15, {\n\t    enumerable: true,\n\t    get: function get() {\n\t      return _ExsurgeChant[_key15];\n\t    }\n\t  });\n\t};\n\n\tfor (var _key15 in _ExsurgeChant) {\n\t  var _ret6 = _loop6(_key15);\n\n\t  if (_ret6 === 'continue') continue;\n\t}\n\n\tvar _ExsurgeChant2 = __webpack_require__(6);\n\n\tvar _loop7 = function _loop7(_key16) {\n\t  if (_key16 === \"default\") return 'continue';\n\t  Object.defineProperty(exports, _key16, {\n\t    enumerable: true,\n\t    get: function get() {\n\t      return _ExsurgeChant2[_key16];\n\t    }\n\t  });\n\t};\n\n\tfor (var _key16 in _ExsurgeChant2) {\n\t  var _ret7 = _loop7(_key16);\n\n\t  if (_ret7 === 'continue') continue;\n\t}\n\n\tvar _ExsurgeChant3 = __webpack_require__(9);\n\n\tvar _loop8 = function _loop8(_key17) {\n\t  if (_key17 === \"default\") return 'continue';\n\t  Object.defineProperty(exports, _key17, {\n\t    enumerable: true,\n\t    get: function get() {\n\t      return _ExsurgeChant3[_key17];\n\t    }\n\t  });\n\t};\n\n\tfor (var _key17 in _ExsurgeChant3) {\n\t  var _ret8 = _loop8(_key17);\n\n\t  if (_ret8 === 'continue') continue;\n\t}\n\n\tvar _Exsurge6 = __webpack_require__(7);\n\n\tvar _loop9 = function _loop9(_key18) {\n\t  if (_key18 === \"default\") return 'continue';\n\t  Object.defineProperty(exports, _key18, {\n\t    enumerable: true,\n\t    get: function get() {\n\t      return _Exsurge6[_key18];\n\t    }\n\t  });\n\t};\n\n\tfor (var _key18 in _Exsurge6) {\n\t  var _ret9 = _loop9(_key18);\n\n\t  if (_ret9 === 'continue') continue;\n\t}\n\n/***/ },\n/* 1 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\texports.isDef = isDef;\n\texports.DeviceIndependent = DeviceIndependent;\n\texports.Centimeters = Centimeters;\n\texports.Millimeters = Millimeters;\n\texports.Inches = Inches;\n\texports.ToCentimeters = ToCentimeters;\n\texports.ToMillimeters = ToMillimeters;\n\texports.ToInches = ToInches;\n\texports.generateRandomGuid = generateRandomGuid;\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\t//\n\t// Author(s):\n\t// Fr. Matthew Spencer, OSJ <mspencer@osjusa.org>\n\t//\n\t// Copyright (c) 2008-2016 Fr. Matthew Spencer, OSJ\n\t//\n\t// Permission is hereby granted, free of charge, to any person obtaining a copy\n\t// of this software and associated documentation files (the \"Software\"), to deal\n\t// in the Software without restriction, including without limitation the rights\n\t// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n\t// copies of the Software, and to permit persons to whom the Software is\n\t// furnished to do so, subject to the following conditions:\n\t//\n\t// The above copyright notice and this permission notice shall be included in\n\t// all copies or substantial portions of the Software.\n\t//\n\t// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n\t// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n\t// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n\t// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n\t// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n\t// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n\t// THE SOFTWARE.\n\t//\n\t\n\tfunction isDef(val) {\n\t  var undefined;\n\t  return val !== undefined;\n\t};\n\t\n\tvar Units = exports.Units = {\n\t  // enums\n\t  DeviceIndepenedent: 0, // device independent units: 96/inch\n\t  Centimeters: 1,\n\t  Millimeters: 2,\n\t  Inches: 3,\n\t\n\t  // constants for device independent units (diu)\n\t  DIU_PER_INCH: 96,\n\t  DIU_PER_CENTIMETER: 96 / 2.54,\n\t\n\t  ToDeviceIndependent: function ToDeviceIndependent(n, inputUnits) {\n\t    switch (inputUnits) {\n\t      case Centimeters:\n\t        return n * DIU_PER_CENTIMETER;\n\t      case Millimeters:\n\t        return n * DIU_PER_CENTIMETER / 10;\n\t      case Inches:\n\t        return n * DIU_PER_INCH;\n\t      default:\n\t        return n;\n\t    }\n\t  },\n\t\n\t  FromDeviceIndependent: function FromDeviceIndependent(n, outputUnits) {\n\t    switch (outputUnits) {\n\t      case Centimeters:\n\t        return n / DIU_PER_CENTIMETER;\n\t      case Millimeters:\n\t        return n / DIU_PER_CENTIMETER * 10;\n\t      case Inches:\n\t        return n / DIU_PER_INCH;\n\t      default:\n\t        return n;\n\t    }\n\t  },\n\t\n\t  StringToUnitsType: function StringToUnitsType(s) {\n\t    switch (s.ToLower()) {\n\t      case \"in\":\n\t      case \"inches\":\n\t        return Inches;\n\t\n\t      case \"cm\":\n\t      case \"centimeters\":\n\t        return Centimeters;\n\t\n\t      case \"mm\":\n\t      case \"millimeters\":\n\t        return Millimeters;\n\t\n\t      case \"di\":\n\t      case \"device-independent\":\n\t        return DeviceIndepenedent;\n\t\n\t      default:\n\t        return DeviceIndepenedent;\n\t    }\n\t  },\n\t\n\t  UnitsTypeToString: function UnitsTypeToString(units) {\n\t    switch (units) {\n\t      case Inches:\n\t        return \"in\";\n\t      case Centimeters:\n\t        return \"cm\";\n\t      case Millimeters:\n\t        return \"mm\";\n\t      case DeviceIndepenedent:\n\t        return \"device-independent\";\n\t      default:\n\t        return \"device-independent\";\n\t    }\n\t  }\n\t};\n\t\n\tfunction DeviceIndependent(n) {\n\t  return n;\n\t}\n\t\n\tfunction Centimeters(n) {\n\t  return Units.ToDeviceIndependent(n, Units.Centimeters);\n\t}\n\t\n\tfunction Millimeters(n) {\n\t  return Units.ToDeviceIndependent(n, Units.Millimeters);\n\t}\n\t\n\tfunction Inches(n) {\n\t  return Units.ToDeviceIndependent(n, Units.Inches);\n\t}\n\t\n\tfunction ToCentimeters(n) {\n\t  return Units.FromDeviceIndependent(n, Units.Centimeters);\n\t}\n\t\n\tfunction ToMillimeters(n) {\n\t  return Units.FromDeviceIndependent(n, Units.Millimeters);\n\t}\n\t\n\tfunction ToInches(n) {\n\t  return Units.FromDeviceIndependent(n, Units.Inches);\n\t}\n\t\n\t/*\r\n\t * Point\r\n\t */\n\t\n\tvar Point = exports.Point = function () {\n\t  function Point(x, y) {\n\t    _classCallCheck(this, Point);\n\t\n\t    this.x = typeof x !== 'undefined' ? x : 0;\n\t    this.y = typeof y !== 'undefined' ? y : 0;\n\t  }\n\t\n\t  _createClass(Point, [{\n\t    key: \"clone\",\n\t    value: function clone() {\n\t      return new Point(this.x, this.y);\n\t    }\n\t  }]);\n\t\n\t  return Point;\n\t}();\n\t\n\t;\n\t\n\t/*\r\n\t * Rect\r\n\t */\n\t\n\tvar Rect = exports.Rect = function () {\n\t  function Rect(x, y, width, height) {\n\t    _classCallCheck(this, Rect);\n\t\n\t    this.x = typeof x !== 'undefined' ? x : Infinity;\n\t    this.y = typeof y !== 'undefined' ? y : Infinity;\n\t    this.width = isDef(width) ? width : -Infinity;\n\t    this.height = isDef(height) ? height : -Infinity;\n\t  }\n\t\n\t  _createClass(Rect, [{\n\t    key: \"clone\",\n\t    value: function clone() {\n\t      return new Rect(this.x, this.y, this.width, this.height);\n\t    }\n\t  }, {\n\t    key: \"isEmpty\",\n\t    value: function isEmpty() {\n\t      return this.x == Infinity && this.y == Infinity && this.width == -Infinity && this.height == -Infinity;\n\t    }\n\t\n\t    // convenience method\n\t\n\t  }, {\n\t    key: \"right\",\n\t    value: function right() {\n\t      return this.x + this.width;\n\t    }\n\t  }, {\n\t    key: \"bottom\",\n\t    value: function bottom() {\n\t      return this.y + this.bottom;\n\t    }\n\t  }, {\n\t    key: \"equals\",\n\t    value: function equals(rect) {\n\t      return this.x == rect.x && this.y == rect.y && this.width == rect.width && this.height == rect.height;\n\t    }\n\t\n\t    // other can be a Point or a Rect\n\t\n\t  }, {\n\t    key: \"contains\",\n\t    value: function contains(other) {\n\t      if (other instanceof Point) {\n\t        return other.x >= this.x && other.x <= this.x + this.width && other.y >= this.y && other.y <= this.y + this.height;\n\t      } else {\n\t        // better be instance of Rect\n\t        return this.x <= other.x && this.x + this.width >= other.x + other.width && this.y <= other.y && this.y + this.height >= other.y + other.height;\n\t      }\n\t    }\n\t  }, {\n\t    key: \"union\",\n\t    value: function union(rect) {\n\t\n\t      var right = Math.max(this.x + this.width, rect.x + rect.width);\n\t      var bottom = Math.max(this.y + this.height, rect.y + rect.height);\n\t\n\t      this.x = Math.min(this.x, rect.x);\n\t      this.y = Math.min(this.y, rect.y);\n\t\n\t      this.width = right - this.x;\n\t      this.height = bottom - this.y;\n\t    }\n\t  }, {\n\t    key: \"equals\",\n\t    value: function equals(rect) {\n\t      return this.x == rect.x && this.y == rect.y && this.width == rect.width && this.height == rect.height;\n\t    }\n\t\n\t    //static Empty = new Rect(Infinity, Infinity, -Infinity, -Infinity);\n\t\n\t  }]);\n\t\n\t  return Rect;\n\t}();\n\t\n\t/**\r\n\t * Margins\r\n\t *\r\n\t * @class\r\n\t */\n\t\n\t\n\tvar Margins = exports.Margins = function () {\n\t  function Margins(left, top, right, bottom) {\n\t    _classCallCheck(this, Margins);\n\t\n\t    this.left = typeof left !== 'undefined' ? left : 0;\n\t    this.top = typeof top !== 'undefined' ? top : 0;\n\t    this.right = typeof right !== 'undefined' ? right : 0;\n\t    this.bottom = typeof bottom !== 'undefined' ? bottom : 0;\n\t  }\n\t\n\t  _createClass(Margins, [{\n\t    key: \"clone\",\n\t    value: function clone() {\n\t      return new Margins(this.left, this.top, this.right, this.bottom);\n\t    }\n\t  }, {\n\t    key: \"equals\",\n\t    value: function equals(margins) {\n\t      return this.left == margins.left && this.top == margins.top && this.right == margins.right && this.bottom == margins.bottom;\n\t    }\n\t  }]);\n\t\n\t  return Margins;\n\t}();\n\t\n\t;\n\t\n\t/**\r\n\t * Size\r\n\t *\r\n\t * @class\r\n\t */\n\t\n\tvar Size = exports.Size = function () {\n\t  function Size(width, height) {\n\t    _classCallCheck(this, Size);\n\t\n\t    this.width = typeof width !== 'undefined' ? width : 0;\n\t    this.height = typeof height !== 'undefined' ? height : 0;\n\t  }\n\t\n\t  _createClass(Size, [{\n\t    key: \"clone\",\n\t    value: function clone() {\n\t      return new Size(this.width, this.height);\n\t    }\n\t  }, {\n\t    key: \"equals\",\n\t    value: function equals(size) {\n\t      return this.width == size.width && this.height == size.height;\n\t    }\n\t  }]);\n\t\n\t  return Size;\n\t}();\n\t\n\t;\n\t\n\t/*\r\n\t * Pitches, notes\r\n\t */\n\tvar Step = exports.Step = {\n\t  Do: 0,\n\t  Du: 1,\n\t  Re: 2,\n\t  Me: 3,\n\t  Mi: 4,\n\t  Fa: 5,\n\t  Fu: 6,\n\t  So: 7,\n\t  La: 9,\n\t  Te: 10,\n\t  Ti: 11\n\t};\n\t\n\t// this little array helps map step values to staff positions. The numeric values of steps\n\t// correspond to whole step increments (2) or half step increments (1). This gives us the ability\n\t// to compare pitches precisely, but makes it challenging to place steps on the staff. this little\n\t// array maps the steps to an incremental position the steps take on the staff line. This works\n\t// so simply because chant only uses do and fa clefs, and only has a flatted ti (te), making\n\t// for relatively easy mapping to staff line locations.\n\t//                         Do Du Re Me Mi Fa Fu So    La Te Ti\n\tvar __StepToStaffPosition = [0, 0, 1, 1, 2, 3, 3, 4, 4, 5, 6, 6];\n\tvar __StaffOffsetToStep = [Step.Do, Step.Re, Step.Mi, Step.Fa, Step.So, Step.La, Step.Ti]; // no accidentals in this one\n\t\n\tvar Pitch = exports.Pitch = function () {\n\t  function Pitch(step, octave) {\n\t    _classCallCheck(this, Pitch);\n\t\n\t    this.step = step;\n\t    this.octave = octave;\n\t  }\n\t\n\t  _createClass(Pitch, [{\n\t    key: \"toInt\",\n\t    value: function toInt() {\n\t      return this.octave * 12 + this.step;\n\t    }\n\t  }, {\n\t    key: \"isHigherThan\",\n\t    value: function isHigherThan(pitch) {\n\t      return this.toInt() > pitch.toInt();\n\t    }\n\t  }, {\n\t    key: \"isLowerThan\",\n\t    value: function isLowerThan(pitch) {\n\t      return this.toInt() < pitch.toInt();\n\t    }\n\t  }, {\n\t    key: \"equals\",\n\t    value: function equals(pitch) {\n\t      return this.toInt() == pitch.toInt();\n\t    }\n\t  }], [{\n\t    key: \"stepToStaffOffset\",\n\t    value: function stepToStaffOffset(step) {\n\t      return __StepToStaffPosition[step];\n\t    }\n\t  }, {\n\t    key: \"staffOffsetToStep\",\n\t    value: function staffOffsetToStep(offset) {\n\t      while (offset < 0) {\n\t        offset = __StaffOffsetToStep.length + offset;\n\t      }return __StaffOffsetToStep[offset % __StaffOffsetToStep.length];\n\t    }\n\t  }]);\n\t\n\t  return Pitch;\n\t}();\n\t\n\t;\n\t\n\t// for positioning markings on notes\n\tvar MarkingPositionHint = exports.MarkingPositionHint = {\n\t  Default: 0,\n\t  Above: 1,\n\t  Below: 2\n\t};\n\t\n\tfunction generateRandomGuid() {\n\t  function s4() {\n\t    return Math.floor((1 + Math.random()) * 0x10000).toString(16).substring(1);\n\t  }\n\t  return s4() + s4();\n\t};\n\n/***/ },\n/* 2 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.Spanish = exports.Latin = exports.Language = undefined;\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }(); //\n\t// Author(s):\n\t// Fr. Matthew Spencer, OSJ <mspencer@osjusa.org>\n\t//\n\t// Copyright (c) 2008-2016 Fr. Matthew Spencer, OSJ\n\t//\n\t// Permission is hereby granted, free of charge, to any person obtaining a copy\n\t// of this software and associated documentation files (the \"Software\"), to deal\n\t// in the Software without restriction, including without limitation the rights\n\t// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n\t// copies of the Software, and to permit persons to whom the Software is\n\t// furnished to do so, subject to the following conditions:\n\t//\n\t// The above copyright notice and this permission notice shall be included in\n\t// all copies or substantial portions of the Software.\n\t//\n\t// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n\t// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n\t// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n\t// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n\t// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n\t// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n\t// THE SOFTWARE.\n\t//\n\t\n\tvar _Exsurge = __webpack_require__(1);\n\t\n\tvar Exsurge = _interopRequireWildcard(_Exsurge);\n\t\n\tfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\t/**\n\t * @class\n\t */\n\t\n\tvar Language = exports.Language = function () {\n\t  function Language(name) {\n\t    _classCallCheck(this, Language);\n\t\n\t    this.name = typeof name !== 'undefined' ? name : \"<unknown>\";\n\t  }\n\t\n\t  /**\n\t   * @param {String} text The string to parsed into words.\n\t   * @return {Word[]} the resulting parsed words from syllabification\n\t   */\n\t\n\t\n\t  _createClass(Language, [{\n\t    key: 'syllabify',\n\t    value: function syllabify(text) {\n\t\n\t      var parsedWords = [];\n\t\n\t      if (text == undefined || text == \"\") return parsedWords;\n\t\n\t      // Divide the text into words separated by whitespace\n\t      var words = text.split(/[\\s]+/);\n\t\n\t      for (var i = 0, end = words.length; i < end; i++) {\n\t        parsedWords.push(this.syllabifyWord(words[i]));\n\t      }return parsedWords;\n\t    }\n\t  }]);\n\t\n\t  return Language;\n\t}();\n\t\n\t/**\n\t * @class\n\t */\n\t\n\t\n\tvar Latin = exports.Latin = function (_Language) {\n\t  _inherits(Latin, _Language);\n\t\n\t  /**\n\t   * @constructs\n\t   */\n\t\n\t  function Latin() {\n\t    _classCallCheck(this, Latin);\n\t\n\t    // fixme: should we include 'diphthongs' with accented vowels, e.g., áe?\n\t    // fixme: ui is only diphthong in the exceptional cases below (according to Wheelock's Latin)\n\t\n\t    var _this = _possibleConstructorReturn(this, Object.getPrototypeOf(Latin).call(this, \"Latin\"));\n\t\n\t    _this.diphthongs = [\"ae\", \"au\", \"oe\"];\n\t\n\t    // some words that are simply exceptions to standard syllabification rules!\n\t    var wordExceptions = new Object();\n\t\n\t    // ui combos pronounced as dipthongs\n\t    wordExceptions[\"huius\"] = [\"hui\", \"us\"];\n\t    wordExceptions[\"cuius\"] = [\"cui\", \"us\"];\n\t    wordExceptions[\"huic\"] = [\"huic\"];\n\t    wordExceptions[\"cui\"] = [\"cui\"];\n\t    wordExceptions[\"hui\"] = [\"hui\"];\n\t\n\t    _this.vowels = ['a', 'e', 'i', 'o', 'u', 'á', 'é', 'í', 'ó', 'ú', 'æ', 'œ', 'ǽ', // no accented œ in unicode?\n\t    'y']; // y is treated as a vowel; not native to Latin but useful for words borrowed from Greek\n\t\n\t    _this.muteConsonantsAndF = ['b', 'c', 'd', 'g', 'p', 't', 'f'];\n\t\n\t    _this.liquidConsonants = ['l', 'r'];\n\t    return _this;\n\t  }\n\t\n\t  // c must be lowercase!\n\t\n\t\n\t  _createClass(Latin, [{\n\t    key: 'isVowel',\n\t    value: function isVowel(c) {\n\t      for (var i = 0, end = this.vowels.length; i < end; i++) {\n\t        if (this.vowels[i] == c) return true;\n\t      }return false;\n\t    }\n\t\n\t    /**\n\t     * f is not a mute consonant, but we lump it together for syllabification\n\t     * since it is syntactically treated the same way\n\t     *\n\t     * @param {String} c The character to test; must be lowercase\n\t     * @return {boolean} true if c is an f or a mute consonant\n\t     */\n\t\n\t  }, {\n\t    key: 'isMuteConsonantOrF',\n\t    value: function isMuteConsonantOrF(c) {\n\t      for (var i = 0, end = this.muteConsonantsAndF.length; i < end; i++) {\n\t        if (this.muteConsonantsAndF[i] == c) return true;\n\t      }return false;\n\t    }\n\t\n\t    /**\n\t     *\n\t     * @param {String} c The character to test; must be lowercase\n\t     * @return {boolean} true if c is a liquid consonant\n\t     */\n\t\n\t  }, {\n\t    key: 'isLiquidConsonant',\n\t    value: function isLiquidConsonant(c) {\n\t      for (var i = 0, end = this.liquidConsonants.length; i < end; i++) {\n\t        if (this.liquidConsonants[i] == c) return true;\n\t      }return false;\n\t    }\n\t\n\t    /**\n\t     *\n\t     * @param {String} s The string to test; must be lowercase\n\t     * @return {boolean} true if s is a diphthong\n\t     */\n\t\n\t  }, {\n\t    key: 'isDiphthong',\n\t    value: function isDiphthong(s) {\n\t      for (var i = 0, end = this.diphthongs.length; i < end; i++) {\n\t        if (this.diphthongs[i] == s) return true;\n\t      }return false;\n\t    }\n\t\n\t    /**\n\t     * Rules for Latin syllabification (from Collins, \"A Primer on Ecclesiastical Latin\")\n\t     *\n\t     * Divisions occur when:\n\t     *   1. After open vowels (those not followed by a consonant) (e.g., \"pi-us\" and \"De-us\")\n\t     *   2. After vowels followed by a single consonant (e.g., \"vi-ta\" and \"ho-ra\")\n\t     *   3. After the first consonant when two or more consonants follow a vowel\n\t     *      (e.g., \"mis-sa\", \"minis-ter\", and \"san-ctus\").\n\t     *\n\t     * Exceptions:\n\t     *   1. In compound words the consonants stay together (e.g., \"de-scribo\").\n\t     *   2. A mute consonant (b, c, d, g, p, t) or f followed by a liquid consonant (l, r)\n\t     *      go with the succeeding vowel: \"la-crima\", \"pa-tris\"\n\t     *\n\t     * In addition to these rules, Wheelock's Latin provides this sound exception:\n\t     *   -  Also counted as single consonants are qu and the aspirates ch, ph,\n\t     *      th, which should never be separated in syllabification:\n\t     *      architectus, ar-chi-tec-tus; loquacem, lo-qua-cem.\n\t     *\n\t     */\n\t\n\t  }, {\n\t    key: 'syllabifyWord',\n\t    value: function syllabifyWord(word) {\n\t      var syllables = [];\n\t      var haveCompleteSyllable = false;\n\t      var previousWasVowel = false;\n\t      var workingString = word.toLowerCase();\n\t      var startSyllable = 0;\n\t\n\t      var c, lookahead, haveLookahead;\n\t\n\t      // a helper function to create syllables\n\t      var makeSyllable = function makeSyllable(length) {\n\t        if (haveCompleteSyllable) {\n\t          syllables.push(word.substr(startSyllable, length));\n\t          startSyllable += length;\n\t        }\n\t\n\t        haveCompleteSyllable = false;\n\t      };\n\t\n\t      for (var i = 0, wordLength = workingString.length; i < wordLength; i++) {\n\t\n\t        c = workingString[i];\n\t\n\t        // get our lookahead in case we need them...\n\t        lookahead = '*';\n\t        haveLookahead = i + 1 < wordLength;\n\t\n\t        if (haveLookahead) lookahead = workingString[i + 1];\n\t\n\t        var cIsVowel = this.isVowel(c);\n\t\n\t        // i is a special case for a vowel. when i is at the beginning\n\t        // of the word (Iesu) or i is between vowels (alleluia),\n\t        // then the i is treated as a consonant (y)\n\t        if (c == 'i') {\n\t          if (i == 0 && haveLookahead && this.isVowel(lookahead)) cIsVowel = false;else if (previousWasVowel && haveLookahead && this.isVowel(lookahead)) {\n\t            cIsVowel = false;\n\t          }\n\t        }\n\t\n\t        if (c == '-') {\n\t\n\t          // a hyphen forces a syllable break, which effectively resets\n\t          // the logic...\n\t\n\t          haveCompleteSyllable = true;\n\t          previousWasVowel = false;\n\t          makeSyllable(i - startSyllable);\n\t          startSyllable++;\n\t        } else if (cIsVowel) {\n\t\n\t          // once we get a vowel, we have a complete syllable\n\t          haveCompleteSyllable = true;\n\t\n\t          if (previousWasVowel && !this.isDiphthong(workingString[i - 1] + \"\" + c)) {\n\t            makeSyllable(i - startSyllable);\n\t            haveCompleteSyllable = true;\n\t          }\n\t\n\t          previousWasVowel = true;\n\t        } else if (haveLookahead) {\n\t\n\t          if (c == 'q' && lookahead == 'u' || lookahead == 'h' && (c == 'c' || c == 'p' || c == 't')) {\n\t            // handle wheelock's exceptions for qu, ch, ph and th\n\t            makeSyllable(i - startSyllable);\n\t            i++; // skip over the 'h' or 'u'\n\t          } else if (previousWasVowel && this.isVowel(lookahead)) {\n\t              // handle division rule 2\n\t              makeSyllable(i - startSyllable);\n\t            } else if (this.isMuteConsonantOrF(c) && this.isLiquidConsonant(lookahead)) {\n\t              // handle exception 2\n\t              makeSyllable(i - startSyllable);\n\t            } else if (haveCompleteSyllable) {\n\t              // handle division rule 3\n\t              makeSyllable(i + 1 - startSyllable);\n\t            }\n\t\n\t          previousWasVowel = false;\n\t        }\n\t      }\n\t\n\t      // if we have a complete syllable, we can add it as a new one. Otherwise\n\t      // we tack the remaining characters onto the last syllable.\n\t      if (haveCompleteSyllable) syllables.push(word.substr(startSyllable));else if (startSyllable > 0) syllables[syllables.length - 1] += word.substr(startSyllable);\n\t\n\t      return syllables;\n\t    }\n\t\n\t    /**\n\t     * @param {String} s the string to search\n\t     * @param {Number} startIndex The index at which to start searching for a vowel in the string\n\t     * @retuns a custom class with three properties: {found: (true/false) startIndex: (start index in s of vowel segment) length ()}\n\t     */\n\t\n\t  }, {\n\t    key: 'findVowelSegment',\n\t    value: function findVowelSegment(s, startIndex) {\n\t\n\t      var i, end, index;\n\t      var workingString = s.toLowerCase();\n\t\n\t      // do we have a diphthongs?\n\t      for (i = 0, end = this.diphthongs.length; i < end; i++) {\n\t        var d = this.diphthongs[i];\n\t        index = workingString.indexOf(d, startIndex);\n\t\n\t        if (index >= 0) return { found: true, startIndex: index, length: d.length };\n\t      }\n\t\n\t      // no diphthongs. Let's look for single vowels then...\n\t      for (i = 0, end = this.vowels.length; i < end; i++) {\n\t        index = workingString.indexOf(this.vowels[i], startIndex);\n\t\n\t        if (index >= 0) return { found: true, startIndex: index, length: 1 };\n\t      }\n\t\n\t      // no vowels sets found after startIndex!\n\t      return { found: false, startIndex: -1, length: -1 };\n\t    }\n\t  }]);\n\t\n\t  return Latin;\n\t}(Language);\n\t\n\t/**\n\t * @class\n\t */\n\t\n\t\n\tvar Spanish = exports.Spanish = function (_Language2) {\n\t  _inherits(Spanish, _Language2);\n\t\n\t  function Spanish() {\n\t    _classCallCheck(this, Spanish);\n\t\n\t    var _this2 = _possibleConstructorReturn(this, Object.getPrototypeOf(Spanish).call(this, \"Spanish\"));\n\t\n\t    _this2.vowels = ['a', 'e', 'i', 'o', 'u', 'y', 'á', 'é', 'í', 'ó', 'ú', 'ü'];\n\t\n\t    _this2.weakVowels = ['i', 'u', 'ü', 'y'];\n\t\n\t    _this2.strongVowels = ['a', 'e', 'o', 'á', 'é', 'í', 'ó', 'ú'];\n\t\n\t    _this2.dipthongs = [\"ai\", \"ei\", \"oi\", \"ui\", \"ia\", \"ie\", \"io\", \"iu\", \"au\", \"eu\", \"ou\", \"ua\", \"ue\", \"uo\", \"ái\", \"éi\", \"ói\", \"úi\", \"iá\", \"ié\", \"ió\", \"iú\", \"áu\", \"éu\", \"óu\", \"uá\", \"ué\", \"uó\", \"üe\", \"üi\"];\n\t\n\t    _this2.uDipthongExpections = [\"gue\", \"gui\", \"qua\", \"que\", \"qui\", \"quo\"];\n\t    return _this2;\n\t  }\n\t\n\t  // c must be lowercase!\n\t\n\t\n\t  _createClass(Spanish, [{\n\t    key: 'isVowel',\n\t    value: function isVowel(c) {\n\t      for (var i = 0, end = this.vowels.length; i < end; i++) {\n\t        if (this.vowels[i] == c) return true;\n\t      }return false;\n\t    }\n\t\n\t    /**\n\t     * @param {String} c The character to test; must be lowercase\n\t     * @return {boolean} true if c is an f or a mute consonant\n\t     */\n\t\n\t  }, {\n\t    key: 'isWeakVowel',\n\t    value: function isWeakVowel(c) {\n\t      for (var i = 0, end = this.weakVowels.length; i < end; i++) {\n\t        if (this.weakVowels[i] == c) return true;\n\t      }return false;\n\t    }\n\t\n\t    /**\n\t     * @param {String} c The character to test; must be lowercase\n\t     * @return {boolean} true if c is an f or a mute consonant\n\t     */\n\t\n\t  }, {\n\t    key: 'isStrongVowel',\n\t    value: function isStrongVowel(c) {\n\t      for (var i = 0, end = this.strongVowels.length; i < end; i++) {\n\t        if (this.strongVowels[i] == c) return true;\n\t      }return false;\n\t    }\n\t\n\t    /**\n\t     *\n\t     * @param {String} s The string to test; must be lowercase\n\t     * @return {boolean} true if s is a diphthong\n\t     */\n\t\n\t  }, {\n\t    key: 'isDiphthong',\n\t    value: function isDiphthong(s) {\n\t      for (var i = 0, end = this.diphthongs.length; i < end; i++) {\n\t        if (this.diphthongs[i] == s) return true;\n\t      }return false;\n\t    }\n\t  }, {\n\t    key: 'createSyllable',\n\t    value: function createSyllable(text) {\n\t\n\t      /*\n\t          var accented = false;\n\t          var ellidesToNext = false;\n\t      \n\t          if (text.length > 0) {\n\t              \n\t              if (text[0] == '`') {\n\t                  accented = true;\n\t                  text = text.substr(1);\n\t              }\n\t      \n\t              if (text[text.length - 1] == '_') {\n\t                  ellidesToNext = true;\n\t                  text = text.substr(0, text.length - 1);\n\t              }\n\t          }\n\t      \n\t          var s = new Syllable(text);\n\t      \n\t          s.isMusicalAccent = accented;\n\t          s.elidesToNext = ellidesToNext;*/\n\t\n\t      return text;\n\t    }\n\t\n\t    /**\n\t     */\n\t\n\t  }, {\n\t    key: 'syllabifyWord',\n\t    value: function syllabifyWord(word) {\n\t\n\t      var syllables = [];\n\t\n\t      var haveCompleteSyllable = false;\n\t      var previousIsVowel = false;\n\t      var previousIsStrongVowel = false; // only valid if previousIsVowel == true\n\t      var startSyllable = 0;\n\t\n\t      // fixme: first check for prefixes\n\t\n\t      for (i = 0; i < word.length; i++) {\n\t\n\t        var c = word[i].toLowerCase();\n\t\n\t        if (this.isVowel(c)) {\n\t\n\t          // we have a complete syllable as soon as we have a vowel\n\t          haveCompleteSyllable = true;\n\t\n\t          var cIsStrongVowel = this.isStrongVowel(c);\n\t\n\t          if (previousIsVowel) {\n\t            // if we're at a strong vowel, then we finish out the last syllable\n\t            if (cIsStrongVowel) {\n\t              if (previousIsStrongVowel) {\n\t                syllables.push(this.createSyllable(word.substr(startSyllable, i - startSyllable)));\n\t                startSyllable = i;\n\t              }\n\t            }\n\t          }\n\t\n\t          previousIsVowel = true;\n\t          previousIsStrongVowel = cIsStrongVowel;\n\t        } else {\n\t          if (!haveCompleteSyllable) {\n\t            // do nothing since we don't have a complete syllable yet...\n\t          } else {\n\t\n\t              // handle explicit syllable breaks\n\t              if (word[i] == '-') {\n\t                // start new syllable\n\t                syllables.push(this.createSyllable(word.substr(startSyllable, i - startSyllable)));\n\t                startSyllable = ++i;\n\t              } else {\n\t\n\t                var numberOfConsonants = 1;\n\t\n\t                // count how many more consonants there are\n\t                for (j = i + 1; j < word.length; j++) {\n\t                  if (this.isVowel(word[j])) break;\n\t                  numberOfConsonants++;\n\t                }\n\t\n\t                if (numberOfConsonants == 1) {\n\t                  // start new syllable\n\t                  syllables.push(this.createSyllable(word.substr(startSyllable, i - startSyllable)));\n\t                  startSyllable = i;\n\t                } else if (numberOfConsonants == 2) {\n\t                  var consonant2 = word[i + 1].toLowerCase();\n\t                  if (consonant2 == 'l' || consonant2 == 'r' || c == 'c' && consonant2 == 'h') {\n\t                    // split before the consonant pair\n\t                    syllables.push(this.createSyllable(word.substr(startSyllable, i - startSyllable)));\n\t                    startSyllable = i++;\n\t                  } else {\n\t                    //split the consonants\n\t                    syllables.push(this.createSyllable(word.substr(startSyllable, ++i - startSyllable)));\n\t                    startSyllable = i;\n\t                  }\n\t                } else if (numberOfConsonants == 3) {\n\t                  var consonant2 = word[i + 1].toLowerCase();\n\t\n\t                  // if second consonant is s, divide cc-c, otherwise divide c-cc\n\t                  if (consonant2 == 's') {\n\t                    i += 2;\n\t                    syllables.push(this.createSyllable(word.substr(startSyllable, i - startSyllable)));\n\t                  } else {\n\t                    syllables.push(this.createSyllable(word.substr(startSyllable, ++i - startSyllable)));\n\t                  }\n\t\n\t                  startSyllable = i;\n\t                } else if (numberOfConsonants == 4) {\n\t                  // four always get split cc-cc\n\t                  syllables.push(this.createSyllable(word.substr(startSyllable, i - startSyllable + 2)));\n\t                  startSyllable = i + 2;\n\t                  i += 3;\n\t                }\n\t              }\n\t\n\t              haveCompleteSyllable = false;\n\t            }\n\t\n\t          previousIsVowel = false;\n\t        }\n\t      }\n\t\n\t      // if we have a complete syllable, we can add it as a new one. Otherwise\n\t      // we tack the remaining characters onto the last syllable.\n\t      if (haveCompleteSyllable) syllables.push(word.substr(startSyllable));else if (startSyllable > 0) syllables[syllables.length - 1] += word.substr(startSyllable);else if (syllables.length == 0) syllables.push(this.createSyllable(word));\n\t\n\t      return syllables;\n\t    }\n\t\n\t    /**\n\t     * @param {String} s the string to search\n\t     * @param {Number} startIndex The index at which to start searching for a vowel in the string\n\t     * @retuns a custom class with three properties: {found: (true/false) startIndex: (start index in s of vowel segment) length ()}\n\t     */\n\t\n\t  }, {\n\t    key: 'findVowelSegment',\n\t    value: function findVowelSegment(s, startIndex) {\n\t\n\t      var i, end, index;\n\t      var workingString = s.toLowerCase();\n\t\n\t      // do we have a diphthongs?\n\t      for (i = 0, end = this.diphthongs.length; i < end; i++) {\n\t        var d = this.diphthongs[i];\n\t        index = workingString.indexOf(d, startIndex);\n\t\n\t        if (index >= 0) {\n\t\n\t          // check the exceptions...\n\t          if (d[0] == 'u' && index > 0) {\n\t            var tripthong = s.substr(index - 1, 3).toLowerCase();\n\t\n\t            for (j = 0, endj = this.uDipthongExpections.length; i < endj; j++) {\n\t              if (tripthong == this.uDipthongExpections[j]) {\n\t                // search from after the u...\n\t                return this.findVowelSegment(s, index + 1);\n\t              }\n\t            }\n\t          }\n\t\n\t          return { found: true, startIndex: index, length: d.length };\n\t        }\n\t      }\n\t\n\t      // no diphthongs. Let's look for single vowels then...\n\t      for (i = 0, end = this.vowels.length; i < end; i++) {\n\t        index = workingString.indexOf(this.vowels[i], startIndex);\n\t\n\t        if (index >= 0) return { found: true, startIndex: index, length: 1 };\n\t      }\n\t\n\t      // no vowels sets found after startIndex!\n\t      return { found: false, startIndex: -1, length: -1 };\n\t    }\n\t  }]);\n\t\n\t  return Spanish;\n\t}(Language);\n\n/***/ },\n/* 3 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t//\n\t// Author(s):\n\t// Fr. Matthew Spencer, OSJ <mspencer@osjusa.org>\n\t//\n\t// Copyright (c) 2008-2016 Fr. Matthew Spencer, OSJ\n\t//\n\t// Permission is hereby granted, free of charge, to any person obtaining a copy\n\t// of this software and associated documentation files (the \"Software\"), to deal\n\t// in the Software without restriction, including without limitation the rights\n\t// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n\t// copies of the Software, and to permit persons to whom the Software is\n\t// furnished to do so, subject to the following conditions:\n\t//\n\t// The above copyright notice and this permission notice shall be included in\n\t// all copies or substantial portions of the Software.\n\t//\n\t// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n\t// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n\t// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n\t// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n\t// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n\t// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n\t// THE SOFTWARE.\n\t//\n\t\n\t// generated based on the svg data\n\tvar Glyphs = exports.Glyphs = {\n\t  \"None\": {\n\t    \"svgSrc\": \"<g></g>\",\n\t    \"paths\": [{\n\t      \"type\": \"positive\",\n\t      \"data\": \"\"\n\t    }],\n\t    \"bounds\": {\n\t      \"x\": 0,\n\t      \"y\": 0,\n\t      \"width\": 0,\n\t      \"height\": 0\n\t    },\n\t    \"origin\": {\n\t      \"x\": 0,\n\t      \"y\": 0\n\t    }\n\t  },\n\t  \"AcuteAccent\": {\n\t    \"svgSrc\": \"<path d=\\\"M4 0C-.614.52-.614.52-.803-3.182l60.768-108.422c4.52-7.182 10.543-13.67 18.075-13.67 5.27 0 14.31 1.264 23.346 7.793 7.53 5.223 8.803 11.752 8.803 16.975 0 3.917-.52 11.1-8.05 17.628L4 0z\\\"/>\",\n\t    \"paths\": [{\n\t      \"type\": \"positive\",\n\t      \"data\": \"M4 0C-.614.52-.614.52-.803-3.182l60.768-108.422c4.52-7.182 10.543-13.67 18.075-13.67 5.27 0 14.31 1.264 23.346 7.793 7.53 5.223 8.803 11.752 8.803 16.975 0 3.917-.52 11.1-8.05 17.628L4 0z\"\n\t    }],\n\t    \"bounds\": {\n\t      \"x\": 0,\n\t      \"y\": 0,\n\t      \"width\": 110.99200439453125,\n\t      \"height\": 125.79399108886719\n\t    },\n\t    \"origin\": {\n\t      \"x\": 0.8030000329017639,\n\t      \"y\": 125.27399444580078\n\t    }\n\t  },\n\t  \"Apostropha\": {\n\t    \"svgSrc\": \"<path d=\\\"M1.22-73.438c4.165 13.02 12.238 27.084 24.217 42.188L49.657 0 34.812 27.344C18.666 55.47-.084 72.396-21.438 78.124c4.687-3.645 7.03-8.593 7.03-14.843 0-8.853-4.947-20.572-14.843-35.155L-48 0 1.22-73.438z\\\"/>\",\n\t    \"paths\": [{\n\t      \"type\": \"positive\",\n\t      \"data\": \"M1.22-73.438c4.165 13.02 12.238 27.084 24.217 42.188L49.657 0 34.812 27.344C18.666 55.47-.084 72.396-21.438 78.124c4.687-3.645 7.03-8.593 7.03-14.843 0-8.853-4.947-20.572-14.843-35.155L-48 0 1.22-73.438z\"\n\t    }],\n\t    \"bounds\": {\n\t      \"x\": 0,\n\t      \"y\": 0,\n\t      \"width\": 97.65699768066406,\n\t      \"height\": 151.56201171875\n\t    },\n\t    \"origin\": {\n\t      \"x\": 48,\n\t      \"y\": 73.43800354003906\n\t    }\n\t  },\n\t  \"BeginningAscLiquescent\": {\n\t    \"svgSrc\": \"<path d=\\\"M-50 43.688V-61c4.167 7.292 12.76 10.938 25.78 10.938 9.376 0 20.053-1.563 32.032-4.688C31.773-60.48 45.833-71.677 50-88.344v117.97C43.75 42.645 32.812 51.5 17.187 56.186-.52 61.398-15.886 64-28.906 64-42.97 64-50 57.23-50 43.687z\\\"/>\",\n\t    \"paths\": [{\n\t      \"type\": \"positive\",\n\t      \"data\": \"M-50 43.688V-61c4.167 7.292 12.76 10.938 25.78 10.938 9.376 0 20.053-1.563 32.032-4.688C31.773-60.48 45.833-71.677 50-88.344v117.97C43.75 42.645 32.812 51.5 17.187 56.186-.52 61.398-15.886 64-28.906 64-42.97 64-50 57.23-50 43.687z\"\n\t    }],\n\t    \"bounds\": {\n\t      \"x\": 0,\n\t      \"y\": 0,\n\t      \"width\": 100,\n\t      \"height\": 152.343994140625\n\t    },\n\t    \"origin\": {\n\t      \"x\": 50,\n\t      \"y\": 88.34400177001953\n\t    }\n\t  },\n\t  \"BeginningDesLiquescent\": {\n\t    \"svgSrc\": \"<path d=\\\"M-50-56.03c0-13.022 7.03-19.532 21.094-19.532 13.02 0 28.385 2.604 46.093 7.812C32.813-63.583 43.75-54.73 50-41.187V76C45.833 59.854 31.77 48.656 7.812 42.406c-11.98-3.125-22.656-4.687-32.03-4.687-13.022 0-21.615 3.905-25.782 11.718v-105.47z\\\"/>\",\n\t    \"paths\": [{\n\t      \"type\": \"positive\",\n\t      \"data\": \"M-50-56.03c0-13.022 7.03-19.532 21.094-19.532 13.02 0 28.385 2.604 46.093 7.812C32.813-63.583 43.75-54.73 50-41.187V76C45.833 59.854 31.77 48.656 7.812 42.406c-11.98-3.125-22.656-4.687-32.03-4.687-13.022 0-21.615 3.905-25.782 11.718v-105.47z\"\n\t    }],\n\t    \"bounds\": {\n\t      \"x\": 0,\n\t      \"y\": 0,\n\t      \"width\": 100,\n\t      \"height\": 151.56199645996094\n\t    },\n\t    \"origin\": {\n\t      \"x\": 50,\n\t      \"y\": 75.56199645996094\n\t    }\n\t  },\n\t  \"CustodDescLong\": {\n\t    \"svgSrc\": \"<path d=\\\"M39.063 273.472c5.73.52 7.29-6.25 4.687-20.312V-65.59c-13.542 2.083-24.22 5.468-32.03 10.156C3.905-50.226 0-43.714 0-35.904V71.91c5.73-5.21 10.677-8.594 14.844-10.157 5.73-1.562 12.24-2.343 19.53-2.343v196.875c0 11.458 1.563 17.187 4.688 17.187z\\\"/>\",\n\t    \"paths\": [{\n\t      \"type\": \"positive\",\n\t      \"data\": \"M39.063 273.472c5.73.52 7.29-6.25 4.687-20.312V-65.59c-13.542 2.083-24.22 5.468-32.03 10.156C3.905-50.226 0-43.714 0-35.904V71.91c5.73-5.21 10.677-8.594 14.844-10.157 5.73-1.562 12.24-2.343 19.53-2.343v196.875c0 11.458 1.563 17.187 4.688 17.187\"\n\t    }],\n\t    \"bounds\": {\n\t      \"x\": 0,\n\t      \"y\": 0,\n\t      \"width\": 46.35300064086914,\n\t      \"height\": 339.58197021484375\n\t    },\n\t    \"origin\": {\n\t      \"x\": 0,\n\t      \"y\": 65.58999633789062\n\t    }\n\t  },\n\t  \"CustodDescShort\": {\n\t    \"svgSrc\": \"<path d=\\\"M34.375 191.923c0 8.333 1.563 12.24 4.688 11.72 3.125-.522 4.687-7.033 4.687-19.533v-250c-13.542 2.084-24.22 5.47-32.03 10.157C3.905-50.525 0-44.015 0-36.203V71.61c5.73-5.208 10.677-8.593 14.844-10.156 5.73-1.562 12.24-2.344 19.53-2.344v132.813z\\\"/>\",\n\t    \"paths\": [{\n\t      \"type\": \"positive\",\n\t      \"data\": \"M34.375 191.923c0 8.333 1.563 12.24 4.688 11.72 3.125-.522 4.687-7.033 4.687-19.533v-250c-13.542 2.084-24.22 5.47-32.03 10.157C3.905-50.525 0-44.015 0-36.203V71.61c5.73-5.208 10.677-8.593 14.844-10.156 5.73-1.562 12.24-2.344 19.53-2.344v132.813z\"\n\t    }],\n\t    \"bounds\": {\n\t      \"x\": 0,\n\t      \"y\": 0,\n\t      \"width\": 43.75,\n\t      \"height\": 270.0530090332031\n\t    },\n\t    \"origin\": {\n\t      \"x\": 0,\n\t      \"y\": 65.88999938964844\n\t    }\n\t  },\n\t  \"CustodLong\": {\n\t    \"svgSrc\": \"<path d=\\\"M39.063-269.562c5.73-.52 7.29 6.25 4.687 20.312V69.5c-13.542-2.083-24.22-5.47-32.03-10.156C3.905 54.134 0 47.624 0 39.812V-68c5.73 5.208 10.677 8.594 14.844 10.156 5.73 1.563 12.24 2.344 19.53 2.344v-196.875c0-11.458 1.563-17.187 4.688-17.187z\\\"/>\",\n\t    \"paths\": [{\n\t      \"type\": \"positive\",\n\t      \"data\": \"M39.063-269.562c5.73-.52 7.29 6.25 4.687 20.312V69.5c-13.542-2.083-24.22-5.47-32.03-10.156C3.905 54.134 0 47.624 0 39.812V-68c5.73 5.208 10.677 8.594 14.844 10.156 5.73 1.563 12.24 2.344 19.53 2.344v-196.875c0-11.458 1.563-17.187 4.688-17.187z\"\n\t    }],\n\t    \"bounds\": {\n\t      \"x\": 0,\n\t      \"y\": 0,\n\t      \"width\": 46.35300064086914,\n\t      \"height\": 339.5820007324219\n\t    },\n\t    \"origin\": {\n\t      \"x\": 0,\n\t      \"y\": 270.0820007324219\n\t    }\n\t  },\n\t  \"CustodShort\": {\n\t    \"svgSrc\": \"<path d=\\\"M34.375-188.125c0-8.333 1.563-12.24 4.688-11.72 3.125.522 4.687 7.033 4.687 19.532v250c-13.542-2.083-24.22-5.468-32.03-10.156C3.905 54.324 0 47.813 0 40V-67.813c5.73 5.21 10.677 8.594 14.844 10.157 5.73 1.562 12.24 2.344 19.53 2.343v-132.812z\\\"/>\",\n\t    \"paths\": [{\n\t      \"type\": \"positive\",\n\t      \"data\": \"M34.375-188.125c0-8.333 1.563-12.24 4.688-11.72 3.125.522 4.687 7.033 4.687 19.532v250c-13.542-2.083-24.22-5.468-32.03-10.156C3.905 54.324 0 47.813 0 40V-67.813c5.73 5.21 10.677 8.594 14.844 10.157 5.73 1.562 12.24 2.344 19.53 2.343v-132.812z\"\n\t    }],\n\t    \"bounds\": {\n\t      \"x\": 0,\n\t      \"y\": 0,\n\t      \"width\": 43.75,\n\t      \"height\": 270.052001953125\n\t    },\n\t    \"origin\": {\n\t      \"x\": 0,\n\t      \"y\": 200.36500549316406\n\t    }\n\t  },\n\t  \"DoClef\": {\n\t    \"svgSrc\": \"<path d=\\\"M0 98.406V-97.688C0-118 5.99-134.275 17.97-146.516c11.978-12.24 27.603-18.36 46.874-18.36 10.937 0 19.53 3.126 25.78 9.376s9.376 14.583 9.376 25v107.813l-6.25-5.47c-4.167-3.645-10.287-7.42-18.36-11.327-8.072-3.907-16.796-5.86-26.17-5.86-11.46 0-21.486 4.427-30.08 13.282-8.593 8.854-12.89 19.53-12.89 32.03s4.297 23.308 12.89 32.423c8.594 9.115 18.62 13.672 30.08 13.672 9.374 0 18.098-1.822 26.17-5.468 8.073-3.646 14.193-7.292 18.36-10.938l6.25-6.25V132c0 9.896-3.125 18.1-9.375 24.61-6.25 6.51-14.844 9.765-25.78 9.765-19.272 0-34.897-6.25-46.876-18.75C5.99 135.125 0 118.72 0 98.405z\\\"/>\",\n\t    \"paths\": [{\n\t      \"type\": \"positive\",\n\t      \"data\": \"M0 98.406V-97.688C0-118 5.99-134.275 17.97-146.516c11.978-12.24 27.603-18.36 46.874-18.36 10.937 0 19.53 3.126 25.78 9.376s9.376 14.583 9.376 25v107.813l-6.25-5.47c-4.167-3.645-10.287-7.42-18.36-11.327-8.072-3.907-16.796-5.86-26.17-5.86-11.46 0-21.486 4.427-30.08 13.282-8.593 8.854-12.89 19.53-12.89 32.03s4.297 23.308 12.89 32.423c8.594 9.115 18.62 13.672 30.08 13.672 9.374 0 18.098-1.822 26.17-5.468 8.073-3.646 14.193-7.292 18.36-10.938l6.25-6.25V132c0 9.896-3.125 18.1-9.375 24.61-6.25 6.51-14.844 9.765-25.78 9.765-19.272 0-34.897-6.25-46.876-18.75C5.99 135.125 0 118.72 0 98.405z\"\n\t    }],\n\t    \"bounds\": {\n\t      \"x\": 0,\n\t      \"y\": 0,\n\t      \"width\": 100,\n\t      \"height\": 331.2510070800781\n\t    },\n\t    \"origin\": {\n\t      \"x\": 0,\n\t      \"y\": 164.87600708007812\n\t    }\n\t  },\n\t  \"FaClef\": {\n\t    \"svgSrc\": \"<path d=\\\"M85.156-32v193.75c0 9.375-1.562 14.323-4.687 14.844-1.564 0-2.605-.52-3.126-1.563-.52-1.04-.782-2.603-.78-4.686V56.28c-8.335-8.332-19.793-12.5-34.376-12.5-17.71 0-31.77 3.907-42.188 11.72V-32c0-18.23 14.193-27.344 42.578-27.344 28.385 0 42.578 9.115 42.578 27.344zM98.438 93V-92.156c0-19.27 5.73-34.896 17.187-46.875 11.458-11.98 26.562-17.97 45.313-17.97 10.937 0 19.14 2.865 24.61 8.594 5.467 5.73 8.202 13.542 8.202 23.437v103.126l-5.47-4.687c-3.645-3.647-9.374-7.293-17.186-10.94-7.813-3.645-15.886-5.467-24.22-5.468-11.978 0-22.004 4.167-30.077 12.5-8.073 8.334-12.11 18.36-12.11 30.08 0 11.717 4.037 22.004 12.11 30.858s18.1 13.28 30.078 13.28c8.333 0 16.406-1.822 24.22-5.468 7.81-3.645 13.54-7.03 17.186-10.156l5.47-5.468V125.81c0 9.896-2.865 17.84-8.594 23.83-5.73 5.988-13.802 8.983-24.22 8.983-18.75 0-33.853-6.12-45.31-18.36-11.46-12.24-17.19-27.994-17.19-47.265z\\\"/>\",\n\t    \"paths\": [{\n\t      \"type\": \"positive\",\n\t      \"data\": \"M85.156-32v193.75c0 9.375-1.562 14.323-4.687 14.844-1.564 0-2.605-.52-3.126-1.563-.52-1.04-.782-2.603-.78-4.686V56.28c-8.335-8.332-19.793-12.5-34.376-12.5-17.71 0-31.77 3.907-42.188 11.72V-32c0-18.23 14.193-27.344 42.578-27.344 28.385 0 42.578 9.115 42.578 27.344zM98.438 93V-92.156c0-19.27 5.73-34.896 17.187-46.875 11.458-11.98 26.562-17.97 45.313-17.97 10.937 0 19.14 2.865 24.61 8.594 5.467 5.73 8.202 13.542 8.202 23.437v103.126l-5.47-4.687c-3.645-3.647-9.374-7.293-17.186-10.94-7.813-3.645-15.886-5.467-24.22-5.468-11.978 0-22.004 4.167-30.077 12.5-8.073 8.334-12.11 18.36-12.11 30.08 0 11.717 4.037 22.004 12.11 30.858s18.1 13.28 30.078 13.28c8.333 0 16.406-1.822 24.22-5.468 7.81-3.645 13.54-7.03 17.186-10.156l5.47-5.468V125.81c0 9.896-2.865 17.84-8.594 23.83-5.73 5.988-13.802 8.983-24.22 8.983-18.75 0-33.853-6.12-45.31-18.36-11.46-12.24-17.19-27.994-17.19-47.265z\"\n\t    }],\n\t    \"bounds\": {\n\t      \"x\": 0,\n\t      \"y\": 0,\n\t      \"width\": 193.75201416015625,\n\t      \"height\": 333.5950012207031\n\t    },\n\t    \"origin\": {\n\t      \"x\": 0.001003265380859375,\n\t      \"y\": 157.00100708007812\n\t    }\n\t  },\n\t  \"Flat\": {\n\t    \"svgSrc\": \"<path d=\\\"M7.813-204.406c4.166 0 6.25 5.208 6.25 15.625L12.5-10.657C33.854 13.302 54.167 25.28 73.438 25.28c9.374 0 14.062-4.686 14.062-14.06 0-6.25-1.042-11.72-3.125-16.407-2.083-4.688-7.03-9.766-14.844-15.235-7.81-5.47-13.02-8.984-15.624-10.547L27.344-45.81V-80.97c17.187 0 33.073 4.82 47.656 14.454C89.583-56.88 96.875-47.376 96.875-38c0 67.708-.26 101.562-.78 101.563-38.543 0-69.532-12.24-92.97-36.72C0-52.322-1.042-123.936 0-188c0-10.937 2.604-16.406 7.813-16.406z\\\"/>\",\n\t    \"paths\": [{\n\t      \"type\": \"positive\",\n\t      \"data\": \"M7.813-204.406c4.166 0 6.25 5.208 6.25 15.625L12.5-10.657C33.854 13.302 54.167 25.28 73.438 25.28c9.374 0 14.062-4.686 14.062-14.06 0-6.25-1.042-11.72-3.125-16.407-2.083-4.688-7.03-9.766-14.844-15.235-7.81-5.47-13.02-8.984-15.624-10.547L27.344-45.81V-80.97c17.187 0 33.073 4.82 47.656 14.454C89.583-56.88 96.875-47.376 96.875-38c0 67.708-.26 101.562-.78 101.563-38.543 0-69.532-12.24-92.97-36.72C0-52.322-1.042-123.936 0-188c0-10.937 2.604-16.406 7.813-16.406z\"\n\t    }],\n\t    \"bounds\": {\n\t      \"x\": 0,\n\t      \"y\": 0,\n\t      \"width\": 97.91699981689453,\n\t      \"height\": 267.968994140625\n\t    },\n\t    \"origin\": {\n\t      \"x\": 1.0420000553131104,\n\t      \"y\": 204.406005859375\n\t    }\n\t  },\n\t  \"Mora\": {\n\t    \"svgSrc\": \"<path d=\\\"M47.478-24c6.957 0 12.793 2.288 17.49 6.883C69.662-12.52 72-6.904 72-.267c0 6.64-2.337 12.352-7.033 17.118C60.27 21.618 54.435 24 47.477 24c-6.26 0-11.748-2.383-16.444-7.15C26.337 12.086 24 6.374 24-.265c0-6.638 2.337-12.255 7.033-16.85C35.73-21.713 41.217-24 47.478-24z\\\"/>\",\n\t    \"paths\": [{\n\t      \"type\": \"positive\",\n\t      \"data\": \"M47.478-24c6.957 0 12.793 2.288 17.49 6.883C69.662-12.52 72-6.904 72-.267c0 6.64-2.337 12.352-7.033 17.118C60.27 21.618 54.435 24 47.477 24c-6.26 0-11.748-2.383-16.444-7.15C26.337 12.086 24 6.374 24-.265c0-6.638 2.337-12.255 7.033-16.85C35.73-21.713 41.217-24 47.478-24z\"\n\t    }],\n\t    \"bounds\": {\n\t      \"x\": 0,\n\t      \"y\": 0,\n\t      \"width\": 48,\n\t      \"height\": 48\n\t    },\n\t    \"origin\": {\n\t      \"x\": -24,\n\t      \"y\": 24\n\t    }\n\t  },\n\t  \"Natural\": {\n\t    \"svgSrc\": \"<path d=\\\"M7.906-166.563c-2.864 0-5.614.52-8.218 1.563v13.28l.78 56.25.782 78.907v85.157c.52 3.646 2.604 5.73 6.25 6.25l23.438-3.906 23.437-3.907v29.69c0 42.186-.26 63.54-.78 64.06l6.25 2.345c1.04.52 2.082.78 3.124.78 2.603 0 4.947-1.3 7.03-3.905L67.656-71.25c-.52-2.604-2.083-3.906-4.687-3.906-7.814 0-17.19 1.04-28.126 3.125l-19.53 3.124.78-38.28V-165c-2.604-1.042-5.323-1.562-8.188-1.563zM55.938-40v71.875l-41.407 7.03c0-48.436.262-72.655.783-72.655L55.938-40z\\\"/>\",\n\t    \"paths\": [{\n\t      \"type\": \"positive\",\n\t      \"data\": \"M7.906-166.563c-2.864 0-5.614.52-8.218 1.563v13.28l.78 56.25.782 78.907v85.157c.52 3.646 2.604 5.73 6.25 6.25l23.438-3.906 23.437-3.907v29.69c0 42.186-.26 63.54-.78 64.06l6.25 2.345c1.04.52 2.082.78 3.124.78 2.603 0 4.947-1.3 7.03-3.905L67.656-71.25c-.52-2.604-2.083-3.906-4.687-3.906-7.814 0-17.19 1.04-28.126 3.125l-19.53 3.124.78-38.28V-165c-2.604-1.042-5.323-1.562-8.188-1.563zM55.938-40v71.875l-41.407 7.03c0-48.436.262-72.655.783-72.655L55.938-40z\"\n\t    }],\n\t    \"bounds\": {\n\t      \"x\": 0,\n\t      \"y\": 0,\n\t      \"width\": 70.31100463867188,\n\t      \"height\": 330.468994140625\n\t    },\n\t    \"origin\": {\n\t      \"x\": 0.3120002746582031,\n\t      \"y\": 166.56300354003906\n\t    }\n\t  },\n\t  \"OriscusAsc\": {\n\t    \"svgSrc\": \"<path d=\\\"M50 30.25c0 12.5-3.125 21.354-9.375 26.562-3.125 2.605-7.813 3.907-14.063 3.907-3.125 0-5.99-.522-8.593-1.564-2.605-1.04-5.6-2.474-8.986-4.297C5.6 53.035 2.734 51.603.39 50.56c-2.343-1.04-5.338-2.474-8.984-4.296-3.646-1.823-6.77-3.256-9.375-4.297-2.603-1.043-5.468-1.564-8.593-1.564-6.25 0-10.937 1.563-14.062 4.688C-46.875 50.824-50 59.677-50 71.656v-106.25c0-13.02 3.125-21.875 9.375-26.562 3.125-2.604 7.813-3.906 14.063-3.907 3.125 0 5.99.52 8.593 1.563 2.605 1.042 5.73 2.474 9.376 4.297 3.646 1.823 6.51 2.995 8.594 3.516l10.938 5.468c6.25 3.126 11.458 4.69 15.624 4.69 6.25 0 10.938-1.564 14.063-4.69C46.875-55.426 50-64.02 50-76V30.25z\\\"/>\",\n\t    \"paths\": [{\n\t      \"type\": \"positive\",\n\t      \"data\": \"M50 30.25c0 12.5-3.125 21.354-9.375 26.562-3.125 2.605-7.813 3.907-14.063 3.907-3.125 0-5.99-.522-8.593-1.564-2.605-1.04-5.6-2.474-8.986-4.297C5.6 53.035 2.734 51.603.39 50.56c-2.343-1.04-5.338-2.474-8.984-4.296-3.646-1.823-6.77-3.256-9.375-4.297-2.603-1.043-5.468-1.564-8.593-1.564-6.25 0-10.937 1.563-14.062 4.688C-46.875 50.824-50 59.677-50 71.656v-106.25c0-13.02 3.125-21.875 9.375-26.562 3.125-2.604 7.813-3.906 14.063-3.907 3.125 0 5.99.52 8.593 1.563 2.605 1.042 5.73 2.474 9.376 4.297 3.646 1.823 6.51 2.995 8.594 3.516l10.938 5.468c6.25 3.126 11.458 4.69 15.624 4.69 6.25 0 10.938-1.564 14.063-4.69C46.875-55.426 50-64.02 50-76V30.25z\"\n\t    }],\n\t    \"bounds\": {\n\t      \"x\": 0,\n\t      \"y\": 0,\n\t      \"width\": 100,\n\t      \"height\": 147.656005859375\n\t    },\n\t    \"origin\": {\n\t      \"x\": 50,\n\t      \"y\": 76\n\t    }\n\t  },\n\t  \"OriscusDes\": {\n\t    \"svgSrc\": \"<path d=\\\"M-50 30.844v-106.25c0 11.458 3.125 20.052 9.375 25.78 3.125 3.126 7.813 4.69 14.063 4.688 4.687 0 13.41-3.255 26.17-9.765 12.762-6.51 21.746-9.766 26.954-9.766 6.25 0 10.938 1.303 14.063 3.907C46.875-55.874 50-47.02 50-34V72.25c0-11.98-3.125-20.833-9.375-26.563C37.5 42.563 32.812 41 26.562 41 21.875 41 13.023 44.385 0 51.156c-4.167 2.604-8.594 4.948-13.28 7.032-4.69 2.083-9.116 3.124-13.283 3.124-6.25 0-10.937-1.302-14.062-3.906C-46.875 52.198-50 43.344-50 30.844z\\\"/>\",\n\t    \"paths\": [{\n\t      \"type\": \"positive\",\n\t      \"data\": \"M-50 30.844v-106.25c0 11.458 3.125 20.052 9.375 25.78 3.125 3.126 7.813 4.69 14.063 4.688 4.687 0 13.41-3.255 26.17-9.765 12.762-6.51 21.746-9.766 26.954-9.766 6.25 0 10.938 1.303 14.063 3.907C46.875-55.874 50-47.02 50-34V72.25c0-11.98-3.125-20.833-9.375-26.563C37.5 42.563 32.812 41 26.562 41 21.875 41 13.023 44.385 0 51.156c-4.167 2.604-8.594 4.948-13.28 7.032-4.69 2.083-9.116 3.124-13.283 3.124-6.25 0-10.937-1.302-14.062-3.906C-46.875 52.198-50 43.344-50 30.844z\"\n\t    }],\n\t    \"bounds\": {\n\t      \"x\": 0,\n\t      \"y\": 0,\n\t      \"width\": 100,\n\t      \"height\": 147.656005859375\n\t    },\n\t    \"origin\": {\n\t      \"x\": 50,\n\t      \"y\": 75.40599822998047\n\t    }\n\t  },\n\t  \"PodatusLower\": {\n\t    \"svgSrc\": \"<path d=\\\"M-4.688-30.28c22.396 0 34.636-.262 36.72-.782 5.728-1.563 8.593-5.21 8.593-10.938H50v97.656c0 2.604-1.302 4.167-3.906 4.688-5.21.52-21.355.78-48.438.78-23.958 0-38.54-.26-43.75-.78-2.604 0-3.906-1.302-3.906-3.906v-82.032c0-3.646 1.302-5.468 3.906-5.468h2.344c2.604.52 15.625.78 39.063.78z\\\"/>\",\n\t    \"paths\": [{\n\t      \"type\": \"positive\",\n\t      \"data\": \"M-4.688-30.28c22.396 0 34.636-.262 36.72-.782 5.728-1.563 8.593-5.21 8.593-10.938H50v97.656c0 2.604-1.302 4.167-3.906 4.688-5.21.52-21.355.78-48.438.78-23.958 0-38.54-.26-43.75-.78-2.604 0-3.906-1.302-3.906-3.906v-82.032c0-3.646 1.302-5.468 3.906-5.468h2.344c2.604.52 15.625.78 39.063.78z\"\n\t    }],\n\t    \"bounds\": {\n\t      \"x\": 0,\n\t      \"y\": 0,\n\t      \"width\": 100,\n\t      \"height\": 103.12399291992188\n\t    },\n\t    \"origin\": {\n\t      \"x\": 50,\n\t      \"y\": 42\n\t    }\n\t  },\n\t  \"PodatusUpper\": {\n\t    \"svgSrc\": \"<path d=\\\"M-46.094-63.78c13.542 0 24.61 2.473 33.203 7.42C-4.298-51.41 0-43.99 0-34.093V62h-9.375c0-10.938-2.604-19.14-7.812-24.61-5.21-5.468-14.844-8.203-28.907-8.202-18.23 0-33.333 4.166-45.312 12.5v-75.782c0-19.79 15.104-29.687 45.312-29.687z\\\"/>\",\n\t    \"paths\": [{\n\t      \"type\": \"positive\",\n\t      \"data\": \"M-46.094-63.78c13.542 0 24.61 2.473 33.203 7.42C-4.298-51.41 0-43.99 0-34.093V62h-9.375c0-10.938-2.604-19.14-7.812-24.61-5.21-5.468-14.844-8.203-28.907-8.202-18.23 0-33.333 4.166-45.312 12.5v-75.782c0-19.79 15.104-29.687 45.312-29.687z\"\n\t    }],\n\t    \"bounds\": {\n\t      \"x\": 0,\n\t      \"y\": 0,\n\t      \"width\": 91.406005859375,\n\t      \"height\": 125.78099822998047\n\t    },\n\t    \"origin\": {\n\t      \"x\": 91.406005859375,\n\t      \"y\": 63.78099822998047\n\t    }\n\t  },\n\t  \"Porrectus1\": {\n\t    \"svgSrc\": \"<path d=\\\"M233.594 162.875c-58.855 0-107.032-6.25-144.53-18.75C34.895 125.895-11.46 99.855-50 66V-52.75C-21.354-24.625 26.302 6.885 92.97 41.78 123.697 57.928 163.54 66 212.5 66c21.354 0 34.635-9.896 39.844-29.688V151.94c0 7.29-6.25 10.937-18.75 10.937z\\\"/>\",\n\t    \"paths\": [{\n\t      \"type\": \"positive\",\n\t      \"data\": \"M233.594 162.875c-58.855 0-107.032-6.25-144.53-18.75C34.895 125.895-11.46 99.855-50 66V-52.75C-21.354-24.625 26.302 6.885 92.97 41.78 123.697 57.928 163.54 66 212.5 66c21.354 0 34.635-9.896 39.844-29.688V151.94c0 7.29-6.25 10.937-18.75 10.937z\"\n\t    }],\n\t    \"bounds\": {\n\t      \"x\": 0,\n\t      \"y\": 0,\n\t      \"width\": 302.343994140625,\n\t      \"height\": 215.6269989013672\n\t    },\n\t    \"origin\": {\n\t      \"x\": 50,\n\t      \"y\": 52.75\n\t    }\n\t  },\n\t  \"Porrectus2\": {\n\t    \"svgSrc\": \"<path d=\\\"M309.375 259.375c-50.52 0-110.938-22.396-181.25-67.188C48.437 141.667-10.938 94.272-50 50V-68.75C0-3.125 60.417 52.083 131.25 96.875c58.333 36.98 110.677 58.854 157.03 65.625h7.033c16.145 0 26.822-9.896 32.03-29.688v114.844c0 7.812-5.99 11.72-17.968 11.72z\\\"/>\",\n\t    \"paths\": [{\n\t      \"type\": \"positive\",\n\t      \"data\": \"M309.375 259.375c-50.52 0-110.938-22.396-181.25-67.188C48.437 141.667-10.938 94.272-50 50V-68.75C0-3.125 60.417 52.083 131.25 96.875c58.333 36.98 110.677 58.854 157.03 65.625h7.033c16.145 0 26.822-9.896 32.03-29.688v114.844c0 7.812-5.99 11.72-17.968 11.72z\"\n\t    }],\n\t    \"bounds\": {\n\t      \"x\": 0,\n\t      \"y\": 0,\n\t      \"width\": 377.3429870605469,\n\t      \"height\": 328.1260070800781\n\t    },\n\t    \"origin\": {\n\t      \"x\": 50,\n\t      \"y\": 68.75\n\t    }\n\t  },\n\t  \"Porrectus3\": {\n\t    \"svgSrc\": \"<path d=\\\"M309.375 355.78c-48.96-16.666-109.115-55.468-180.47-116.405C79.428 198.23 19.793 134.687-50 48.75V-70C20 40 94.104 103.79 135.25 148.063 190 200 230 230 288.28 258.906c4.168 2.083 8.334 3.125 12.5 3.125 12.5 0 21.355-10.937 26.564-32.81v114.06c0 9.376-3.386 14.063-10.156 14.064-2.084 0-4.688-.522-7.813-1.563z\\\"/>\",\n\t    \"paths\": [{\n\t      \"type\": \"positive\",\n\t      \"data\": \"M309.375 355.78c-48.96-16.666-109.115-55.468-180.47-116.405C79.428 198.23 19.793 134.687-50 48.75V-70C20 40 94.104 103.79 135.25 148.063 190 200 230 230 288.28 258.906c4.168 2.083 8.334 3.125 12.5 3.125 12.5 0 21.355-10.937 26.564-32.81v114.06c0 9.376-3.386 14.063-10.156 14.064-2.084 0-4.688-.522-7.813-1.563z\"\n\t    }],\n\t    \"bounds\": {\n\t      \"x\": 0,\n\t      \"y\": 0,\n\t      \"width\": 377.343994140625,\n\t      \"height\": 427.3450012207031\n\t    },\n\t    \"origin\": {\n\t      \"x\": 50,\n\t      \"y\": 70\n\t    }\n\t  },\n\t  \"Porrectus4\": {\n\t    \"svgSrc\": \"<path d=\\\"M350 453.438c-52.754-22.397-120-77.345-201.74-164.844C90.87 227.656 24.784 147.708-50 48.75V-70C-8.84-1.25 58.406 86.51 151.74 193.28c60.868 69.793 119.13 124.22 174.782 163.282 5.797 3.646 11.014 5.47 15.652 5.47 12.173 0 21.45-11.72 27.826-35.157V441.72c0 9.373-3.19 14.06-9.565 14.06-2.9 0-6.377-.78-10.435-2.342z\\\"/>\",\n\t    \"paths\": [{\n\t      \"type\": \"positive\",\n\t      \"data\": \"M350 453.438c-52.754-22.397-120-77.345-201.74-164.844C90.87 227.656 24.784 147.708-50 48.75V-70C-8.84-1.25 58.406 86.51 151.74 193.28c60.868 69.793 119.13 124.22 174.782 163.282 5.797 3.646 11.014 5.47 15.652 5.47 12.173 0 21.45-11.72 27.826-35.157V441.72c0 9.373-3.19 14.06-9.565 14.06-2.9 0-6.377-.78-10.435-2.342z\"\n\t    }],\n\t    \"bounds\": {\n\t      \"x\": 0,\n\t      \"y\": 0,\n\t      \"width\": 420,\n\t      \"height\": 525.780029296875\n\t    },\n\t    \"origin\": {\n\t      \"x\": 50,\n\t      \"y\": 70\n\t    }\n\t  },\n\t  \"PunctumCavum\": {\n\t    \"svgSrc\": \"<path d=\\\"M0-60.906c33.333 0 50 9.635 50 28.906v94.53C39.062 51.595 22.396 46.126 0 46.126s-39.063 5.47-50 16.406V-32c0-19.27 16.667-28.906 50-28.906z\\\"/><path fill=\\\"#fff\\\" d=\\\"M.08-42.56c9.585.206 20.126.53 27.954 6.822 4.96 3.9 4.71 10.792 4.574 16.482v51.278C22.09 27.066 7.283 26.072.168 26.01c-7.72.23-21.895.935-32.616 4.674.04-19.197-.083-38.395.064-57.59.567-7.5 7.834-12.33 14.62-13.774 5.818-1.498 11.857-1.86 17.844-1.88z\\\"/>\",\n\t    \"paths\": [{\n\t      \"type\": \"positive\",\n\t      \"data\": \"M0-60.906c33.333 0 50 9.635 50 28.906v94.53C39.062 51.595 22.396 46.126 0 46.126s-39.063 5.47-50 16.406V-32c0-19.27 16.667-28.906 50-28.906z\"\n\t    }, {\n\t      \"type\": \"negative\",\n\t      \"data\": \"M.08-42.56c9.585.206 20.126.53 27.954 6.822 4.96 3.9 4.71 10.792 4.574 16.482v51.278C22.09 27.066 7.283 26.072.168 26.01c-7.72.23-21.895.935-32.616 4.674.04-19.197-.083-38.395.064-57.59.567-7.5 7.834-12.33 14.62-13.774 5.818-1.498 11.857-1.86 17.844-1.88z\"\n\t    }],\n\t    \"bounds\": {\n\t      \"x\": 0,\n\t      \"y\": 0,\n\t      \"width\": 100,\n\t      \"height\": 123.43799591064453\n\t    },\n\t    \"origin\": {\n\t      \"x\": 50,\n\t      \"y\": 60.90599822998047\n\t    }\n\t  },\n\t  \"PunctumCuadratum\": {\n\t    \"svgSrc\": \"<path d=\\\"M0-60.906c33.333 0 50 9.635 50 28.906v94.53C39.062 51.595 22.396 46.126 0 46.126s-39.063 5.47-50 16.406V-32c0-19.27 16.667-28.906 50-28.906z\\\"/>\",\n\t    \"paths\": [{\n\t      \"type\": \"positive\",\n\t      \"data\": \"M0-60.906c33.333 0 50 9.635 50 28.906v94.53C39.062 51.595 22.396 46.126 0 46.126s-39.063 5.47-50 16.406V-32c0-19.27 16.667-28.906 50-28.906z\"\n\t    }],\n\t    \"bounds\": {\n\t      \"x\": 0,\n\t      \"y\": 0,\n\t      \"width\": 100,\n\t      \"height\": 123.43799591064453\n\t    },\n\t    \"origin\": {\n\t      \"x\": 50,\n\t      \"y\": 60.90599822998047\n\t    }\n\t  },\n\t  \"PunctumCuadratumAscLiquescent\": {\n\t    \"svgSrc\": \"<path d=\\\"M-50 43.688V-61c4.167 7.292 12.76 10.938 25.78 10.938 9.376 0 20.053-1.563 32.032-4.688C31.773-60.48 45.833-71.677 50-88.344v117.97C43.75 42.645 32.812 51.5 17.187 56.186-.52 61.398-15.886 64-28.906 64-42.97 64-50 57.23-50 43.687z\\\"/>\",\n\t    \"paths\": [{\n\t      \"type\": \"positive\",\n\t      \"data\": \"M-50 43.688V-61c4.167 7.292 12.76 10.938 25.78 10.938 9.376 0 20.053-1.563 32.032-4.688C31.773-60.48 45.833-71.677 50-88.344v117.97C43.75 42.645 32.812 51.5 17.187 56.186-.52 61.398-15.886 64-28.906 64-42.97 64-50 57.23-50 43.687z\"\n\t    }],\n\t    \"bounds\": {\n\t      \"x\": 0,\n\t      \"y\": 0,\n\t      \"width\": 100,\n\t      \"height\": 152.343994140625\n\t    },\n\t    \"origin\": {\n\t      \"x\": 50,\n\t      \"y\": 88.34400177001953\n\t    }\n\t  },\n\t  \"PunctumCuadratumDesLiquescent\": {\n\t    \"svgSrc\": \"<path d=\\\"M-50-56.03c0-13.022 7.03-19.532 21.094-19.532 13.02 0 28.385 2.604 46.093 7.812C32.813-63.583 43.75-54.73 50-41.187V76C45.833 59.854 31.77 48.656 7.812 42.406c-11.98-3.125-22.656-4.687-32.03-4.687-13.022 0-21.615 3.905-25.782 11.718v-105.47z\\\"/>\",\n\t    \"paths\": [{\n\t      \"type\": \"positive\",\n\t      \"data\": \"M-50-56.03c0-13.022 7.03-19.532 21.094-19.532 13.02 0 28.385 2.604 46.093 7.812C32.813-63.583 43.75-54.73 50-41.187V76C45.833 59.854 31.77 48.656 7.812 42.406c-11.98-3.125-22.656-4.687-32.03-4.687-13.022 0-21.615 3.905-25.782 11.718v-105.47z\"\n\t    }],\n\t    \"bounds\": {\n\t      \"x\": 0,\n\t      \"y\": 0,\n\t      \"width\": 100,\n\t      \"height\": 151.56199645996094\n\t    },\n\t    \"origin\": {\n\t      \"x\": 50,\n\t      \"y\": 75.56199645996094\n\t    }\n\t  },\n\t  \"PunctumInclinatum\": {\n\t    \"svgSrc\": \"<path d=\\\"M0-75.78L50 0 0 75-50 0 0-75.78z\\\"/>\",\n\t    \"paths\": [{\n\t      \"type\": \"positive\",\n\t      \"data\": \"M0-75.78L50 0 0 75-50 0 0-75.78z\"\n\t    }],\n\t    \"bounds\": {\n\t      \"x\": 0,\n\t      \"y\": 0,\n\t      \"width\": 100,\n\t      \"height\": 150.77999877929688\n\t    },\n\t    \"origin\": {\n\t      \"x\": 50,\n\t      \"y\": 75.77999877929688\n\t    }\n\t  },\n\t  \"Quilisma\": {\n\t    \"svgSrc\": \"<path d=\\\"M-50 34.938V-51c5.73 20.833 13.02 31.25 21.875 31.25 7.813 0 12.5-15.625 14.063-46.875 3.645 12.5 6.9 21.224 9.765 26.172s6.9 7.422 12.11 7.422c5.208 0 9.374-14.324 12.5-42.97 5.73 22.917 10.677 34.375 14.843 34.375 5.73 0 10.677-15.885 14.844-47.656v100c0 17.707-3.125 26.56-9.375 26.56-4.688 0-9.115-5.988-13.28-17.968-2.085 21.875-8.074 32.813-17.97 32.813-7.813 0-16.146-7.292-25-21.875-4.688 20.312-10.677 30.47-17.97 30.47-5.207 0-9.244-2.605-12.108-7.814C-48.568 47.698-50 41.708-50 34.938z\\\"/>\",\n\t    \"paths\": [{\n\t      \"type\": \"positive\",\n\t      \"data\": \"M-50 34.938V-51c5.73 20.833 13.02 31.25 21.875 31.25 7.813 0 12.5-15.625 14.063-46.875 3.645 12.5 6.9 21.224 9.765 26.172s6.9 7.422 12.11 7.422c5.208 0 9.374-14.324 12.5-42.97 5.73 22.917 10.677 34.375 14.843 34.375 5.73 0 10.677-15.885 14.844-47.656v100c0 17.707-3.125 26.56-9.375 26.56-4.688 0-9.115-5.988-13.28-17.968-2.085 21.875-8.074 32.813-17.97 32.813-7.813 0-16.146-7.292-25-21.875-4.688 20.312-10.677 30.47-17.97 30.47-5.207 0-9.244-2.605-12.108-7.814C-48.568 47.698-50 41.708-50 34.938z\"\n\t    }],\n\t    \"bounds\": {\n\t      \"x\": 0,\n\t      \"y\": 0,\n\t      \"width\": 100,\n\t      \"height\": 150\n\t    },\n\t    \"origin\": {\n\t      \"x\": 50,\n\t      \"y\": 89.28199768066406\n\t    }\n\t  },\n\t  \"TerminatingAscLiquescent\": {\n\t    \"svgSrc\": \"<path d=\\\"M-9.375 40.22c0-11.98-4.948-17.97-14.844-17.97-10.936 0-19.53 3.646-25.78 10.938v-53.126c0-6.77 2.604-12.76 7.813-17.968 5.208-5.21 10.677-8.594 16.406-10.157 2.603-.52 5.207-.78 7.81-.78 3.647 0 7.032.78 10.157 2.343C-2.603-43.896 0-39.73 0-34V73.03h-9.375V40.22z\\\"/>\",\n\t    \"paths\": [{\n\t      \"type\": \"positive\",\n\t      \"data\": \"M-9.375 40.22c0-11.98-4.948-17.97-14.844-17.97-10.936 0-19.53 3.646-25.78 10.938v-53.126c0-6.77 2.604-12.76 7.813-17.968 5.208-5.21 10.677-8.594 16.406-10.157 2.603-.52 5.207-.78 7.81-.78 3.647 0 7.032.78 10.157 2.343C-2.603-43.896 0-39.73 0-34V73.03h-9.375V40.22z\"\n\t    }],\n\t    \"bounds\": {\n\t      \"x\": 0,\n\t      \"y\": 0,\n\t      \"width\": 49.999000549316406,\n\t      \"height\": 121.87299346923828\n\t    },\n\t    \"origin\": {\n\t      \"x\": 49.999000549316406,\n\t      \"y\": 48.842994689941406\n\t    }\n\t  },\n\t  \"TerminatingDesLiquescent\": {\n\t    \"svgSrc\": \"<path d=\\\"M-9.375-48.156V-80.97H0V26.845c0 5.73-2.604 9.896-7.813 12.5-3.125 1.562-6.51 2.343-10.156 2.343-2.603 0-5.207-.26-7.81-.78-5.73-1.563-11.2-4.95-16.407-10.157C-47.398 25.542-50 19.292-50 12v-52.344c6.25 7.292 14.844 10.938 25.78 10.938 9.897 0 14.845-6.25 14.845-18.75z\\\"/>\",\n\t    \"paths\": [{\n\t      \"type\": \"positive\",\n\t      \"data\": \"M-9.375-48.156V-80.97H0V26.845c0 5.73-2.604 9.896-7.813 12.5-3.125 1.562-6.51 2.343-10.156 2.343-2.603 0-5.207-.26-7.81-.78-5.73-1.563-11.2-4.95-16.407-10.157C-47.398 25.542-50 19.292-50 12v-52.344c6.25 7.292 14.844 10.938 25.78 10.938 9.897 0 14.845-6.25 14.845-18.75z\"\n\t    }],\n\t    \"bounds\": {\n\t      \"x\": 0,\n\t      \"y\": 0,\n\t      \"width\": 50,\n\t      \"height\": 122.65800476074219\n\t    },\n\t    \"origin\": {\n\t      \"x\": 50,\n\t      \"y\": 80.97000122070312\n\t    }\n\t  },\n\t  \"VerticalEpisemaAbove\": {\n\t    \"svgSrc\": \"<path d=\\\"M-8-80H8L4 0h-8l-4-80z\\\"/>\",\n\t    \"paths\": [{\n\t      \"type\": \"positive\",\n\t      \"data\": \"M-8-80H8L4 0h-8l-4-80z\"\n\t    }],\n\t    \"bounds\": {\n\t      \"x\": 0,\n\t      \"y\": 0,\n\t      \"width\": 16,\n\t      \"height\": 80\n\t    },\n\t    \"origin\": {\n\t      \"x\": 8,\n\t      \"y\": 80\n\t    }\n\t  },\n\t  \"VerticalEpisemaBelow\": {\n\t    \"svgSrc\": \"<path d=\\\"M-8 80H8L4 0h-8l-4 80z\\\"/>\",\n\t    \"paths\": [{\n\t      \"type\": \"positive\",\n\t      \"data\": \"M-8 80H8L4 0h-8l-4 80z\"\n\t    }],\n\t    \"bounds\": {\n\t      \"x\": 0,\n\t      \"y\": 0,\n\t      \"width\": 16,\n\t      \"height\": 80\n\t    },\n\t    \"origin\": {\n\t      \"x\": 8,\n\t      \"y\": 0\n\t    }\n\t  },\n\t  \"VirgaLong\": {\n\t    \"svgSrc\": \"<path d=\\\"M50-38v285.156c0 6.77-2.344 10.937-7.03 12.5-1.564 0-2.605-.78-3.126-2.344-.52-1.562-.782-10.156-.782-25.78V54.186C29.168 45.334 16.146 40.907 0 40.907c-22.917 0-39.583 5.208-50 15.624V-38c0-19.27 16.667-28.906 50-28.906S50-57.27 50-38z\\\"/>\",\n\t    \"paths\": [{\n\t      \"type\": \"positive\",\n\t      \"data\": \"M50-38v285.156c0 6.77-2.344 10.937-7.03 12.5-1.564 0-2.605-.78-3.126-2.344-.52-1.562-.782-10.156-.782-25.78V54.186C29.168 45.334 16.146 40.907 0 40.907c-22.917 0-39.583 5.208-50 15.624V-38c0-19.27 16.667-28.906 50-28.906S50-57.27 50-38z\"\n\t    }],\n\t    \"bounds\": {\n\t      \"x\": 0,\n\t      \"y\": 0,\n\t      \"width\": 100,\n\t      \"height\": 326.56201171875\n\t    },\n\t    \"origin\": {\n\t      \"x\": 50,\n\t      \"y\": 66.90599822998047\n\t    }\n\t  },\n\t  \"VirgaShort\": {\n\t    \"svgSrc\": \"<path d=\\\"M50-38v211.72c0 7.29-2.344 11.457-7.03 12.5-1.564 0-2.606-.783-3.126-2.345-.52-1.563-.782-10.156-.782-25.78V54.187C29.167 45.332 16.146 40.906 0 40.906c-22.917 0-39.583 5.21-50 15.625V-38c0-19.27 16.667-28.906 50-28.906S50-57.27 50-38z\\\"/>\",\n\t    \"paths\": [{\n\t      \"type\": \"positive\",\n\t      \"data\": \"M50-38v211.72c0 7.29-2.344 11.457-7.03 12.5-1.564 0-2.606-.783-3.126-2.345-.52-1.563-.782-10.156-.782-25.78V54.187C29.167 45.332 16.146 40.906 0 40.906c-22.917 0-39.583 5.21-50 15.625V-38c0-19.27 16.667-28.906 50-28.906S50-57.27 50-38z\"\n\t    }],\n\t    \"bounds\": {\n\t      \"x\": 0,\n\t      \"y\": 0,\n\t      \"width\": 100,\n\t      \"height\": 253.12600708007812\n\t    },\n\t    \"origin\": {\n\t      \"x\": 50,\n\t      \"y\": 66.90599822998047\n\t    }\n\t  },\n\t  \"Virgula\": {\n\t    \"svgSrc\": \"<path d=\\\"M8.178-55.66c0-22.137 12.092-33.2 36.287-33.2 11.835 0 23.53 5.66 35.108 16.98C91.15-60.547 96.94-41.766 96.94-15.534c0 53.515-31.646 87.487-94.937 101.895-2.048-2.06-3.077-5.146-3.077-9.273 0-1.03.247-1.8.76-2.316 42.71-19.027 64.075-41.678 64.075-67.92 0-11.322-2.325-20.326-6.945-27.016-4.62-6.69-9.52-11.052-14.676-13.11-5.147-2.048-11.836-3.85-20.07-5.403C12.81-39.707 8.18-45.37 8.18-55.66z\\\"/>\",\n\t    \"paths\": [{\n\t      \"type\": \"positive\",\n\t      \"data\": \"M8.178-55.66c0-22.137 12.092-33.2 36.287-33.2 11.835 0 23.53 5.66 35.108 16.98C91.15-60.547 96.94-41.766 96.94-15.534c0 53.515-31.646 87.487-94.937 101.895-2.048-2.06-3.077-5.146-3.077-9.273 0-1.03.247-1.8.76-2.316 42.71-19.027 64.075-41.678 64.075-67.92 0-11.322-2.325-20.326-6.945-27.016-4.62-6.69-9.52-11.052-14.676-13.11-5.147-2.048-11.836-3.85-20.07-5.403C12.81-39.707 8.18-45.37 8.18-55.66z\"\n\t    }],\n\t    \"bounds\": {\n\t      \"x\": 0,\n\t      \"y\": 0,\n\t      \"width\": 98.01399993896484,\n\t      \"height\": 175.2209930419922\n\t    },\n\t    \"origin\": {\n\t      \"x\": 1.0739939212799072,\n\t      \"y\": 88.86000061035156\n\t    }\n\t  }\n\t};\n\n/***/ },\n/* 4 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.ChantNotationElement = exports.Annotation = exports.DropCap = exports.Lyric = exports.LyricType = exports.TextElement = exports.GlyphVisualizer = exports.HorizontalEpisemaLineVisualizer = exports.NeumeLineVisualizer = exports.DividerLineVisualizer = exports.ChantLayoutElement = exports.ChantContext = exports.QuickSvg = exports.GlyphCode = undefined;\n\t\n\tvar _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if (\"value\" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }(); //\n\t// Author(s):\n\t// Fr. Matthew Spencer, OSJ <mspencer@osjusa.org>\n\t//\n\t// Copyright (c) 2008-2016 Fr. Matthew Spencer, OSJ\n\t//\n\t// Permission is hereby granted, free of charge, to any person obtaining a copy\n\t// of this software and associated documentation files (the \"Software\"), to deal\n\t// in the Software without restriction, including without limitation the rights\n\t// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n\t// copies of the Software, and to permit persons to whom the Software is\n\t// furnished to do so, subject to the following conditions:\n\t//\n\t// The above copyright notice and this permission notice shall be included in\n\t// all copies or substantial portions of the Software.\n\t//\n\t// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n\t// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n\t// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n\t// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n\t// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n\t// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n\t// THE SOFTWARE.\n\t//\n\t\n\tvar _Exsurge = __webpack_require__(1);\n\t\n\tvar _Exsurge2 = __webpack_require__(3);\n\t\n\tvar _Exsurge3 = __webpack_require__(2);\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tvar __syllableConnector = \"-\";\n\t\n\tvar GlyphCode = exports.GlyphCode = {\n\t\n\t  None: \"None\",\n\t\n\t  AcuteAccent: \"AcuteAccent\",\n\t  Apostropha: \"Apostropha\",\n\t  //  ApostrophaLiquescent: \"ApostrophaLiquescent\",\n\t\n\t  BeginningAscLiquescent: \"BeginningAscLiquescent\",\n\t  BeginningDesLiquescent: \"BeginningDesLiquescent\",\n\t\n\t  CustodDescLong: \"CustodDescLong\",\n\t  CustodDescShort: \"CustodDescShort\",\n\t  CustodLong: \"CustodLong\",\n\t  CustodShort: \"CustodShort\",\n\t\n\t  // clefs and other markings\n\t  DoClef: \"DoClef\",\n\t  FaClef: \"FaClef\",\n\t  Flat: \"Flat\",\n\t  Mora: \"Mora\",\n\t  Natural: \"Natural\",\n\t  OriscusAsc: \"OriscusAsc\",\n\t  OriscusDes: \"OriscusDes\",\n\t\n\t  PodatusLower: \"PodatusLower\",\n\t  PodatusUpper: \"PodatusUpper\",\n\t\n\t  Porrectus1: \"Porrectus1\", // 1 staff line difference,\n\t  Porrectus2: \"Porrectus2\", // 2 lines difference, etc...\n\t  Porrectus3: \"Porrectus3\",\n\t  Porrectus4: \"Porrectus4\",\n\t\n\t  PunctumCavum: \"PunctumCavum\",\n\t  PunctumCuadratum: \"PunctumCuadratum\",\n\t  PunctumCuadratumAscLiquescent: \"PunctumCuadratumAscLiquescent\",\n\t  PunctumCuadratumDesLiquescent: \"PunctumCuadratumDesLiquescent\",\n\t  PunctumInclinatum: \"PunctumInclinatum\",\n\t  //  PunctumInclinatumLiquescent: \"PunctumInclinatumLiquescent\",\n\t  Quilisma: \"Quilisma\",\n\t\n\t  TerminatingAscLiquescent: \"TerminatingAscLiquescent\",\n\t  TerminatingDesLiquescent: \"TerminatingDesLiquescent\",\n\t  VerticalEpisemaAbove: \"VerticalEpisemaAbove\",\n\t  VerticalEpisemaBelow: \"VerticalEpisemaBelow\",\n\t  VirgaLong: \"VirgaLong\",\n\t  VirgaShort: \"VirgaShort\",\n\t  Virgula: \"Virgula\"\n\t}; // GlyphCode\n\t\n\tvar QuickSvg = exports.QuickSvg = {\n\t\n\t  // namespaces \n\t  ns: 'http://www.w3.org/2000/svg',\n\t  xmlns: 'http://www.w3.org/2000/xmlns/',\n\t  xlink: 'http://www.w3.org/1999/xlink',\n\t\n\t  // create the root level svg object\n\t  svg: function svg(width, height) {\n\t    var node = document.createElementNS(this.ns, 'svg');\n\t\n\t    node.setAttribute('xmlns', this.ns);\n\t    node.setAttribute('version', '1.1');\n\t    node.setAttributeNS(this.xmlns, 'xmlns:xlink', this.xlink);\n\t\n\t    node.setAttribute('width', width);\n\t    node.setAttribute('height', height);\n\t\n\t    // create the defs element\n\t    var defs = document.createElementNS(this.ns, 'defs');\n\t    node.appendChild(defs);\n\t\n\t    node.defs = defs;\n\t\n\t    node.clearNotations = function () {\n\t      // clear out all children except defs\n\t      node.removeChild(defs);\n\t\n\t      while (node.hasChildNodes()) {\n\t        node.removeChild(node.lastChild);\n\t      }node.appendChild(defs);\n\t    };\n\t\n\t    return node;\n\t  },\n\t\n\t  defs: function defs() {\n\t    return node;\n\t  },\n\t\n\t  rect: function rect(width, height) {\n\t    var node = document.createElementNS(this.ns, 'rect');\n\t\n\t    node.setAttribute('width', width);\n\t    node.setAttribute('height', height);\n\t\n\t    return node;\n\t  },\n\t\n\t  line: function line(x1, y1, x2, y2) {\n\t    var node = document.createElementNS(this.ns, 'line');\n\t\n\t    node.setAttribute('x1', x1);\n\t    node.setAttribute('y1', y1);\n\t    node.setAttribute('x2', x2);\n\t    node.setAttribute('y2', y2);\n\t\n\t    return node;\n\t  },\n\t\n\t  g: function g() {\n\t    var node = document.createElementNS(this.ns, 'g');\n\t\n\t    return node;\n\t  },\n\t\n\t  text: function text() {\n\t    var node = document.createElementNS(this.ns, 'text');\n\t\n\t    return node;\n\t  },\n\t\n\t  tspan: function tspan(str) {\n\t    var node = document.createElementNS(this.ns, 'tspan');\n\t    node.textContent = str;\n\t\n\t    return node;\n\t  },\n\t\n\t  // nodeRef should be the id of the object in defs (without the #)\n\t  use: function use(nodeRef) {\n\t    var node = document.createElementNS(this.ns, 'use');\n\t    node.setAttributeNS(this.xlink, \"xlink:href\", '#' + nodeRef);\n\t\n\t    return node;\n\t  },\n\t\n\t  createFragment: function createFragment(name, attributes, child) {\n\t    if (child === undefined || child === null) child = '';\n\t\n\t    var fragment = '<' + name + ' ';\n\t\n\t    for (var attr in attributes) {\n\t      fragment += attr + '=\"' + attributes[attr] + '\" ';\n\t    }fragment += '>' + child + '</' + name + '>';\n\t\n\t    return fragment;\n\t  },\n\t\n\t  parseFragment: function parseFragment(fragment) {\n\t\n\t    // create temporary holder\n\t    var well = document.createElement('svg');\n\t\n\t    // act as a setter if svg is given\n\t    if (fragment) {\n\t\n\t      var container = this.g();\n\t\n\t      // dump raw svg\n\t      // do this to allow the browser to automatically create svg nodes?\n\t      well.innerHTML = '<svg>' + fragment.replace(/\\n/, '').replace(/<(\\w+)([^<]+?)\\/>/g, '<$1$2></$1>') + '</svg>';\n\t\n\t      // transplant nodes\n\t      for (var i = 0, il = well.firstChild.childNodes.length; i < il; i++) {\n\t        container.appendChild(well.firstChild.firstChild);\n\t      }return container;\n\t    }\n\t  },\n\t\n\t  translate: function translate(node, x, y) {\n\t    node.setAttribute('transform', 'translate(' + x + ',' + y + ')');\n\t    return node;\n\t  },\n\t\n\t  scale: function scale(node, sx, sy) {\n\t    node.setAttribute('transform', 'scale(' + sx + ',' + sy + ')');\n\t    return node;\n\t  }\n\t};\n\t\n\t/*\r\n\t * ChantContext\r\n\t */\n\t\n\tvar ChantContext = exports.ChantContext = function () {\n\t  function ChantContext() {\n\t    _classCallCheck(this, ChantContext);\n\t\n\t    this.defs = {};\n\t\n\t    // font styles\n\t    this.lyricTextSize = 16; // in points?\n\t    this.lyricTextFont = 'Minion Pro';\n\t    this.lyricTextColor = \"#000\";\n\t\n\t    this.dropCapTextSize = 64;\n\t    this.dropCapTextFont = this.lyricTextFont;\n\t    this.dropCapTextColor = this.lyricTextColor;\n\t\n\t    this.annotationTextSize = 13;\n\t    this.annotationTextFont = this.lyricTextFont;\n\t    this.annotationTextColor = this.lyricTextColor;\n\t\n\t    // everything depends on the scale of the punctum\n\t    this.glyphPunctumWidth = _Exsurge2.Glyphs.PunctumCuadratum.bounds.width;\n\t    this.glyphPunctumHeight = _Exsurge2.Glyphs.PunctumCuadratum.bounds.height;\n\t\n\t    // fixme: for now, we just set these using the glyph scales as noted above, presuming a\n\t    // staff line size of 0.5 in. Really what we should do is scale the punctum size based\n\t    // on the text metrics, right? 1 punctum ~ x height size?\n\t    this.glyphScaling = 1.0 / 16.0;\n\t\n\t    this.staffInterval = this.glyphPunctumWidth * this.glyphScaling;\n\t    this.staffLineWeight = this.glyphPunctumWidth * this.glyphScaling / 8;\n\t    this.neumeLineWeight = this.glyphPunctumWidth * this.glyphScaling / 8; // the weight of connecting lines in the glyphs.\n\t    this.dividerLineWeight = this.neumeLineWeight; // of quarter bar, half bar, etc.\n\t    this.episemaLineWeight = this.neumeLineWeight; // of horizontal episemae\n\t\n\t    // for keeping track of the clef\n\t    this.activeClef = null;\n\t\n\t    this.staffLineColor = \"#000\";\n\t    this.dividerLineColor = \"#000\";\n\t\n\t    this.defaultLanguage = new _Exsurge3.Latin();\n\t\n\t    // compile the paths objects for the glyphs so we can render them quickly to the canvas\n\t    for (var glyphName in _Exsurge2.Glyphs) {\n\t      var glyph = _Exsurge2.Glyphs[glyphName];\n\t\n\t      for (var i = 0; i < glyph.paths.length; i++) {\n\t        glyph.paths[i].path2D = new Path2D(glyph.paths[i].data);\n\t      }\n\t    }\n\t\n\t    this.svgTextMeasurer = QuickSvg.svg(1, 1);\n\t    this.svgTextMeasurer.setAttribute('id', \"TextMeasurer\");\n\t    document.querySelector('body').appendChild(this.svgTextMeasurer);\n\t\n\t    // measure the size of a hyphen for the lyrics\n\t    var hyphen = new Lyric(this, \"-\", LyricType.SingleSyllable);\n\t    this.hyphenWidth = hyphen.bounds.width;\n\t\n\t    this.minLyricWordSpacing = this.hyphenWidth;\n\t\n\t    this.intraNeumeSpacing = this.staffInterval / 2.0;\n\t\n\t    // for connecting neume syllables...\n\t    this.syllableConnector = '-';\n\t\n\t    this.drawGuides = false;\n\t    this.drawDebuggingBounds = true;\n\t\n\t    // chant notation elements are normally separated by a minimum fixed amount of space\n\t    // on the staff line. It can happen, however, that two text elements are almost close\n\t    // enough to merge, only to be separated much more by the required hyphen (or other\n\t    // connecting string).\n\t    //\n\t    // This tolerance value allows a little bit of flexibility to merge two close lyrical\n\t    // elements, thus bringing the chant notation elements a bit closer than otherwise\n\t    // would be normally allowed.\n\t    //\n\t    // condensing tolerance is a percentage value (0.0-1.0, inclusive) that indicates\n\t    // how much the default spacing can shrink. E.g., a value of 0.80 allows the layout\n\t    // engine to separate two glyphs by only 80% of the normal inter-neume spacing value.\n\t    //\n\t    // fixme: condensing tolerance is not implemented yet!\n\t    this.condensingTolerance = 0.9;\n\t  }\n\t\n\t  _createClass(ChantContext, [{\n\t    key: 'calculateHeightFromStaffPosition',\n\t    value: function calculateHeightFromStaffPosition(staffPosition) {\n\t      return -staffPosition * this.staffInterval;\n\t    }\n\t  }]);\n\t\n\t  return ChantContext;\n\t}();\n\t\n\t/*\r\n\t * ChantLayoutElement\r\n\t */\n\t\n\t\n\tvar ChantLayoutElement = exports.ChantLayoutElement = function () {\n\t  function ChantLayoutElement() {\n\t    _classCallCheck(this, ChantLayoutElement);\n\t\n\t    this.bounds = new _Exsurge.Rect();\n\t    this.origin = new _Exsurge.Point(0, 0);\n\t\n\t    this.selected = false;\n\t    this.highlighted = false;\n\t  }\n\t\n\t  // draws the element an html5 canvas\n\t\n\t\n\t  _createClass(ChantLayoutElement, [{\n\t    key: 'draw',\n\t    value: function draw(ctxt) {}\n\t\n\t    // returns svg code for the element, used for printing support\n\t\n\t  }, {\n\t    key: 'createDrawable',\n\t    value: function createDrawable(ctxt) {\n\t      throw \"ChantLayout Elements must implement createDrawable(ctxt)\";\n\t    }\n\t  }]);\n\t\n\t  return ChantLayoutElement;\n\t}();\n\t\n\tvar DividerLineVisualizer = exports.DividerLineVisualizer = function (_ChantLayoutElement) {\n\t  _inherits(DividerLineVisualizer, _ChantLayoutElement);\n\t\n\t  function DividerLineVisualizer(ctxt, staffPosition0, staffPosition1) {\n\t    _classCallCheck(this, DividerLineVisualizer);\n\t\n\t    var _this = _possibleConstructorReturn(this, Object.getPrototypeOf(DividerLineVisualizer).call(this));\n\t\n\t    var y0 = ctxt.calculateHeightFromStaffPosition(staffPosition0);\n\t    var y1 = ctxt.calculateHeightFromStaffPosition(staffPosition1);\n\t\n\t    if (y0 > y1) {\n\t      var temp = y0;\n\t      y0 = y1;\n\t      y1 = temp;\n\t    }\n\t\n\t    _this.bounds.x = 0;\n\t    _this.bounds.y = y0;\n\t    _this.bounds.width = ctxt.dividerLineWeight;\n\t    _this.bounds.height = y1 - y0;\n\t\n\t    _this.origin.x = _this.bounds.width / 2;\n\t    _this.origin.y = y0;\n\t    return _this;\n\t  }\n\t\n\t  _createClass(DividerLineVisualizer, [{\n\t    key: 'createDrawable',\n\t    value: function createDrawable(ctxt) {\n\t\n\t      return QuickSvg.createFragment('rect', {\n\t        'x': this.bounds.x,\n\t        'y': this.bounds.y,\n\t        'width': ctxt.dividerLineWeight,\n\t        'height': this.bounds.height,\n\t        'fill': ctxt.dividerLineColor,\n\t        'class': 'DividerLine'\n\t      });\n\t    }\n\t  }]);\n\t\n\t  return DividerLineVisualizer;\n\t}(ChantLayoutElement);\n\t\n\tvar NeumeLineVisualizer = exports.NeumeLineVisualizer = function (_ChantLayoutElement2) {\n\t  _inherits(NeumeLineVisualizer, _ChantLayoutElement2);\n\t\n\t  function NeumeLineVisualizer(ctxt, note0, note1, hanging) {\n\t    _classCallCheck(this, NeumeLineVisualizer);\n\t\n\t    var _this2 = _possibleConstructorReturn(this, Object.getPrototypeOf(NeumeLineVisualizer).call(this));\n\t\n\t    var y0 = ctxt.calculateHeightFromStaffPosition(note0.staffPosition);\n\t    var y1 = ctxt.calculateHeightFromStaffPosition(note1.staffPosition);\n\t\n\t    if (y0 > y1) {\n\t      var temp = y0;\n\t      y0 = y1;\n\t      y1 = temp;\n\t    }\n\t\n\t    if (hanging) y1 += _this2.glyphPunctumHeight * ctxt.glyphScaling / 2.2;\n\t\n\t    _this2.bounds.x = 0;\n\t    _this2.bounds.y = y0;\n\t    _this2.bounds.width = ctxt.neumeLineWeight;\n\t    _this2.bounds.height = y1 - y0;\n\t\n\t    _this2.origin.x = 0;\n\t    _this2.origin.y = 0;\n\t    return _this2;\n\t  }\n\t\n\t  _createClass(NeumeLineVisualizer, [{\n\t    key: 'createDrawable',\n\t    value: function createDrawable(ctxt) {\n\t\n\t      return QuickSvg.createFragment('rect', {\n\t        'x': this.bounds.x,\n\t        'y': this.bounds.y,\n\t        'width': ctxt.neumeLineWeight,\n\t        'height': this.bounds.height,\n\t        'fill': ctxt.neumeLineColor,\n\t        'class': 'NeumeLine'\n\t      });\n\t    }\n\t  }]);\n\t\n\t  return NeumeLineVisualizer;\n\t}(ChantLayoutElement);\n\t\n\tvar HorizontalEpisemaLineVisualizer = exports.HorizontalEpisemaLineVisualizer = function (_ChantLayoutElement3) {\n\t  _inherits(HorizontalEpisemaLineVisualizer, _ChantLayoutElement3);\n\t\n\t  function HorizontalEpisemaLineVisualizer(ctxt, boundsToMark, position) {\n\t    _classCallCheck(this, HorizontalEpisemaLineVisualizer);\n\t\n\t    var _this3 = _possibleConstructorReturn(this, Object.getPrototypeOf(HorizontalEpisemaLineVisualizer).call(this));\n\t\n\t    var y = 0;\n\t    var minDistanceAway = ctxt.staffInterval * 0.4; // min distance both from neume and staff lines\n\t\n\t    if (position == _Exsurge.MarkingPositionHint.Below) {\n\t      y = boundsToMark.y + boundsToMark.height + minDistanceAway; // the highest the line could be at\n\t\n\t      // now, just take a step or two up if we need to\n\t      if (Math.abs(y % ctxt.staffInterval) < minDistanceAway) y += minDistanceAway - Math.abs(y % ctxt.staffInterval);\n\t    } else {\n\t      y = boundsToMark.y - minDistanceAway; // the lowest the line could be at\n\t\n\t      // now, just take a step or two up if we need to\n\t      if (Math.abs(y % ctxt.staffInterval) < minDistanceAway) y -= minDistanceAway - Math.abs(y % ctxt.staffInterval);\n\t    }\n\t\n\t    _this3.bounds.x = boundsToMark.x;\n\t    _this3.bounds.y = y - ctxt.episemaLineWeight / 2;\n\t    _this3.bounds.width = boundsToMark.width;\n\t    _this3.bounds.height = ctxt.episemaLineWeight;\n\t\n\t    _this3.origin.x = 0;\n\t    _this3.origin.y = 0;\n\t    return _this3;\n\t  }\n\t\n\t  _createClass(HorizontalEpisemaLineVisualizer, [{\n\t    key: 'createDrawable',\n\t    value: function createDrawable(ctxt) {\n\t      // fixme: implement this\n\t      //this.drawable = QuickSvg.rect(this.bounds.width, this.bounds.height);\n\t      //QuickSvg.translate(this.drawable, this.bounds.x, this.bounds.y).classList.add('HorizontalEpisema');\n\t\n\t      return \"\";\n\t    }\n\t  }]);\n\t\n\t  return HorizontalEpisemaLineVisualizer;\n\t}(ChantLayoutElement);\n\t\n\tvar GlyphVisualizer = exports.GlyphVisualizer = function (_ChantLayoutElement4) {\n\t  _inherits(GlyphVisualizer, _ChantLayoutElement4);\n\t\n\t  function GlyphVisualizer(ctxt, glyphCode) {\n\t    _classCallCheck(this, GlyphVisualizer);\n\t\n\t    var _this4 = _possibleConstructorReturn(this, Object.getPrototypeOf(GlyphVisualizer).call(this));\n\t\n\t    _this4.glyph = null;\n\t\n\t    _this4.setGlyphShape(ctxt, glyphCode);\n\t    return _this4;\n\t  }\n\t\n\t  _createClass(GlyphVisualizer, [{\n\t    key: 'setGlyphShape',\n\t    value: function setGlyphShape(ctxt, glyphCode) {\n\t\n\t      if (this.glyphCode == glyphCode) return;\n\t\n\t      if (typeof glyphCode === 'undefined' || glyphCode == null || glyphCode == \"\") this.glyphCode = GlyphCode.None;else this.glyphCode = glyphCode;\n\t\n\t      this.glyph = _Exsurge2.Glyphs[this.glyphCode];\n\t\n\t      // if this glyph hasn't been used yet, then load it up in the defs section for sharing\n\t      if (!ctxt.defs.hasOwnProperty(this.glyphCode)) {\n\t        var glyphSrc = this.glyph.svgSrc;\n\t\n\t        // create the ref\n\t        ctxt.defs[this.glyphCode] = QuickSvg.createFragment('g', {\n\t          id: this.glyphCode,\n\t          'class': 'glyph',\n\t          transform: 'scale(' + ctxt.glyphScaling + ')'\n\t        }, glyphSrc);\n\t      }\n\t\n\t      this.origin.x = this.glyph.origin.x * ctxt.glyphScaling;\n\t      this.origin.y = this.glyph.origin.y * ctxt.glyphScaling;\n\t\n\t      this.bounds.x = -this.origin.x;\n\t      this.bounds.y = -this.origin.y;\n\t      this.bounds.width = this.glyph.bounds.width * ctxt.glyphScaling;\n\t      this.bounds.height = this.glyph.bounds.height * ctxt.glyphScaling;\n\t    }\n\t  }, {\n\t    key: 'setStaffPosition',\n\t    value: function setStaffPosition(ctxt, staffPosition) {\n\t      this.bounds.y += ctxt.calculateHeightFromStaffPosition(staffPosition);\n\t    }\n\t  }, {\n\t    key: 'createDrawable',\n\t    value: function createDrawable(ctxt) {\n\t\n\t      return QuickSvg.createFragment('use', {\n\t        'xlink:href': '#' + this.glyphCode,\n\t        x: this.bounds.x + this.origin.x,\n\t        y: this.bounds.y + this.origin.y\n\t      });\n\t    }\n\t  }]);\n\t\n\t  return GlyphVisualizer;\n\t}(ChantLayoutElement);\n\t\n\tvar TextSpan = function TextSpan(text, cssClasses) {\n\t  if (typeof cssClasses === 'undefined' || cssClasses == null) cssClasses = \"\";\n\t\n\t  this.text = text;\n\t  this.cssClasses = cssClasses;\n\t};\n\t\n\tvar boldMarkup = \"*\";\n\tvar italicMarkup = \"_\";\n\tvar redMarkup = \"^\";\n\tvar smallCapsMarkup = \"%\";\n\t\n\tfunction MarkupStackFrame(symbol, startIndex, cssClass) {\n\t  this.symbol = symbol;\n\t  this.startIndex = startIndex;\n\t  this.cssClass = cssClass;\n\t}\n\t\n\tMarkupStackFrame.createStackFrame = function (symbol, startIndex) {\n\t\n\t  var cssClass = \"\";\n\t\n\t  switch (symbol) {\n\t    case boldMarkup:\n\t      cssClass = 'bold';\n\t      break;\n\t    case italicMarkup:\n\t      cssClass = 'italic';\n\t      break;\n\t    case redMarkup:\n\t      cssClass = 'red';\n\t      break;\n\t    case smallCapsMarkup:\n\t      cssClass = 'small-caps';\n\t      break;\n\t  }\n\t\n\t  return new MarkupStackFrame(symbol, startIndex, cssClass);\n\t};\n\t\n\tvar TextElement = exports.TextElement = function (_ChantLayoutElement5) {\n\t  _inherits(TextElement, _ChantLayoutElement5);\n\t\n\t  function TextElement(ctxt, text, fontFamily, fontSize, textAnchor) {\n\t    _classCallCheck(this, TextElement);\n\t\n\t    // set these to some sane values for now...\n\t\n\t    var _this5 = _possibleConstructorReturn(this, Object.getPrototypeOf(TextElement).call(this));\n\t\n\t    _this5.bounds.x = 0;\n\t    _this5.bounds.y = 0;\n\t    _this5.bounds.width = 0;\n\t    _this5.bounds.height = 0;\n\t    _this5.origin.x = 0;\n\t    _this5.origin.y = 0;\n\t\n\t    _this5.fontFamily = fontFamily;\n\t    _this5.fontSize = fontSize;\n\t    _this5.textAnchor = textAnchor;\n\t\n\t    _this5.generateSpansFromText(text);\n\t\n\t    _this5.recalculateMetrics(ctxt);\n\t    return _this5;\n\t  }\n\t\n\t  _createClass(TextElement, [{\n\t    key: 'generateSpansFromText',\n\t    value: function generateSpansFromText(text) {\n\t\n\t      this.unsanitizedText = text;\n\t      this.text = \"\";\n\t      this.spans = [];\n\t\n\t      // save ourselves a lot of grief for a very common text:\n\t      if (this.text == \"*\") {\n\t        this.spans.push(new TextSpan(text, \"\"));\n\t        return;\n\t      }\n\t\n\t      var markupStack = [];\n\t      var spanStartIndex = 0;\n\t\n\t      var that = this;\n\t      var closeSpan = function closeSpan(spanText, extraCssClass) {\n\t        if (spanText == \"\") return;\n\t\n\t        that.text += spanText;\n\t\n\t        var cssClasses = \"\";\n\t        for (var i = 0; i < markupStack.length; i++) {\n\t          if (cssClasses != \"\") cssClasses += \" \";\n\t\n\t          cssClasses = cssClasses + markupStack[i].cssClass;\n\t        }\n\t\n\t        if (extraCssClass != null) {\n\t          if (cssClasses != \"\") cssClasses += \" \";\n\t\n\t          cssClasses = cssClasses + extraCssClass;\n\t        }\n\t\n\t        that.spans.push(new TextSpan(spanText, cssClasses));\n\t      };\n\t\n\t      var markupRegex = /(\\*|_|\\^|%|[ARVarv]\\/\\.)/g;\n\t\n\t      var match = null;\n\t      while (match = markupRegex.exec(text)) {\n\t\n\t        var markupSymbol = match[0];\n\t\n\t        // non-matching symbols first\n\t        if (markupSymbol == \"A/.\" || markupSymbol == \"R/.\" || markupSymbol == \"V/.\" || markupSymbol == \"a/.\" || markupSymbol == \"r/.\" || markupSymbol == \"v/.\") {\n\t          closeSpan(text[match.index] + \".\", 'special-chant-character red');\n\t        } else if (markupStack.length == 0) {\n\t          // otherwise we're dealing with matching markup delimeters\n\t          // if this is our first markup frame, then just create an inline for preceding text and push the stack frame\n\t          closeSpan(text.substring(spanStartIndex, match.index));\n\t          markupStack.push(MarkupStackFrame.createStackFrame(markupSymbol, match.index));\n\t        } else {\n\t\n\t          if (markupStack[markupStack.length - 1].symbol == markupSymbol) {\n\t            // group close\n\t            closeSpan(text.substring(spanStartIndex, match.index));\n\t            markupStack.pop();\n\t          } else if (markupStack.filter(function (frame) {\n\t            return frame.Symbol == markupSymbol;\n\t          }).length > 0) {\n\t            // trying to open a recursive group (or forgot to close a previous group)\n\t            // in either case, we just unwind to the previous stack frame\n\t            spanStartIndex = markupStack[markupStack.length - 1].startIndex;\n\t            markupStack.pop();\n\t            continue;\n\t          } else {\n\t            // group open\n\t            closeSpan(text.substring(spanStartIndex, match.index));\n\t            markupStack.push(MarkupStackFrame.createStackFrame(markupSymbol, match.index));\n\t          }\n\t        }\n\t\n\t        // advance the start index past the current markup\n\t        spanStartIndex = match.index + markupSymbol.length;\n\t      }\n\t\n\t      // if we finished matches, and there is still some text left, create one final run\n\t      if (spanStartIndex < text.length) closeSpan(text.substring(spanStartIndex, text.length));\n\t\n\t      // if after all of that we still didn't create any runs, then just add the entire text\n\t      // string itself as a run\n\t      if (this.spans.length == 0) closeSpan(text);\n\t    }\n\t  }, {\n\t    key: 'recalculateMetrics',\n\t    value: function recalculateMetrics(ctxt) {\n\t\n\t      this.bounds.x = 0;\n\t      this.bounds.y = 0;\n\t\n\t      ctxt.svgTextMeasurer.innerHTML = this.createDrawable(ctxt);\n\t      var bbox = ctxt.svgTextMeasurer.firstChild.getBBox();\n\t\n\t      this.bounds.x = 0;\n\t      this.bounds.y = 0;\n\t      this.bounds.width = bbox.width;\n\t      this.bounds.height = bbox.height;\n\t      this.origin.x = 0;\n\t      this.origin.y = 0; // baseline?\n\t    }\n\t  }, {\n\t    key: 'getCssClasses',\n\t    value: function getCssClasses() {\n\t      return \"TextElement\";\n\t    }\n\t  }, {\n\t    key: 'createDrawable',\n\t    value: function createDrawable(ctxt) {\n\t\n\t      var spans = \"\";\n\t\n\t      for (var i = 0; i < this.spans.length; i++) {\n\t        var options = {};\n\t\n\t        if (this.spans[i].cssClasses) options['class'] = this.spans[i].cssClasses;\n\t\n\t        spans += QuickSvg.createFragment('tspan', options, this.spans[i].text);\n\t      }\n\t\n\t      return QuickSvg.createFragment('text', {\n\t        'transform': 'translate(' + this.bounds.x + ',' + this.bounds.y + ')',\n\t        'class': this.getCssClasses(),\n\t        'font-family': this.fontFamily,\n\t        'font-size': this.fontSize,\n\t        'text-anchor': this.textAnchor\n\t      }, spans);\n\t    }\n\t  }]);\n\t\n\t  return TextElement;\n\t}(ChantLayoutElement);\n\t\n\tvar LyricType = exports.LyricType = {\n\t  SingleSyllable: 0,\n\t  BeginningSyllable: 1,\n\t  MiddleSyllable: 2,\n\t  EndingSyllable: 3,\n\t\n\t  Directive: 4 // for asterisks, \"ij.\" elements, or other performance notes.\n\t};\n\t\n\tvar Lyric = exports.Lyric = function (_TextElement) {\n\t  _inherits(Lyric, _TextElement);\n\t\n\t  function Lyric(ctxt, text, lyricType) {\n\t    _classCallCheck(this, Lyric);\n\t\n\t    var _this6 = _possibleConstructorReturn(this, Object.getPrototypeOf(Lyric).call(this, ctxt, text, ctxt.lyricTextFont, ctxt.lyricTextSize, 'start'));\n\t\n\t    _this6.cssClasses += \" Lyric\";\n\t\n\t    if (typeof lyricType === 'undefined' || lyricType == null || lyricType == \"\") _this6.lyricType = LyricType.SingleSyllable;else _this6.lyricType = lyricType;\n\t\n\t    _this6.needsConnector = false;\n\t    return _this6;\n\t  }\n\t\n\t  _createClass(Lyric, [{\n\t    key: 'allowsConnector',\n\t    value: function allowsConnector() {\n\t      return this.lyricType == LyricType.BeginningSyllable || this.lyricType == LyricType.MiddleSyllable;\n\t    }\n\t  }, {\n\t    key: 'setNeedsConnector',\n\t    value: function setNeedsConnector(needs) {\n\t      if (needs === true) {\n\t        this.needsConnector = true;\n\t        this.bounds.width = this.widthWithConnector;\n\t\n\t        if (this.spans.length > 0) this.spans[this.spans.length - 1].text = this.lastSpanTextWithConnector;\n\t      } else {\n\t        this.needsConnector = false;\n\t        this.bounds.width = this.widthWithoutConnector;\n\t\n\t        if (this.spans.length > 0) this.spans[this.spans.length - 1].text = this.lastSpanText;\n\t      }\n\t    }\n\t  }, {\n\t    key: 'generateSpansFromText',\n\t    value: function generateSpansFromText(text) {\n\t      _get(Object.getPrototypeOf(Lyric.prototype), 'generateSpansFromText', this).call(this, text);\n\t\n\t      if (this.spans.length > 0) {\n\t        this.lastSpanText = this.spans[this.spans.length - 1].text;\n\t        this.lastSpanTextWithConnector = this.lastSpanText + __syllableConnector;\n\t      } else {\n\t        this.lastSpanText = \"\";\n\t        this.lastSpanTextWithConnector = \"\";\n\t      }\n\t    }\n\t  }, {\n\t    key: 'recalculateMetrics',\n\t    value: function recalculateMetrics(ctxt) {\n\t      _get(Object.getPrototypeOf(Lyric.prototype), 'recalculateMetrics', this).call(this, ctxt);\n\t\n\t      this.widthWithoutConnector = this.bounds.width;\n\t      this.textWithConnector = this.text + __syllableConnector;\n\t\n\t      this.widthWithConnector = this.bounds.width + ctxt.hyphenWidth;\n\t\n\t      var activeLanguage = ctxt.defaultLanguage;\n\t\n\t      // calculate the point where the text lines up to the staff notation\n\t      // and offset the rect that much\n\t      var offset = 0;\n\t\n\t      if (this.lyricType != LyricType.Directive) {\n\t\n\t        // Non-directive elements are lined up to the chant notation based on vowel segments.\n\t        // First we determine the vowel segment of the text, then we calculate the center point\n\t        // of that vowel segment.\n\t        var result = activeLanguage.findVowelSegment(this.text, 0);\n\t        if (result.found === true) {\n\t\n\t          // svgTextMeasurer still has the current lyric in it...\n\t\n\t          var x1 = ctxt.svgTextMeasurer.firstChild.getSubStringLength(0, result.startIndex);\n\t          var x2 = ctxt.svgTextMeasurer.firstChild.getSubStringLength(0, result.startIndex + result.length);\n\t\n\t          offset = x1 + (x2 - x1) / 2;\n\t        } else {\n\t          // no vowels found according the text's language. for now we just center the text\n\t          offset = this.widthWithoutConnector / 2;\n\t        }\n\t      } else {\n\t        // directives are always centered on the chant notation\n\t        offset = this.widthWithoutConnector / 2;\n\t      }\n\t\n\t      this.bounds.x = -offset;\n\t      this.bounds.y = 0;\n\t\n\t      this.origin.x = offset;\n\t\n\t      this.bounds.width = this.widthWithoutConnector;\n\t      this.bounds.height = ctxt.lyricTextSize;\n\t    }\n\t  }, {\n\t    key: 'getCssClasses',\n\t    value: function getCssClasses() {\n\t\n\t      var classes = \"Lyric \";\n\t\n\t      if (this.lyricType == LyricType.Directive) classes += \"directive \";\n\t\n\t      return classes + _get(Object.getPrototypeOf(Lyric.prototype), 'getCssClasses', this).call(this);\n\t    }\n\t  }, {\n\t    key: 'createDrawable',\n\t    value: function createDrawable(ctxt) {\n\t      if (this.spans.length > 0) {\n\t        if (this.needsConnector) this.spans[this.spans.length - 1].text = this.lastSpanTextWithConnector;else this.spans[this.spans.length - 1].text = this.lastSpanText;\n\t      }\n\t\n\t      return _get(Object.getPrototypeOf(Lyric.prototype), 'createDrawable', this).call(this, ctxt);\n\t    }\n\t  }]);\n\t\n\t  return Lyric;\n\t}(TextElement);\n\t\n\tvar DropCap = exports.DropCap = function (_TextElement2) {\n\t  _inherits(DropCap, _TextElement2);\n\t\n\t  /**\r\n\t   * @param {String} text\r\n\t   */\n\t\n\t  function DropCap(ctxt, text) {\n\t    _classCallCheck(this, DropCap);\n\t\n\t    var _this7 = _possibleConstructorReturn(this, Object.getPrototypeOf(DropCap).call(this, ctxt, text, ctxt.dropCapTextFont, ctxt.dropCapTextSize, 'middle'));\n\t\n\t    _this7.padding = ctxt.staffInterval * 2;\n\t    return _this7;\n\t  }\n\t\n\t  _createClass(DropCap, [{\n\t    key: 'getCssClasses',\n\t    value: function getCssClasses() {\n\t      return \"DropCap \" + _get(Object.getPrototypeOf(DropCap.prototype), 'getCssClasses', this).call(this);\n\t    }\n\t  }]);\n\t\n\t  return DropCap;\n\t}(TextElement);\n\t\n\tvar Annotation = exports.Annotation = function (_TextElement3) {\n\t  _inherits(Annotation, _TextElement3);\n\t\n\t  /**\r\n\t   * @param {String} text\r\n\t   */\n\t\n\t  function Annotation(ctxt, text) {\n\t    _classCallCheck(this, Annotation);\n\t\n\t    var _this8 = _possibleConstructorReturn(this, Object.getPrototypeOf(Annotation).call(this, ctxt, text, ctxt.annotationTextFont, ctxt.annotationTextSize, 'middle'));\n\t\n\t    _this8.padding = ctxt.staffInterval * 2;\n\t    return _this8;\n\t  }\n\t\n\t  _createClass(Annotation, [{\n\t    key: 'getCssClasses',\n\t    value: function getCssClasses() {\n\t      return \"Annotation \" + _get(Object.getPrototypeOf(Annotation.prototype), 'getCssClasses', this).call(this);\n\t    }\n\t  }]);\n\t\n\t  return Annotation;\n\t}(TextElement);\n\t\n\tvar ChantNotationElement = exports.ChantNotationElement = function (_ChantLayoutElement6) {\n\t  _inherits(ChantNotationElement, _ChantLayoutElement6);\n\t\n\t  function ChantNotationElement() {\n\t    _classCallCheck(this, ChantNotationElement);\n\t\n\t    //double\n\t\n\t    var _this9 = _possibleConstructorReturn(this, Object.getPrototypeOf(ChantNotationElement).call(this));\n\t\n\t    _this9.leadingSpace = 0.0;\n\t    _this9.trailingSpace = -1; // if less than zero, this is automatically calculated at layout time\n\t    _this9.keepWithNext = false;\n\t\n\t    _this9.lyric = null;\n\t\n\t    _this9.score = null; // the ChantScore\n\t    _this9.line = null; // the ChantLine\n\t\n\t    _this9.visualizers = [];\n\t    return _this9;\n\t  }\n\t\n\t  _createClass(ChantNotationElement, [{\n\t    key: 'hasLyric',\n\t    value: function hasLyric() {\n\t      if (this.lyric != null) return true;else return false;\n\t    }\n\t  }, {\n\t    key: 'getLyricLeft',\n\t    value: function getLyricLeft() {\n\t      return this.bounds.x + this.lyric.bounds.x;\n\t    }\n\t  }, {\n\t    key: 'getLyricRight',\n\t    value: function getLyricRight() {\n\t      return this.bounds.x + this.lyric.bounds.x + this.lyric.bounds.width;\n\t    }\n\t\n\t    // used by subclasses while building up the chant notations.\n\t\n\t  }, {\n\t    key: 'addVisualizer',\n\t    value: function addVisualizer(chantLayoutElement) {\n\t      if (this.bounds.isEmpty()) this.bounds = chantLayoutElement.bounds.clone();else this.bounds.union(chantLayoutElement.bounds);\n\t\n\t      this.visualizers.push(chantLayoutElement);\n\t    }\n\t\n\t    // chant notation elements are given an opportunity to perform their layout via this function.\n\t    // subclasses should call this function first in overrides of this function.\n\t    // on completion, exsurge presumes that the bounds, the origin, and the drawable objects are\n\t    // all valid and prepared for higher level layout.\n\t\n\t  }, {\n\t    key: 'performLayout',\n\t    value: function performLayout(ctxt) {\n\t\n\t      if (this.trailingSpace < 0) this.trailingSpace = ctxt.intraNeumeSpacing * 4;\n\t\n\t      // reset the bounds and the staff notations before doing a layout\n\t      this.visualizers = [];\n\t      this.bounds = new _Exsurge.Rect(Infinity, Infinity, -Infinity, -Infinity);\n\t\n\t      if (this.hasLyric()) this.lyric.recalculateMetrics(ctxt);\n\t    }\n\t\n\t    // a helper function for subclasses to call after they are done performing layout...\n\t\n\t  }, {\n\t    key: 'finishLayout',\n\t    value: function finishLayout(ctxt) {\n\t      this.origin.x -= -this.bounds.x;\n\t      this.bounds.x = 0;\n\t      //this.bounds.y = 0;\n\t\n\t      // add the lyric and line it up\n\t      if (this.hasLyric()) this.lyric.bounds.x = this.origin.x - this.lyric.origin.x;\n\t    }\n\t  }, {\n\t    key: 'createDrawable',\n\t    value: function createDrawable(ctxt) {\n\t      var inner = \"\";\n\t\n\t      for (var i = 0; i < this.visualizers.length; i++) {\n\t        inner += this.visualizers[i].createDrawable(ctxt);\n\t      }if (this.lyric) inner += this.lyric.createDrawable(ctxt);\n\t\n\t      return QuickSvg.createFragment('g', {\n\t        'class': 'ChantNotationElement ' + this.constructor.name,\n\t        'transform': 'translate(' + this.bounds.x + ',' + 0 + ')'\n\t      }, inner);\n\t    }\n\t  }]);\n\t\n\t  return ChantNotationElement;\n\t}(ChantLayoutElement);\n\n/***/ },\n/* 5 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.ChantDocument = exports.ChantScore = exports.ChantLine = exports.ChantLineBreak = exports.FaClef = exports.DoClef = exports.Clef = exports.Note = exports.NoteShape = undefined;\n\t\n\tvar _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if (\"value\" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _Exsurge = __webpack_require__(1);\n\t\n\tvar Exsurge = _interopRequireWildcard(_Exsurge);\n\t\n\tvar _Exsurge2 = __webpack_require__(4);\n\t\n\tvar _Exsurge3 = __webpack_require__(3);\n\t\n\tvar _ExsurgeChant = __webpack_require__(6);\n\t\n\tvar _Exsurge4 = __webpack_require__(7);\n\t\n\tfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } //\n\t// Author(s):\n\t// Fr. Matthew Spencer, OSJ <mspencer@osjusa.org>\n\t//\n\t// Copyright (c) 2008-2016 Fr. Matthew Spencer, OSJ\n\t//\n\t// Permission is hereby granted, free of charge, to any person obtaining a copy\n\t// of this software and associated documentation files (the \"Software\"), to deal\n\t// in the Software without restriction, including without limitation the rights\n\t// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n\t// copies of the Software, and to permit persons to whom the Software is\n\t// furnished to do so, subject to the following conditions:\n\t//\n\t// The above copyright notice and this permission notice shall be included in\n\t// all copies or substantial portions of the Software.\n\t//\n\t// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n\t// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n\t// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n\t// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n\t// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n\t// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n\t// THE SOFTWARE.\n\t//\n\t\n\tvar NoteShape = exports.NoteShape = {\n\t  Default: 0,\n\t\n\t  Inclinatum: 1,\n\t  Virga: 2,\n\t  Quilisma: 3,\n\t  Cavum: 4,\n\t  OriscusAscending: 5,\n\t  OriscusDescending: 6,\n\t\n\t  Apostropha: 7,\n\t\n\t  AscLiquescent: 8,\n\t  DesLiquescent: 9\n\t};\n\t\n\t/**\r\n\t * @class\r\n\t */\n\t\n\tvar Note = exports.Note = function (_ChantLayoutElement) {\n\t  _inherits(Note, _ChantLayoutElement);\n\t\n\t  /**\r\n\t   * @para {Pitch} pitch\r\n\t   */\n\t\n\t  function Note(pitch) {\n\t    _classCallCheck(this, Note);\n\t\n\t    var _this = _possibleConstructorReturn(this, Object.getPrototypeOf(Note).call(this));\n\t\n\t    if (typeof pitch !== 'undefined') _this.pitch = pitch;else _this.pitch = null;\n\t\n\t    _this.glyphVisualizer = null;\n\t    _this.staffPosition = 0;\n\t    _this.isLiquescent = false;\n\t    _this.shape = NoteShape.Default;\n\t    _this.markings = [];\n\t    return _this;\n\t  }\n\t\n\t  _createClass(Note, [{\n\t    key: 'setGlyphShape',\n\t    value: function setGlyphShape(ctxt, glyphCode) {\n\t      if (this.glyphVisualizer) this.glyphVisualizer.setGlyphShape(ctxt, glyphCode);else this.glyphVisualizer = new _Exsurge2.GlyphVisualizer(ctxt, glyphCode);\n\t    }\n\t  }, {\n\t    key: 'performLayout',\n\t    value: function performLayout(ctxt) {\n\t\n\t      if (this.glyphVisualizer == null) {\n\t        console.log(\"Tried to perform layout on a note with no glyphCode assigned!\");\n\t      }\n\t\n\t      this.glyphVisualizer.setStaffPosition(ctxt, this.staffPosition);\n\t\n\t      // assign glyphvisualizer metrics to this note\n\t      this.bounds.x = this.glyphVisualizer.bounds.x;\n\t      this.bounds.y = this.glyphVisualizer.bounds.y;\n\t      this.bounds.width = this.glyphVisualizer.bounds.width;\n\t      this.bounds.height = this.glyphVisualizer.bounds.height;\n\t\n\t      this.origin.x = this.glyphVisualizer.origin.x;\n\t      this.origin.y = this.glyphVisualizer.origin.y;\n\t\n\t      for (var i = 0; i < this.markings.length; i++) {\n\t        var marking = this.markings[i];\n\t\n\t        marking.performLayout(ctxt);\n\t      }\n\t\n\t      //this.drawable.attr({onclick: \"Audio.playNoteInt(\" + this.pitch.toInt() + ');',\n\t      //  \"data-pitch\": this.pitch.toInt()\n\t      //});\n\t    }\n\t  }, {\n\t    key: 'generateVisualizerPath',\n\t    value: function generateVisualizerPath(ctxt) {\n\t\n\t      this.glyphVisualizer.bounds.x = this.bounds.x;\n\t      this.glyphVisualizer.bounds.y = this.bounds.y;\n\t      return this.glyphVisualizer.generateVisualizerPath(ctxt);\n\t    }\n\t  }, {\n\t    key: 'draw',\n\t    value: function draw(ctxt) {\n\t\n\t      this.glyphVisualizer.bounds.x = this.bounds.x;\n\t      this.glyphVisualizer.bounds.y = this.bounds.y;\n\t\n\t      this.glyphVisualizer.draw(ctxt);\n\t    }\n\t  }, {\n\t    key: 'createDrawable',\n\t    value: function createDrawable(ctxt) {\n\t\n\t      this.glyphVisualizer.bounds.x = this.bounds.x;\n\t      this.glyphVisualizer.bounds.y = this.bounds.y;\n\t      return this.glyphVisualizer.createDrawable(ctxt);\n\t    }\n\t  }]);\n\t\n\t  return Note;\n\t}(_Exsurge2.ChantLayoutElement);\n\t\n\tvar Clef = exports.Clef = function (_ChantNotationElement) {\n\t  _inherits(Clef, _ChantNotationElement);\n\t\n\t  function Clef(staffPosition, octave) {\n\t    _classCallCheck(this, Clef);\n\t\n\t    var _this2 = _possibleConstructorReturn(this, Object.getPrototypeOf(Clef).call(this));\n\t\n\t    _this2.isClef = true;\n\t    _this2.staffPosition = staffPosition;\n\t    _this2.octave = octave;\n\t    _this2.defaultAccidental = null;\n\t    _this2.activeAccidental = null;\n\t    return _this2;\n\t  }\n\t\n\t  _createClass(Clef, [{\n\t    key: 'resetAccidentals',\n\t    value: function resetAccidentals() {\n\t      this.activeAccidental = this.defaultAccidental;\n\t    }\n\t  }, {\n\t    key: 'updateChantLogic',\n\t    value: function updateChantLogic() {\n\t      _get(Object.getPrototypeOf(Clef.prototype), 'updateChantLogic', this).call(this);\n\t\n\t      _Exsurge2.ctxt.activeClef = this;\n\t    }\n\t  }, {\n\t    key: 'pitchToStaffPosition',\n\t    value: function pitchToStaffPosition(pitch) {}\n\t  }]);\n\t\n\t  return Clef;\n\t}(_Exsurge2.ChantNotationElement);\n\t\n\tvar DoClef = exports.DoClef = function (_Clef) {\n\t  _inherits(DoClef, _Clef);\n\t\n\t  function DoClef(staffPosition, octave) {\n\t    _classCallCheck(this, DoClef);\n\t\n\t    var _this3 = _possibleConstructorReturn(this, Object.getPrototypeOf(DoClef).call(this, staffPosition, octave));\n\t\n\t    _this3.leadingSpace = 0.0;\n\t    return _this3;\n\t  }\n\t\n\t  _createClass(DoClef, [{\n\t    key: 'pitchToStaffPosition',\n\t    value: function pitchToStaffPosition(pitch) {\n\t      return (pitch.octave - this.octave) * 7 + this.staffPosition + _Exsurge.Pitch.stepToStaffOffset(pitch.step) - _Exsurge.Pitch.stepToStaffOffset(_Exsurge.Step.Do);\n\t    }\n\t  }, {\n\t    key: 'staffPositionToPitch',\n\t    value: function staffPositionToPitch(staffPosition) {\n\t      var offset = staffPosition - this.staffPosition;\n\t      var octaveOffset = Math.floor(offset / 7);\n\t\n\t      var step = _Exsurge.Pitch.staffOffsetToStep(offset);\n\t\n\t      if (this.defaultAccidental != null && step == this.defaultAccidental.step) step += this.defaultAccidental.accidentalType;\n\t\n\t      return new _Exsurge.Pitch(step, this.octave + octaveOffset);\n\t    }\n\t  }, {\n\t    key: 'performLayout',\n\t    value: function performLayout(ctxt) {\n\t      _get(Object.getPrototypeOf(DoClef.prototype), 'performLayout', this).call(this, ctxt);\n\t\n\t      var glyph = new _Exsurge2.GlyphVisualizer(ctxt, _Exsurge2.GlyphCode.DoClef);\n\t      glyph.setStaffPosition(ctxt, this.staffPosition);\n\t      this.addVisualizer(glyph);\n\t\n\t      // fixme: implement this\n\t      /*\r\n\t      if (this.defaultAccidental != null) {\r\n\t        var x = glyph.bounds.right() + ctxt.intraNeumeSpacing;\r\n\t          glyph = new GlyphVisualizer(ctxt, GlyphCode.Flat, this.staffPosition - 1);\r\n\t        glyph.bounds.x += x;\r\n\t        this.addVisualizer(glyph);\r\n\t      }\r\n\t      */\n\t\n\t      this.finishLayout(ctxt);\n\t    }\n\t  }, {\n\t    key: 'clone',\n\t    value: function clone() {\n\t      return new DoClef(this.staffPosition, this.octave);\n\t    }\n\t  }]);\n\t\n\t  return DoClef;\n\t}(Clef);\n\t\n\tvar FaClef = exports.FaClef = function (_Clef2) {\n\t  _inherits(FaClef, _Clef2);\n\t\n\t  function FaClef(staffPosition, octave) {\n\t    _classCallCheck(this, FaClef);\n\t\n\t    var _this4 = _possibleConstructorReturn(this, Object.getPrototypeOf(FaClef).call(this, staffPosition, octave));\n\t\n\t    _this4.octave = octave;\n\t\n\t    _this4.leadingSpace = 0;\n\t    return _this4;\n\t  }\n\t\n\t  _createClass(FaClef, [{\n\t    key: 'pitchToStaffPosition',\n\t    value: function pitchToStaffPosition(pitch) {\n\t      return (pitch.octave - this.octave) * 7 + this.staffPosition + _Exsurge.Pitch.stepToStaffOffset(pitch.step) - _Exsurge.Pitch.stepToStaffOffset(_Exsurge.Step.Fa);\n\t    }\n\t  }, {\n\t    key: 'staffPositionToPitch',\n\t    value: function staffPositionToPitch(staffPosition) {\n\t      var offset = staffPosition - this.staffPosition + 3; // + 3 because it's a fa clef (3 == offset from Do)\n\t      var octaveOffset = Math.floor(offset / 7);\n\t\n\t      var step = _Exsurge.Pitch.staffOffsetToStep(offset);\n\t\n\t      if (step == _Exsurge.Step.Ti && this.defaultAccidental == AccidentalType.Flat) step = _Exsurge.Step.Te;\n\t\n\t      return new _Exsurge.Pitch(step, this.octave + octaveOffset);\n\t    }\n\t  }, {\n\t    key: 'performLayout',\n\t    value: function performLayout(ctxt) {\n\t      _get(Object.getPrototypeOf(FaClef.prototype), 'performLayout', this).call(this, ctxt);\n\t\n\t      var glyph = new _Exsurge2.GlyphVisualizer(ctxt, _Exsurge2.GlyphCode.FaClef);\n\t      glyph.setStaffPosition(ctxt, this.staffPosition);\n\t      this.addVisualizer(glyph);\n\t\n\t      this.finishLayout(ctxt);\n\t    }\n\t  }, {\n\t    key: 'clone',\n\t    value: function clone() {\n\t      return new FaClef(this.staffPosition, this.octave);\n\t    }\n\t  }]);\n\t\n\t  return FaClef;\n\t}(Clef);\n\t\n\tvar ChantLineBreak = exports.ChantLineBreak = function (_ChantNotationElement2) {\n\t  _inherits(ChantLineBreak, _ChantNotationElement2);\n\t\n\t  function ChantLineBreak(justify) {\n\t    _classCallCheck(this, ChantLineBreak);\n\t\n\t    var _this5 = _possibleConstructorReturn(this, Object.getPrototypeOf(ChantLineBreak).call(this));\n\t\n\t    _this5.justify = justify;\n\t    return _this5;\n\t  }\n\t\n\t  _createClass(ChantLineBreak, [{\n\t    key: 'performLayout',\n\t    value: function performLayout(ctxt) {\n\t\n\t      // reset the bounds before doing a layout\n\t      this.bounds = new _Exsurge.Rect(0, 0, 0, 0);\n\t    }\n\t  }, {\n\t    key: 'clone',\n\t    value: function clone() {\n\t      var lb = new ChantLineBreak();\n\t      lb.justify = this.justify;\n\t\n\t      return lb;\n\t    }\n\t  }]);\n\t\n\t  return ChantLineBreak;\n\t}(_Exsurge2.ChantNotationElement);\n\t\n\t// a chant line represents one staff line on the page. ChantLines are created by the score\n\t// and laid out by the page\n\t\n\t\n\tvar ChantLine = exports.ChantLine = function (_ChantLayoutElement2) {\n\t  _inherits(ChantLine, _ChantLayoutElement2);\n\t\n\t  function ChantLine(score) {\n\t    _classCallCheck(this, ChantLine);\n\t\n\t    var _this6 = _possibleConstructorReturn(this, Object.getPrototypeOf(ChantLine).call(this));\n\t\n\t    _this6.score = score;\n\t\n\t    _this6.scoreNotationStart = 0;\n\t    _this6.scoreNotationCount = 0;\n\t    _this6.notations = [];\n\t    _this6.notationBounds = null; // Rect\n\t\n\t    _this6.lyricBounds = null; // Rect\n\t\n\t    _this6.staffLeft = 0;\n\t    _this6.staffRight = 0;\n\t\n\t    _this6.custod = null;\n\t\n\t    _this6.justify = true;\n\t\n\t    _this6.startingClef = null; // necessary for the layout process\n\t\n\t    _this6.nextLine = null;\n\t    _this6.previousLine = null; // for layout assistance\n\t\n\t    // fixme: make these configurable values from the score\n\t    _this6.spaceAfterNotations = 30; // the space between the notation bounds and the first text track\n\t    _this6.spaceBetweenTextTracks = 20; // spacing between each text track\n\t    return _this6;\n\t  }\n\t\n\t  _createClass(ChantLine, [{\n\t    key: 'setStartingClef',\n\t    value: function setStartingClef(clef) {\n\t      this.startingClef = clef.clone();\n\t    }\n\t  }, {\n\t    key: 'performLayout',\n\t    value: function performLayout(ctxt) {\n\t\n\t      // start off with a rectangle that holds at least the four staff lines\n\t      // we fudge the 3 to 3.1 so that the svg doesn't crop off the upper/lower staff lines...\n\t      this.notationBounds = new _Exsurge.Rect(this.staffLeft, -3.1 * ctxt.staffInterval, this.staffRight - this.staffLeft, 6.2 * ctxt.staffInterval);\n\t\n\t      // run through all the elements of the line and calculate the bounds of the notations,\n\t      // as well as the bounds of each text track we will use\n\t      var i;\n\t      var notation = null;\n\t\n\t      for (i = 0; i < this.notations.length; i++) {\n\t        this.notationBounds.union(this.notations[i].bounds);\n\t      }this.lyricVerticalOffset = this.notationBounds.y + this.notationBounds.height + ctxt.lyricTextSize;\n\t\n\t      // finalize the lyrics placement\n\t      for (i = 0; i < this.notations.length; i++) {\n\t        notation = this.notations[i];\n\t\n\t        if (!notation.hasLyric()) continue;\n\t\n\t        notation.lyric.bounds.y = this.lyricVerticalOffset;\n\t      }\n\t\n\t      // dropCap and the annotations\n\t      if (this.scoreNotationStart == 0 && this.score.dropCap != null) {\n\t\n\t        // drop caps and annotations are drawn from their center, so aligning them\n\t        // horizontally is as easy as this.staffLeft / 2\n\t\n\t        this.score.dropCap.bounds.x = this.staffLeft / 2;\n\t        this.score.dropCap.bounds.y = this.lyricVerticalOffset;\n\t\n\t        if (this.score.annotation != null) {\n\t          this.score.annotation.bounds.x += this.staffLeft / 2;\n\t          this.score.annotation.bounds.y += -ctxt.staffInterval * 1.5;\n\t        }\n\t      }\n\t\n\t      this.notationBounds.height += ctxt.lyricTextSize;\n\t\n\t      this.bounds.x = 0;\n\t      this.bounds.y = this.notationBounds.y;\n\t      this.bounds.width = this.notationBounds.right();\n\t      this.bounds.height = this.notationBounds.height;\n\t\n\t      // the origin of the chant line's coordinate space is at the center line of the left extremity of the staff\n\t      this.origin = new _Exsurge.Point(this.staffLeft, -this.notationBounds.y);\n\t    }\n\t  }, {\n\t    key: 'createDrawable',\n\t    value: function createDrawable(ctxt) {\n\t      var inner = \"\";\n\t\n\t      // add the chant lines\n\t      var x1 = this.staffLeft,\n\t          x2 = this.staffRight;\n\t\n\t      // create the staff lines\n\t      for (var i = -3; i <= 3; i += 2) {\n\t\n\t        inner += _Exsurge2.QuickSvg.createFragment('line', {\n\t          'x1': x1,\n\t          'y1': ctxt.staffInterval * i,\n\t          'x2': x2,\n\t          'y2': ctxt.staffInterval * i,\n\t          'stroke': ctxt.staffLineColor,\n\t          'stroke-width': ctxt.staffLineWeight,\n\t          'class': 'StaffLine'\n\t        });\n\t      }\n\t\n\t      // dropCap and the annotations\n\t      if (this.scoreNotationStart == 0 && this.score.dropCap != null) {\n\t\n\t        inner += this.score.dropCap.createDrawable(ctxt);\n\t\n\t        if (this.score.annotation != null) inner += this.score.annotation.createDrawable(ctxt);\n\t      }\n\t\n\t      // add all of the notations\n\t      for (var i = 0; i < this.notations.length; i++) {\n\t        inner += this.notations[i].createDrawable(ctxt);\n\t      }return _Exsurge2.QuickSvg.createFragment('g', {\n\t        'class': 'ChantLine',\n\t        'transform': 'translate(' + this.bounds.x + ',' + this.bounds.y + ')'\n\t      }, inner);\n\t    }\n\t  }, {\n\t    key: 'buildFromChantNotationIndex',\n\t    value: function buildFromChantNotationIndex(ctxt, newElementStart, width) {\n\t\n\t      // todo: reset / clear the children we have in case they have data\n\t      this.scoreNotationStart = newElementStart;\n\t      this.scoreNotationCount = 0;\n\t      this.notations = [];\n\t\n\t      this.staffLeft = 0;\n\t\n\t      if (width > 0) this.staffRight = this.staffLeft + width;else this.staffRight = 99999999; // no limit to staff size\n\t\n\t      // Begin with the drop cap\n\t      if (this.scoreNotationStart == 0 && this.score.dropCap != null) {\n\t        // add a little padding around the dropcap\n\t        this.staffLeft += this.score.dropCap.bounds.width + this.score.dropCap.padding * 2;\n\t      }\n\t\n\t      // set up the clef...\n\t      // Also, add the clef as a child (which will also set the clef in the context)\n\t      this.setStartingClef(ctxt.activeClef);\n\t      this.startingClef.performLayout(ctxt);\n\t      this.startingClef.bounds.x = this.staffLeft;\n\t      this.notations.push(this.startingClef);\n\t\n\t      var current = this.startingClef,\n\t          previous = null,\n\t          previousWithLyric = null;\n\t\n\t      // todo: estimate how much space we have available to us\n\t      var rightBoundary = this.staffRight - _Exsurge3.Glyphs.CustodLong.bounds.width - ctxt.intraNeumeSpacing * 4; // possible custod on the line\n\t\n\t      // todo: iterate through the notations, fittng what we can on this line\n\t      var scoreNotations = this.score.notations;\n\t\n\t      for (var i = newElementStart; i < scoreNotations.length; i++) {\n\t\n\t        if (current.hasLyric()) previousWithLyric = current;\n\t\n\t        previous = current;\n\t        current = scoreNotations[i];\n\t\n\t        // try to fit the current element on this line.\n\t        // if it doesn't fit, we finish up here.\n\t        var fitsOnLine = this.positionNotationElement(ctxt, previousWithLyric, previous, current, rightBoundary);\n\t        if (fitsOnLine === false) {\n\t\n\t          // check if the previous elements want to be kept with this one\n\t          for (var k = i - 1; k > this.scoreNotationStart; k--) {\n\t            var cne = this.score.notations[k];\n\t\n\t            if (cne.keepWithNext === true) {\n\t              this.notations.pop(); // remove it from our notations\n\t              this.scoreNotationCount--;\n\t            } else break;\n\t          }\n\t\n\t          // we are at the end of the line!\n\t          break;\n\t        }\n\t\n\t        current.chantLine = this;\n\t        this.notations.push(current);\n\t        this.scoreNotationCount++;\n\t\n\t        // line breaks are a special case indicating to stop processing here\n\t        if (current.constructor.name == 'ChantLineBreak' && width > 0) {\n\t          this.justify = current.justify;\n\t          break;\n\t        }\n\t      }\n\t\n\t      var extraSpace = 0;\n\t\n\t      if (this.notations.length > 0) {\n\t        var last = this.notations[this.notations.length - 1];\n\t\n\t        if (last.hasLyric() && last.getLyricRight() > last.bounds.right() + last.trailingSpace) extraSpace = this.staffRight - last.getLyricRight();else extraSpace = this.staffRight - (last.bounds.right() + last.trailingSpace);\n\t      }\n\t\n\t      // create the custod at the end of the line (if we need it!)\n\t      // if we find an element following this one that is a neume, we create a custod for it\n\t      for (var i = this.scoreNotationStart + this.scoreNotationCount; i < this.score.notations.length; i++) {\n\t        var notation = this.score.notations[i];\n\t\n\t        if ('notes' in notation && notation.notes.length > 0) {\n\t\n\t          var custod = new _ExsurgeChant.Custod();\n\t          custod.referringNeume = notation;\n\t\n\t          custod.performLayout(ctxt);\n\t\n\t          if (this.notations.length > 0) {\n\t            var last = this.notations[this.notations.length - 1];\n\t            custod.bounds.x = last.bounds.x + last.bounds.width;\n\t          }\n\t\n\t          this.custod = custod;\n\t          this.notations.push(custod);\n\t\n\t          extraSpace -= custod.bounds.width + custod.leadingSpace;\n\t\n\t          // nothing more to see here...\n\t          break;\n\t        }\n\t      }\n\t\n\t      if (width <= 0 && this.notations.length > 0) {\n\t        // set the staff width based on the notations.\n\t        this.staffRight = this.notations[this.notations.length - 1].bounds.right();\n\t      }\n\t\n\t      // Justify the line if we are not the last one\n\t      if (this.justify === true && width > 0 && this.scoreNotationStart + this.scoreNotationCount < this.score.notations.length && extraSpace > 0) this.justifyElements(extraSpace);\n\t    }\n\t  }, {\n\t    key: 'justifyElements',\n\t    value: function justifyElements(extraSpace) {\n\t\n\t      var indices = [];\n\t\n\t      var prev = null,\n\t          curr = null,\n\t          prevWithLyrics = null;\n\t\n\t      // if we have a custod, place it at the end of the line\n\t      if (this.custod != null) this.custod.bounds.x = this.staffRight - this.custod.bounds.width - this.custod.leadingSpace;\n\t\n\t      // first pass: determine the neumes we can space apart\n\t      // start at 1 to skip the clef\n\t      for (var i = 1; i < this.notations.length - 1; i++) {\n\t\n\t        if (curr != null && curr.hasLyric()) prevWithLyrics = curr;\n\t\n\t        prev = curr;\n\t        curr = this.notations[i];\n\t\n\t        if (prev != null && prev.keepWithNext === true) continue;\n\t\n\t        if (prevWithLyrics != null && prevWithLyrics.lyric.allowsConnector() && !prevWithLyrics.lyric.needsConnector) continue;\n\t\n\t        if (curr.constructor.name == 'ChantLineBreak') continue;\n\t\n\t        // otherwise, we can add space before this element\n\t        indices.push(i);\n\t      }\n\t\n\t      if (indices.length == 0) return;\n\t\n\t      var offset = 0;\n\t      var increment = extraSpace / indices.length;\n\t      var lastIndex = this.notations[this.notations.length - 1].constructor.name == 'Custod' ? this.notations.length - 1 : this.notations.length;\n\t      for (var i = 1; i < lastIndex; i++) {\n\t\n\t        curr = this.notations[i];\n\t\n\t        if (indices.indexOf(i) >= 0) {\n\t          curr.bounds.x += offset + increment;\n\t          offset += increment;\n\t        } else curr.bounds.x += offset;\n\t      }\n\t\n\t      offset = offset;\n\t    }\n\t\n\t    // this is where the real core of positioning neumes takes place\n\t    // returns true if positioning was able to fit the neume before rightBoundary.\n\t    // returns false if cannot fit before given right margin.\n\t    // fixme: if this returns false, shouldn't we set the connectors on prev to be activated?!\n\t\n\t  }, {\n\t    key: 'positionNotationElement',\n\t    value: function positionNotationElement(ctxt, prevWithLyric, prev, curr, rightBoundary) {\n\t\n\t      // To begin we just place the current notation right after the previous,\n\t      // irrespective of lyrics.\n\t      curr.bounds.x = prev.bounds.right() + prev.trailingSpace;\n\t\n\t      if (prevWithLyric == null) {\n\t\n\t        var maxRight = curr.bounds.right() + curr.trailingSpace;\n\t\n\t        // if the lyric left is negative, then offset the neume appropriately\n\t        if (curr.hasLyric()) {\n\t          curr.lyric.setNeedsConnector(false); // we hope for the best!\n\t\n\t          if (curr.getLyricLeft() < 0) curr.bounds.x += -curr.getLyricLeft();\n\t\n\t          maxRight = Math.max(maxRight, curr.getLyricRight());\n\t        }\n\t\n\t        if (maxRight > rightBoundary) return false;else return true;\n\t      }\n\t\n\t      if (curr.hasLyric() === false) {\n\t\n\t        if (prevWithLyric.lyric.allowsConnector()) prevWithLyric.lyric.setNeedsConnector(true);\n\t\n\t        if (curr.bounds.right() + curr.trailingSpace < rightBoundary) return true;else {\n\t          //curr.bounds.x = this.startingClef.bounds.right();\n\t          return false;\n\t        }\n\t      }\n\t\n\t      curr.lyric.setNeedsConnector(false); // we hope for the best!\n\t\n\t      var currLyricLeft = curr.getLyricLeft();\n\t      var prevLyricRight = prevWithLyric.getLyricRight();\n\t\n\t      if (prevWithLyric.lyric.allowsConnector() === false) {\n\t\n\t        // No connector needed, but include space between words if necessary!\n\t        if (prevLyricRight + ctxt.minLyricWordSpacing > currLyricLeft) {\n\t          // push the current element over a bit.\n\t          curr.bounds.x += prevLyricRight + ctxt.minLyricWordSpacing - currLyricLeft;\n\t        }\n\t      } else {\n\t\n\t        // we may need a connector yet...\n\t\n\t        if (prevLyricRight > currLyricLeft) {\n\t          // in this case, the lyric elements actually overlap.\n\t          // so nope, no connector needed. instead, we just place the lyrics together\n\t          // fixme: for better text layout, we could actually use the kerning values\n\t          // between the prev and curr lyric elements!\n\t          curr.bounds.x += prevLyricRight - currLyricLeft;\n\t        } else {\n\t\n\t          // bummer, looks like we couldn't merge the syllables together. Better add a connector...\n\t          prevWithLyric.lyric.setNeedsConnector(true);\n\t          prevLyricRight = prevWithLyric.getLyricRight();\n\t\n\t          if (prevLyricRight > currLyricLeft) curr.bounds.x += prevLyricRight - currLyricLeft;\n\t        }\n\t      }\n\t\n\t      if (curr.bounds.right() + curr.trailingSpace < rightBoundary) return true;\n\t\n\t      // if we made it this far, then the element won't fit on this line.\n\t      // set the position of the current element to the beginning of a chant line,\n\t      // and mark the previous lyric as connecting if needed.\n\t      // curr.bounds.x = this.startingClef.bounds.right();\n\t\n\t      if (prevWithLyric.lyric != null && prevWithLyric.lyric.allowsConnector()) prevWithLyric.lyric.setNeedsConnector(true);\n\t\n\t      return false;\n\t    }\n\t  }]);\n\t\n\t  return ChantLine;\n\t}(_Exsurge2.ChantLayoutElement);\n\t\n\t/*\r\n\t * Score, document\r\n\t */\n\t\n\t\n\tvar ChantScore = exports.ChantScore = function () {\n\t  function ChantScore() {\n\t    _classCallCheck(this, ChantScore);\n\t\n\t    this.startingClef = null; // Clef\n\t\n\t    this.notations = [];\n\t    this.lines = [];\n\t    this.notes = [];\n\t\n\t    this.dropCap = null;\n\t    this.annotation = null;\n\t\n\t    this.compiled = false;\n\t\n\t    this.autoColoring = true;\n\t\n\t    // valid after chant lines are created...\n\t    this.bounds = new _Exsurge.Rect();\n\t  }\n\t\n\t  _createClass(ChantScore, [{\n\t    key: 'performLayout',\n\t    value: function performLayout(ctxt, finishedCallback) {\n\t      var _this7 = this;\n\t\n\t      // first order of business: let the clef perform layout\n\t      this.startingClef.performLayout(ctxt);\n\t\n\t      if (this.dropCap) this.dropCap.recalculateMetrics(ctxt);\n\t\n\t      if (this.annotation) this.annotation.recalculateMetrics(ctxt);\n\t\n\t      // add all text items to the svg measurer in order to calculate their bounds\n\t      /*for (var i = 0; i < this.notations.length; i++) {\r\n\t        if (this.notations[i].hasLyric())\r\n\t          ctxt.svgTextMeasurer.insertAdjacentHTML('beforeend', this.notations[i].lyric.createDrawable(ctxt));\r\n\t      }\r\n\t        // annotations and drop caps\r\n\t      if (this.dropCap != null)\r\n\t        ctxt.svgTextMeasurer.insertAdjacentHTML('beforeend', this.dropCap.createDrawable(ctxt));\r\n\t        if (this.annotation != null)\r\n\t        ctxt.svgTextMeasurer.insertAdjacentHTML('beforeend', this.annotation.createDrawable(ctxt));\r\n\t      */\n\t\n\t      // give the system a chance to render the text items, then measure them\n\t      // and boot the compilation process\n\t      setTimeout(function () {\n\t        for (var i = 0; i < _this7.notations.length; i++) {\n\t          if (_this7.notations[i].hasLyric()) ; //this.notations[i].lyric.updateMetricsFromSvg();\n\t        }\n\t\n\t        _this7.compileElement(ctxt, 0, finishedCallback);\n\t      }, 0);\n\t    }\n\t  }, {\n\t    key: 'compileElement',\n\t    value: function compileElement(ctxt, index, finishedCallback) {\n\t      var _this8 = this;\n\t\n\t      if (index >= this.notations.length) {\n\t\n\t        if (!this.compiled) {\n\t          this.compiled = true;\n\t          setTimeout(function () {\n\t            if (finishedCallback) finishedCallback();\n\t          }, 0);\n\t        }\n\t\n\t        return;\n\t      }\n\t\n\t      var timeout = new Date().getTime() + 50; // process for fifty milliseconds\n\t      do {\n\t        var notation = this.notations[index++];\n\t        notation.performLayout(ctxt);\n\t      } while (index < this.notations.length && timeout < new Date().getTime());\n\t\n\t      // schedule the next block of processing\n\t      setTimeout(function () {\n\t        _this8.compileElement(ctxt, index, finishedCallback);\n\t      }, 0);\n\t    }\n\t  }, {\n\t    key: 'layoutChantLines',\n\t    value: function layoutChantLines(ctxt, width, finishedCallback) {\n\t\n\t      this.lines = [];\n\t\n\t      var y = 0;\n\t      var currIndex = 0;\n\t\n\t      if (ctxt.activeClef == null) ctxt.activeClef = this.startingClef;\n\t\n\t      do {\n\t\n\t        var line = new ChantLine(this);\n\t\n\t        line.buildFromChantNotationIndex(ctxt, currIndex, width);\n\t        currIndex += line.scoreNotationCount;\n\t        line.performLayout(ctxt);\n\t        this.lines.push(line);\n\t\n\t        line.bounds.y = -line.bounds.y + y;\n\t        y += line.bounds.height + ctxt.staffInterval * 3;\n\t      } while (currIndex < this.notations.length);\n\t\n\t      var lastLine = this.lines[this.lines.length - 1];\n\t\n\t      this.bounds.x = 0;\n\t      this.bounds.y = 0;\n\t      this.bounds.width = lastLine.bounds.width;\n\t      this.bounds.height = y;\n\t\n\t      if (finishedCallback) finishedCallback(this);\n\t    }\n\t  }, {\n\t    key: 'createDrawable',\n\t    value: function createDrawable(ctxt) {\n\t\n\t      var drawable = \"\";\n\t\n\t      // create defs section\n\t      for (var def in ctxt.defs) {\n\t        drawable += ctxt.defs[def];\n\t      }drawable = _Exsurge2.QuickSvg.createFragment('defs', {}, drawable);\n\t\n\t      for (var i = 0; i < this.lines.length; i++) {\n\t        drawable += this.lines[i].createDrawable(ctxt);\n\t      }drawable = _Exsurge2.QuickSvg.createFragment('g', {}, drawable);\n\t\n\t      drawable = _Exsurge2.QuickSvg.createFragment('svg', {\n\t        'xmlns': 'http://www.w3.org/2000/svg',\n\t        'version': '1.1',\n\t        'xmlns:xlink': 'http://www.w3.org/1999/xlink',\n\t        'class': 'ChantScore',\n\t        'width': this.bounds.width,\n\t        'height': this.bounds.height\n\t      }, drawable);\n\t\n\t      return drawable;\n\t    }\n\t  }, {\n\t    key: 'prepareNotesForAudio',\n\t    value: function prepareNotesForAudio() {\n\t\n\t      this.notes = [];\n\t\n\t      // run through all of the notations...\n\t      var prevNeume = null;\n\t      var currNotation = null;\n\t      for (var i = 0; i < this.notations.length; i++) {\n\t        var currNotation = this.notations[i];\n\t\n\t        if (typeof currNotation.notes !== 'undefined') {\n\t\n\t          // copy the notes to the score for playback\n\t          for (var j = 0; j < currNotation.notes.length; j++) {\n\t            this.notes.push(currNotation.notes[j]);\n\t          }prevNeume = currNotation;\n\t        } else {\n\t          // not a neume...if it's a full bar or a double bar, we can lengthen the notes here\n\t          if (prevNeume != null && currNotation.constructor.name == 'FullBar' || currNotation.constructor.name == 'DoubleBar') {}\n\t        }\n\t      }\n\t    }\n\t  }, {\n\t    key: 'unserializeFromJson',\n\t    value: function unserializeFromJson(data) {\n\t      this.autoColoring = data['auto-coloring'];\n\t\n\t      if (data.annotation != null && data.annotation != \"\") {\n\t        // create the annotation\n\t        this.annotation = new _Exsurge2.Annotation(_Exsurge2.ctxt, data.annotation);\n\t      } else this.annotation = null;\n\t\n\t      var createDropCap = data['drop-cap'] == 'auto' ? true : false;\n\t\n\t      _Exsurge4.Gabc.parseChantNotations(data.notations, this, createDropCap);\n\t    }\n\t  }, {\n\t    key: 'serializeToJson',\n\t    value: function serializeToJson() {\n\t      var data = {};\n\t\n\t      data['type'] = \"score\";\n\t      data['auto-coloring'] = true;\n\t\n\t      if (this.annotation != null) data.annotation = this.annotation.unsanitizedText;else data.annotation = \"\";\n\t\n\t      return data;\n\t    }\n\t  }]);\n\t\n\t  return ChantScore;\n\t}();\n\t\n\tvar ChantDocument = exports.ChantDocument = function () {\n\t  function ChantDocument() {\n\t    _classCallCheck(this, ChantDocument);\n\t\n\t    var defaults = {\n\t      layout: {\n\t        units: \"mm\",\n\t        'default-font': {\n\t          'font-family': \"Crimson\",\n\t          'font-size': 14\n\t        },\n\t        page: {\n\t          width: 8.5,\n\t          height: 11,\n\t          'margin-left': 0,\n\t          'margin-top': 0,\n\t          'margin-right': 0,\n\t          'margin-bottom': 0\n\t        }\n\t      },\n\t      scores: []\n\t    };\n\t\n\t    // default layout\n\t    this.copyLayout(this, defaults);\n\t\n\t    this.scores = defaults.scores;\n\t  }\n\t\n\t  _createClass(ChantDocument, [{\n\t    key: 'copyLayout',\n\t    value: function copyLayout(to, from) {\n\t\n\t      to.layout = {\n\t        units: from.layout.units,\n\t        'default-font': {\n\t          'font-family': from.layout['default-font']['font-family'],\n\t          'font-size': from.layout['default-font']['font-size']\n\t        },\n\t        page: {\n\t          width: from.layout.page.width,\n\t          height: from.layout.page.height,\n\t          'margin-left': from.layout.page['margin-left'],\n\t          'margin-top': from.layout.page['margin-top'],\n\t          'margin-right': from.layout.page['margin-right'],\n\t          'margin-bottom': from.layout.page['margin-bottom']\n\t        }\n\t      };\n\t    }\n\t  }, {\n\t    key: 'unserializeFromJson',\n\t    value: function unserializeFromJson(data) {\n\t\n\t      this.copyLayout(this, data);\n\t\n\t      this.scores = [];\n\t\n\t      // read in the scores\n\t      for (var i = 0; i < data.scores.length; i++) {\n\t        var score = new ChantScore();\n\t\n\t        score.unserializeFromJson(data.scores[i]);\n\t        this.scores.push(score);\n\t      }\n\t    }\n\t  }, {\n\t    key: 'serializeToJson',\n\t    value: function serializeToJson() {\n\t      var data = {};\n\t\n\t      this.copyLayout(data, this);\n\t\n\t      data.scores = [];\n\t\n\t      // save scores...\n\t      for (var i = 0; i < this.scores.length; i++) {\n\t        data.scores.push(this.scores[i].serializeToJson());\n\t      }return data;\n\t    }\n\t  }]);\n\t\n\t  return ChantDocument;\n\t}();\n\n/***/ },\n/* 6 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.Virgula = exports.Accidental = exports.AccidentalType = exports.DoubleBar = exports.FullBar = exports.HalfBar = exports.QuarterBar = exports.DividingLine = exports.Custod = undefined;\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if (\"value\" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };\n\t\n\tvar _Exsurge = __webpack_require__(1);\n\t\n\tvar Exsurge = _interopRequireWildcard(_Exsurge);\n\t\n\tvar _Exsurge2 = __webpack_require__(4);\n\t\n\tfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } //\n\t// Author(s):\n\t// Fr. Matthew Spencer, OSJ <mspencer@osjusa.org>\n\t//\n\t// Copyright (c) 2008-2016 Fr. Matthew Spencer, OSJ\n\t//\n\t// Permission is hereby granted, free of charge, to any person obtaining a copy\n\t// of this software and associated documentation files (the \"Software\"), to deal\n\t// in the Software without restriction, including without limitation the rights\n\t// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n\t// copies of the Software, and to permit persons to whom the Software is\n\t// furnished to do so, subject to the following conditions:\n\t//\n\t// The above copyright notice and this permission notice shall be included in\n\t// all copies or substantial portions of the Software.\n\t//\n\t// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n\t// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n\t// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n\t// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n\t// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n\t// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n\t// THE SOFTWARE.\n\t//\n\t\n\t/*\r\n\t *\r\n\t */\n\t\n\tvar Custod = exports.Custod = function (_ChantNotationElement) {\n\t  _inherits(Custod, _ChantNotationElement);\n\t\n\t  function Custod() {\n\t    _classCallCheck(this, Custod);\n\t\n\t    var _this = _possibleConstructorReturn(this, Object.getPrototypeOf(Custod).call(this));\n\t\n\t    _this.referringNeume = null;\n\t    _this.note = null;\n\t    return _this;\n\t  }\n\t\n\t  _createClass(Custod, [{\n\t    key: 'performLayout',\n\t    value: function performLayout(ctxt) {\n\t      _get(Object.getPrototypeOf(Custod.prototype), 'performLayout', this).call(this, ctxt);\n\t\n\t      var staffPosition = 0; // a default value just to make sure we don't fail rebuilding\n\t      var glyphCode;\n\t\n\t      if (this.referringNeume != null) {\n\t        if (this.referringNeume.notes.length > 0) staffPosition = this.referringNeume.notes[0].staffPosition;\n\t      } else if (note != null) staffPosition = this.note.staffPosition;\n\t\n\t      glyphCode = Custod.getGlyphCode(staffPosition);\n\t\n\t      var glyph = new _Exsurge2.GlyphVisualizer(ctxt, glyphCode);\n\t      glyph.setStaffPosition(ctxt, staffPosition);\n\t      this.addVisualizer(glyph);\n\t\n\t      this.finishLayout(ctxt);\n\t    }\n\t  }], [{\n\t    key: 'getGlyphCode',\n\t    value: function getGlyphCode(staffPosition) {\n\t\n\t      if (staffPosition <= 2) {\n\t\n\t        // ascending custodes\n\t        if (Math.abs(staffPosition) % 2 == 1) return _Exsurge2.GlyphCode.CustodLong;else return _Exsurge2.GlyphCode.CustodShort;\n\t      } else {\n\t\n\t        // descending custodes\n\t        if (Math.abs(staffPosition) % 2 == 1) return _Exsurge2.GlyphCode.CustodDescLong;else return _Exsurge2.GlyphCode.CustodDescShort;\n\t      }\n\t    }\n\t  }]);\n\t\n\t  return Custod;\n\t}(_Exsurge2.ChantNotationElement);\n\t\n\t/*\r\n\t * DividingLine\r\n\t */\n\t\n\t\n\tvar DividingLine = exports.DividingLine = function (_ChantNotationElement2) {\n\t  _inherits(DividingLine, _ChantNotationElement2);\n\t\n\t  function DividingLine() {\n\t    _classCallCheck(this, DividingLine);\n\t\n\t    var _this2 = _possibleConstructorReturn(this, Object.getPrototypeOf(DividingLine).call(this));\n\t\n\t    _this2.resetsAccidentals = true;\n\t    return _this2;\n\t  }\n\t\n\t  return DividingLine;\n\t}(_Exsurge2.ChantNotationElement);\n\t\n\t/*\r\n\t * QuarterBar\r\n\t */\n\t\n\t\n\tvar QuarterBar = exports.QuarterBar = function (_DividingLine) {\n\t  _inherits(QuarterBar, _DividingLine);\n\t\n\t  function QuarterBar() {\n\t    _classCallCheck(this, QuarterBar);\n\t\n\t    return _possibleConstructorReturn(this, Object.getPrototypeOf(QuarterBar).apply(this, arguments));\n\t  }\n\t\n\t  _createClass(QuarterBar, [{\n\t    key: 'performLayout',\n\t    value: function performLayout(ctxt) {\n\t      _get(Object.getPrototypeOf(QuarterBar.prototype), 'performLayout', this).call(this, ctxt);\n\t      this.addVisualizer(new _Exsurge2.DividerLineVisualizer(ctxt, 2, 4));\n\t\n\t      this.origin.x = this.bounds.width / 2;\n\t\n\t      this.finishLayout(ctxt);\n\t    }\n\t  }]);\n\t\n\t  return QuarterBar;\n\t}(DividingLine);\n\t\n\t/*\r\n\t * HalfBar\r\n\t */\n\t\n\t\n\tvar HalfBar = exports.HalfBar = function (_DividingLine2) {\n\t  _inherits(HalfBar, _DividingLine2);\n\t\n\t  function HalfBar() {\n\t    _classCallCheck(this, HalfBar);\n\t\n\t    return _possibleConstructorReturn(this, Object.getPrototypeOf(HalfBar).apply(this, arguments));\n\t  }\n\t\n\t  _createClass(HalfBar, [{\n\t    key: 'performLayout',\n\t    value: function performLayout(ctxt) {\n\t      _get(Object.getPrototypeOf(HalfBar.prototype), 'performLayout', this).call(this, ctxt);\n\t\n\t      this.addVisualizer(new _Exsurge2.DividerLineVisualizer(ctxt, -2, 2));\n\t\n\t      this.origin.x = this.bounds.width / 2;\n\t\n\t      this.finishLayout(ctxt);\n\t    }\n\t  }]);\n\t\n\t  return HalfBar;\n\t}(DividingLine);\n\t\n\t/*\r\n\t * FullBar\r\n\t */\n\t\n\t\n\tvar FullBar = exports.FullBar = function (_DividingLine3) {\n\t  _inherits(FullBar, _DividingLine3);\n\t\n\t  function FullBar() {\n\t    _classCallCheck(this, FullBar);\n\t\n\t    return _possibleConstructorReturn(this, Object.getPrototypeOf(FullBar).apply(this, arguments));\n\t  }\n\t\n\t  _createClass(FullBar, [{\n\t    key: 'performLayout',\n\t    value: function performLayout(ctxt) {\n\t      _get(Object.getPrototypeOf(FullBar.prototype), 'performLayout', this).call(this, ctxt);\n\t\n\t      this.addVisualizer(new _Exsurge2.DividerLineVisualizer(ctxt, -3, 3));\n\t\n\t      this.origin.x = this.bounds.width / 2;\n\t\n\t      this.finishLayout(ctxt);\n\t    }\n\t  }]);\n\t\n\t  return FullBar;\n\t}(DividingLine);\n\t\n\t/*\r\n\t * DoubleBar\r\n\t */\n\t\n\t\n\tvar DoubleBar = exports.DoubleBar = function (_DividingLine4) {\n\t  _inherits(DoubleBar, _DividingLine4);\n\t\n\t  function DoubleBar() {\n\t    _classCallCheck(this, DoubleBar);\n\t\n\t    return _possibleConstructorReturn(this, Object.getPrototypeOf(DoubleBar).apply(this, arguments));\n\t  }\n\t\n\t  _createClass(DoubleBar, [{\n\t    key: 'performLayout',\n\t    value: function performLayout(ctxt) {\n\t      _get(Object.getPrototypeOf(DoubleBar.prototype), 'performLayout', this).call(this, ctxt);\n\t\n\t      var line0 = new _Exsurge2.DividerLineVisualizer(ctxt, -3, 3);\n\t      line0.bounds.x = 0;\n\t      this.addVisualizer(line0);\n\t\n\t      var line1 = new _Exsurge2.DividerLineVisualizer(ctxt, -3, 3);\n\t      line1.bounds.x = ctxt.intraNeumeSpacing * 2;\n\t      this.addVisualizer(line1);\n\t\n\t      this.origin.x = this.bounds.width / 2;\n\t\n\t      this.finishLayout(ctxt);\n\t    }\n\t  }]);\n\t\n\t  return DoubleBar;\n\t}(DividingLine);\n\t\n\tvar AccidentalType = exports.AccidentalType = {\n\t  Flat: -1,\n\t  Natural: 0,\n\t  Sharp: 1\n\t};\n\t\n\t/*\r\n\t * Accidental\r\n\t */\n\t\n\tvar Accidental = exports.Accidental = function (_ChantNotationElement3) {\n\t  _inherits(Accidental, _ChantNotationElement3);\n\t\n\t  function Accidental(staffPosition, accidentalType) {\n\t    _classCallCheck(this, Accidental);\n\t\n\t    var _this7 = _possibleConstructorReturn(this, Object.getPrototypeOf(Accidental).call(this));\n\t\n\t    _this7.isAccidental = true;\n\t    _this7.keepWithNext = true; // accidentals should always stay connected...\n\t\n\t    _this7.staffPosition = staffPosition;\n\t    _this7.accidentalType = accidentalType;\n\t    return _this7;\n\t  }\n\t\n\t  _createClass(Accidental, [{\n\t    key: 'performLayout',\n\t    value: function performLayout(ctxt) {\n\t      _get(Object.getPrototypeOf(Accidental.prototype), 'performLayout', this).call(this, ctxt);\n\t\n\t      var glyphCode = _Exsurge2.GlyphCode.Flat;\n\t\n\t      switch (this.accidentalType) {\n\t        case AccidentalType.Natural:\n\t          glyphCode = _Exsurge2.GlyphCode.Natural;\n\t          break;\n\t        case AccidentalType.Sharp:\n\t          glyphCode = _Exsurge2.GlyphCode.Sharp;\n\t          break;\n\t        default:\n\t          glyphCode = _Exsurge2.GlyphCode.Flat;\n\t          break;\n\t      }\n\t\n\t      var glyph = new _Exsurge2.GlyphVisualizer(ctxt, glyphCode);\n\t      glyph.setStaffPosition(ctxt, this.staffPosition);\n\t\n\t      this.addVisualizer(glyph);\n\t\n\t      this.finishLayout(ctxt);\n\t    }\n\t  }, {\n\t    key: 'adjustStep',\n\t    value: function adjustStep(step) {\n\t      switch (this.accidentalType) {\n\t        case AccidentalType.Flat:\n\t          if (step == Step.Ti) return Step.Te;\n\t          if (step == Step.Mi) return Step.Me;\n\t          break;\n\t        case AccidentalType.Sharp:\n\t          if (step == Step.Do) return Step.Du;\n\t          if (step == Step.Fa) return Step.Fu;\n\t          break;\n\t        case AccidentalType.Natural:\n\t          if (step == Step.Te) return Step.Ti;\n\t          if (step == Step.Me) return Step.Mi;\n\t          if (step == Step.Du) return Step.Do;\n\t          if (step == Step.Fu) return Step.Fa;\n\t          break;\n\t      }\n\t\n\t      // no adjustment needed\n\t      return step;\n\t    }\n\t  }, {\n\t    key: 'applyToPitch',\n\t    value: function applyToPitch(pitch) {\n\t\n\t      // fixme: this is broken since we changed to staff positions\n\t\n\t      // no adjusment needed\n\t      if (this.octave != pitch.octave) return;\n\t\n\t      pitch.step = this.adjustStep(pitch.step);\n\t    }\n\t  }]);\n\t\n\t  return Accidental;\n\t}(_Exsurge2.ChantNotationElement);\n\t\n\t/*\r\n\t * Virgula\r\n\t */\n\t\n\t\n\tvar Virgula = exports.Virgula = function (_ChantNotationElement4) {\n\t  _inherits(Virgula, _ChantNotationElement4);\n\t\n\t  function Virgula() {\n\t    _classCallCheck(this, Virgula);\n\t\n\t    // fixme: the staff position of the virgula is customizable, so that it\n\t    // can be placed on different lines (top or bottom) depending on the\n\t    // notation tradition of what is being notated (e.g., Benedictine has it\n\t    //  on top line, Norbertine at the bottom)\n\t\n\t    var _this8 = _possibleConstructorReturn(this, Object.getPrototypeOf(Virgula).call(this));\n\t\n\t    _this8.staffPosition = 3;\n\t    return _this8;\n\t  }\n\t\n\t  _createClass(Virgula, [{\n\t    key: 'performLayout',\n\t    value: function performLayout(ctxt) {\n\t      _get(Object.getPrototypeOf(Virgula.prototype), 'performLayout', this).call(this, ctxt);\n\t\n\t      var glyph = new _Exsurge2.GlyphVisualizer(ctxt, _Exsurge2.GlyphCode.Virgula);\n\t      glyph.setStaffPosition(ctxt, this.staffPosition);\n\t\n\t      this.addVisualizer(glyph);\n\t\n\t      this.origin.x = this.bounds.width / 2;\n\t\n\t      this.finishLayout(ctxt);\n\t    }\n\t  }]);\n\t\n\t  return Virgula;\n\t}(_Exsurge2.ChantNotationElement);\n\n/***/ },\n/* 7 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.Gabc = undefined;\n\t\n\tvar _Exsurge = __webpack_require__(1);\n\t\n\tvar _Exsurge2 = __webpack_require__(4);\n\t\n\tvar _Exsurge3 = __webpack_require__(5);\n\t\n\tvar _ExsurgeChant = __webpack_require__(8);\n\t\n\tvar Markings = _interopRequireWildcard(_ExsurgeChant);\n\t\n\tvar _ExsurgeChant2 = __webpack_require__(6);\n\t\n\tvar Signs = _interopRequireWildcard(_ExsurgeChant2);\n\t\n\tvar _ExsurgeChant3 = __webpack_require__(9);\n\t\n\tvar Neumes = _interopRequireWildcard(_ExsurgeChant3);\n\t\n\tfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\t\n\t// reusable reg exps\n\tvar __syllablesRegex = /(?=.)((?:[^(])*)(?:\\(?([^)]*)\\)?)?/g; //\n\t// Author(s):\n\t// Fr. Matthew Spencer, OSJ <mspencer@osjusa.org>\n\t//\n\t// Copyright (c) 2008-2016 Fr. Matthew Spencer, OSJ\n\t//\n\t// Permission is hereby granted, free of charge, to any person obtaining a copy\n\t// of this software and associated documentation files (the \"Software\"), to deal\n\t// in the Software without restriction, including without limitation the rights\n\t// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n\t// copies of the Software, and to permit persons to whom the Software is\n\t// furnished to do so, subject to the following conditions:\n\t//\n\t// The above copyright notice and this permission notice shall be included in\n\t// all copies or substantial portions of the Software.\n\t//\n\t// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n\t// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n\t// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n\t// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n\t// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n\t// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n\t// THE SOFTWARE.\n\t//\n\t\n\tvar __notationsRegex = /z0|z|Z|::|:|;|,|`|c1|c2|c3|c4|f3|f4|cb3|cb4|\\/\\/|\\/|\\!|[a-mA-M][owWvVrRsxy#~\\+><_\\.'012345]*/g;\n\t\n\tvar Gabc = exports.Gabc = {\n\t\n\t  loadChantScore: function loadChantScore(ctxt, gabcNotations, createDropCap) {\n\t\n\t    var score = new _Exsurge3.ChantScore();\n\t\n\t    // fixme: no dropcap until the text engine is working again\n\t    this.parseChantNotations(ctxt, gabcNotations, score, createDropCap);\n\t\n\t    score.prepareNotesForAudio();\n\t\n\t    return score;\n\t  },\n\t\n\t  parseChantNotations: function parseChantNotations(ctxt, gabcNotations, score, createDropCap) {\n\t\n\t    score.notations = [];\n\t\n\t    var passByRef = {\n\t      activeClef: null\n\t    };\n\t\n\t    // split the notations on whitespace boundaries\n\t    var words = gabcNotations.match(/\\S+/g);\n\t\n\t    for (var i = 0; i < words.length; i++) {\n\t      var word = words[i];\n\t\n\t      var currSyllable = 0;\n\t\n\t      if (word == '') continue;\n\t\n\t      word = word.trim();\n\t\n\t      var matches = [];\n\t\n\t      while (match = __syllablesRegex.exec(word)) {\n\t        matches.push(match);\n\t      }for (var j = 0; j < matches.length; j++) {\n\t        var match = matches[j];\n\t\n\t        var lyricText = match[1].trim();\n\t        var notationData = match[2];\n\t\n\t        var items = this.createNotations(ctxt, score, notationData, passByRef);\n\t\n\t        if (items.length == 0) continue;\n\t\n\t        // if we are to create a dropCap and we haven't done so yet, do it now\n\t        if (createDropCap && score.dropCap == null && lyricText != \"\") {\n\t          score.dropCap = new _Exsurge2.DropCap(ctxt, lyricText.substring(0, 1));\n\t          lyricText = lyricText.substring(1);\n\t        }\n\t\n\t        // create lyric if we have it...\n\t        if (lyricText != \"\") {\n\t\n\t          var lyricType;\n\t          if (currSyllable == 0 && matches.length == 1) lyricType = _Exsurge2.LyricType.SingleSyllable;else if (currSyllable == 0 && matches.length > 1) lyricType = _Exsurge2.LyricType.BeginningSyllable;else if (currSyllable == matches.length - 1) lyricType = _Exsurge2.LyricType.EndingSyllable;else lyricType = _Exsurge2.LyricType.MiddleSyllable;\n\t\n\t          // add the lyrics to the first notation that makes sense...\n\t          var notationWithLyrics = null;\n\t          for (var k = 0; k < items.length; k++) {\n\t            var cne = items[k];\n\t            if (cne.constructor.name == \"Accidental\") continue;\n\t\n\t            notationWithLyrics = cne;\n\t            break;\n\t          }\n\t\n\t          // if it's not a neume then make the lyric a directive\n\t          if (notationWithLyrics.notes == null) lyricType = _Exsurge2.LyricType.Directive;\n\t\n\t          var lyric = this.makeLyric(ctxt, lyricText, lyricType);\n\t\n\t          // also, new words reset the accidentals, per the Solesmes style (see LU xviij)\n\t          if (lyric.lyricType == _Exsurge2.LyricType.BeginningSyllable || lyric.lyricType == _Exsurge2.LyricType.SingleSyllable) passByRef.activeClef.resetAccidentals();\n\t\n\t          // fixme: lyrics are broken! for now, just ignore them\n\t          notationWithLyrics.lyric = lyric;\n\t        }\n\t\n\t        score.notations = score.notations.concat(items);\n\t\n\t        currSyllable++;\n\t      }\n\t    }\n\t  },\n\t\n\t  makeLyric: function makeLyric(ctxt, text, lyricType) {\n\t\n\t    if (text.length > 1 && text[text.length - 1] == '-') {\n\t      if (lyricType == _Exsurge2.LyricType.EndingSyllable) lyricType = _Exsurge2.LyricType.MiddleSyllable;else if (lyricType == _Exsurge2.LyricType.SingleSyllable) lyricType = _Exsurge2.LyricType.BeginningSyllable;\n\t\n\t      text = text.substring(0, text.length - 1);\n\t    }\n\t\n\t    var elides = false;\n\t    if (text.length > 1 && text[text.length - 1] == '_') {\n\t      // must be an elision\n\t      elides = true;\n\t      text = text.substring(0, text.length - 1);\n\t    }\n\t\n\t    // replace special gabc characters\n\t    text = text.replace(\"<sp>R/</sp>\", \"R/\");\n\t    text = text.replace(\"<sp>V/</sp>\", \"V/\");\n\t\n\t    // check for italic/bold in the silliest way possible\n\t    // only works if italic is the outer tag\n\t    var italic = false;\n\t    if (text.startsWith('<i>') && text.endsWith('</i>')) {\n\t      text = text.substring(3, text.length - 4);\n\t      italic = true;\n\t    }\n\t\n\t    var bold = false;\n\t    if (text.startsWith('<b>') && text.endsWith('</b>')) {\n\t      text = text.substring(3, text.length - 4);\n\t      bold = true;\n\t    }\n\t\n\t    var s = new _Exsurge2.Lyric(ctxt, text, lyricType);\n\t    s.elidesToNext = elides;\n\t\n\t    if (italic) s.italic = true;\n\t\n\t    if (bold) s.bold = true;\n\t\n\t    // a hack to make the response/versicle characters work...\n\t    //if (text.search('℟') >= 0 || text.search('℣') >= 0)\n\t    //  s.NativeText.font = new Font(\"Arial Unicode MS\");\n\t\n\t    return s;\n\t  },\n\t\n\t  createNotations: function createNotations(ctxt, score, data, passByRef) {\n\t\n\t    var notations = [];\n\t\n\t    // if there is no data, then this must be a text only object\n\t    if (data === undefined || data === null || data === \"\") {\n\t      notations.push(new Neumes.TextOnly());\n\t      return notations;\n\t    }\n\t\n\t    var notes = [];\n\t    var out = { trailingSpace: -1 };\n\t\n\t    var that = this;\n\t    var addNotation = function addNotation(notation) {\n\t\n\t      // first, if we have any notes left over, we create a neume out of them\n\t      if (notes.length > 0) {\n\t        // create neume(s)\n\t\n\t        var neumes = that.createNeumesFromNotes(ctxt, score, notes, out.trailingSpace);\n\t        for (var i = 0; i < neumes.length; i++) {\n\t          notations.push(neumes[i]);\n\t        } // reset the trailing space\n\t        out.trailingSpace = -1;\n\t\n\t        notes = [];\n\t      }\n\t\n\t      // then, if we're passed a notation, let's add it\n\t      // also, perform chant logic here\n\t      if (notation != null) {\n\t\n\t        if (notation.isClef) {\n\t          if (score.startingClef == null) {\n\t            score.startingClef = notation;\n\t            return;\n\t          }\n\t        } else if (notation.isAccidental) passByRef.activeClef.activeAccidental = notation;else if (notation.resetsAccidentals) passByRef.activeClef.resetAccidentals();\n\t\n\t        notations.push(notation);\n\t      }\n\t    };\n\t\n\t    var atoms = data.match(__notationsRegex);\n\t\n\t    for (var i = 0; i < atoms.length; i++) {\n\t\n\t      var atom = atoms[i],\n\t          lineBreak = null;\n\t\n\t      // handle the clefs and dividers here\n\t      switch (atom) {\n\t        case \",\":\n\t          addNotation(new Signs.QuarterBar());\n\t          break;\n\t        case \"`\":\n\t          addNotation(new Signs.Virgula());\n\t          break;\n\t        case \";\":\n\t          addNotation(new Signs.HalfBar());\n\t          break;\n\t        case \":\":\n\t          addNotation(new Signs.FullBar());\n\t          break;\n\t        case \"::\":\n\t          addNotation(new Signs.DoubleBar());\n\t          break;\n\t        // other gregorio dividers are not supported\n\t\n\t        case \"c1\":\n\t          passByRef.activeClef = new _Exsurge3.DoClef(-3, 2);\n\t          addNotation(passByRef.activeClef);\n\t          break;\n\t\n\t        case \"c2\":\n\t          passByRef.activeClef = new _Exsurge3.DoClef(-1, 2);\n\t          addNotation(passByRef.activeClef);\n\t          break;\n\t\n\t        case \"c3\":\n\t          passByRef.activeClef = new _Exsurge3.DoClef(1, 2);\n\t          addNotation(passByRef.activeClef);\n\t          break;\n\t\n\t        case \"c4\":\n\t          passByRef.activeClef = new _Exsurge3.DoClef(3, 2);\n\t          addNotation(passByRef.activeClef);\n\t          break;\n\t\n\t        case \"f3\":\n\t          passByRef.activeClef = new _Exsurge3.FaClef(1, 2);\n\t          addNotation(passByRef.activeClef);\n\t          break;\n\t\n\t        case \"f4\":\n\t          passByRef.activeClef = new _Exsurge3.FaClef(3, 2);\n\t          addNotation(passByRef.activeClef);\n\t          break;\n\t\n\t        case \"cb3\":\n\t          passByRef.activeClef = new _Exsurge3.DoClef(1, 2);\n\t          passByRef.activeClef.defaultAccidental = new Accidental(_Exsurge.Step.Te, passByRef.activeClef.octave, Signs.AccidentalType.Flat);\n\t          addNotation(passByRef.activeClef);\n\t          break;\n\t\n\t        case \"cb4\":\n\t          passByRef.activeClef = new _Exsurge3.DoClef(3, 2);\n\t          passByRef.activeClef.defaultAccidental = new Accidental(_Exsurge.Step.Te, passByRef.activeClef.octave, Signs.AccidentalType.Flat);\n\t          addNotation(passByRef.activeClef);\n\t          break;\n\t\n\t        case \"z\":\n\t          lineBreak = new _Exsurge3.ChantLineBreak(true);\n\t          addNotation(lineBreak);\n\t          break;\n\t        case \"Z\":\n\t          lineBreak = new _Exsurge3.ChantLineBreak(false);\n\t          addNotation(lineBreak);\n\t          break;\n\t        case \"z0\":\n\t          // unsupported for now...\n\t          break;\n\t\n\t        // spacing indicators\n\t        case \"!\":\n\t          out.trailingSpace = 0;\n\t          addNotation(null);\n\t          break;\n\t        case \"/\":\n\t          out.trailingSpace = ctxt.intraNeumeSpacing;\n\t          addNotation(null);\n\t          break;\n\t        case \"//\":\n\t          out.trailingSpace = ctxt.intraNeumeSpacing * 2;\n\t          addNotation(null);\n\t          break;\n\t\n\t        default:\n\t          // might be a custod, might be an accidental, or might be a note\n\t          if (atom.length > 1 && atom[1] == '+') {\n\t            // custod\n\t            var custod = new Custod();\n\t\n\t            custod.note = new _Exsurge3.Note(this.convertGabcStaffPositionToScribamPitch(passByRef.activeClef, data[0]));\n\t\n\t            addNotation(custod);\n\t          } else if (atom.length > 1 && (atom[1] == 'x' || atom[1] == 'y' || atom[1] == '#')) {\n\t\n\t            var accidentalType;\n\t\n\t            switch (atom[1]) {\n\t              case 'y':\n\t                accidentalType = Signs.AccidentalType.Natural;\n\t                break;\n\t              case '#':\n\t                accidentalType = Signs.AccidentalType.Sharp;\n\t                break;\n\t              default:\n\t                accidentalType = Signs.AccidentalType.Flat;\n\t                break;\n\t            }\n\t\n\t            var note = this.createNoteFromData(passByRef.activeClef, atom);\n\t            var accidental = new Signs.Accidental(note.staffPosition, accidentalType);\n\t            accidental.trailingSpace = ctxt.intraNeumeSpacing * 2;\n\t\n\t            passByRef.activeClef.activeAccidental = accidental;\n\t\n\t            addNotation(accidental);\n\t          } else {\n\t\n\t            // to make our interpreter more robust, make sure we have a clef to work with\n\t            if (passByRef.activeClef == null) passByRef.activeClef = new _Exsurge3.DoClef(1, 2);\n\t\n\t            // looks like it's a note\n\t            notes.push(this.createNoteFromData(passByRef.activeClef, atom));\n\t          }\n\t          break;\n\t      }\n\t    }\n\t\n\t    // finish up any remaining notes we have left\n\t    addNotation(null);\n\t\n\t    return notations;\n\t  },\n\t\n\t  createNeumesFromNotes: function createNeumesFromNotes(ctxt, score, notes, finalTrailingSpace) {\n\t\n\t    var neumes = [];\n\t    var intraNeumeSpacing = ctxt.intraNeumeSpacing;\n\t\n\t    var prevNote = null,\n\t        currNote = null;\n\t    var firstNoteIndex = 0;\n\t    var currNoteIndex = 0;\n\t\n\t    // here we use a simple finite state machine to create the neumes from the notes\n\t    // createNeume is helper function which returns the next state after a neume is created\n\t    // (unknownState). Each state object has a neume() function and a handle() function.\n\t    // neume() allows us to create the neume of the state in the event that we run out\n\t    // of notes. handle() gives the state an opportunity to examine the currNote and\n\t    // determine what to do...either transition to a different neume/state, or\n\t    // continue building the neume of that state. handle() returns the next state\n\t\n\t    var createNeume = function createNeume(neume, includeCurrNote) {\n\t\n\t      // add the notes to the neume\n\t      var lastNoteIndex = includeCurrNote ? currNoteIndex : currNoteIndex - 1;\n\t      for (var i = firstNoteIndex; i <= lastNoteIndex; i++) {\n\t        neume.notes.push(notes[i]);\n\t      }neumes.push(neume);\n\t\n\t      if (includeCurrNote === false) {\n\t        firstNoteIndex = currNoteIndex;\n\t        currNoteIndex--;\n\t        neume.keepWithNext = true;\n\t        neume.trailingSpace = intraNeumeSpacing;\n\t      }\n\t\n\t      return unknownState;\n\t    };\n\t\n\t    var unknownState = {\n\t      neume: function neume() {\n\t        return new Punctum();\n\t      },\n\t      handle: function handle(currNote, prevNote) {\n\t\n\t        switch (currNote.shape) {\n\t          case _Exsurge3.NoteShape.Apostropha:\n\t            return apostrophaState;\n\t          case _Exsurge3.NoteShape.Cavum:\n\t            return createNeume(new Punctum(), true);\n\t          case _Exsurge3.NoteShape.OriscusAscending:\n\t            break;\n\t          case _Exsurge3.NoteShape.OriscusDescending:\n\t            break;\n\t          case _Exsurge3.NoteShape.Virga:\n\t            return virgaState;\n\t          default:\n\t            return punctumState;\n\t        }\n\t      }\n\t    };\n\t\n\t    var punctumState = {\n\t      neume: function neume() {\n\t        return new Neumes.Punctum();\n\t      },\n\t      handle: function handle(currNote, prevNote) {\n\t\n\t        if (currNote.staffPosition > prevNote.staffPosition) return podatusState;else if (currNote.staffPosition < prevNote.staffPosition) {\n\t          if (currNote.shape == _Exsurge3.NoteShape.Inclinatum) return climacusState;else return clivisState;\n\t        } else return distrophaState;\n\t      }\n\t    };\n\t\n\t    var oriscusState = {\n\t      neume: function neume() {\n\t        return new Neumes.Oriscus();\n\t      },\n\t      handle: function handle(currNote, prevNote) {\n\t\n\t        if (currNote.shape == _Exsurge3.NoteShape.Default && currNote.staffPosition > prevNote.staffPosition) return podatusState;else\n\t          // stand alone oriscus\n\t          return createNeume(new Neumes.Oriscus(), true);\n\t      }\n\t    };\n\t\n\t    var podatusState = {\n\t      neume: function neume() {\n\t        return new Neumes.Podatus();\n\t      },\n\t      handle: function handle(currNote, prevNote) {\n\t\n\t        if (currNote.staffPosition > prevNote.staffPosition) {\n\t          return scandicusState;\n\t        } else if (currNote.staffPosition < prevNote.staffPosition) {\n\t          if (currNote.shape == _Exsurge3.NoteShape.Inclinatum) return pesSubpunctisState;else return torculusState;\n\t        } else return createNeume(new Neumes.Podatus(), false);\n\t      }\n\t    };\n\t\n\t    var clivisState = {\n\t      neume: function neume() {\n\t        return new Neumes.Clivis();\n\t      },\n\t      handle: function handle(currNote, prevNote) {\n\t\n\t        if (currNote.shape == _Exsurge3.NoteShape.Default && currNote.staffPosition > prevNote.staffPosition) return porrectusState;else return createNeume(new Neumes.Clivis(), false);\n\t      }\n\t    };\n\t\n\t    var climacusState = {\n\t      neume: function neume() {\n\t        return new Neumes.Climacus();\n\t      },\n\t      handle: function handle(currNote, prevNote) {\n\t        if (currNote.shape != _Exsurge3.NoteShape.Inclinatum) return createNeume(this.neume(), false);else return state;\n\t      }\n\t    };\n\t\n\t    var porrectusState = {\n\t      neume: function neume() {\n\t        return new Neumes.Porrectus();\n\t      },\n\t      handle: function handle(currNote, prevNote) {\n\t\n\t        if (currNote.shape == _Exsurge3.NoteShape.Default && currNote.staffPosition < prevNote.staffPosition) return createNeume(new Neumes.PorrectusFlexus(), true);else return createNeume(new Neumes.Porrectus(), false);\n\t      }\n\t    };\n\t\n\t    var pesSubpunctisState = {\n\t      neume: function neume() {\n\t        return new Neumes.PesSubpunctis();\n\t      },\n\t      handle: function handle(currNote, prevNote) {\n\t\n\t        if (currNote.shape != _Exsurge3.NoteShape.Inclinatum) return createNeume(new Neumes.PesSubpunctis(), false);else return state;\n\t      }\n\t    };\n\t\n\t    var scandicusState = {\n\t      neume: function neume() {\n\t        return new Neumes.Scandicus();\n\t      },\n\t      handle: function handle(currNote, prevNote) {\n\t\n\t        if (currNote.shape == _Exsurge3.NoteShape.Default && currNote.staffPosition < prevNote.staffPosition) return scandicusFlexusState;else return createNeume(new Neumes.Scandicus(), false);\n\t      }\n\t    };\n\t\n\t    var scandicusFlexusState = {\n\t      neume: function neume() {\n\t        return new Neumes.ScandicusFlexus();\n\t      },\n\t      handle: function handle(currNote, prevNote) {\n\t        return createNeume(new Neumes.ScandicusFlexus(), false);\n\t      }\n\t    };\n\t\n\t    var virgaState = {\n\t      neume: function neume() {\n\t        return new Neumes.Virga();\n\t      },\n\t      handle: function handle(currNote, prevNote) {\n\t\n\t        if (currNote.shape == _Exsurge3.NoteShape.Inclinatum && currNote.staffPosition < prevNote.staffPosition) return climacusState;else if (currNote.shape == _Exsurge3.NoteShape.Virga && currNote.staffPosition == prevNote.staffPosition) return bivirgaState;else return createNeume(new Neumes.Virga(), false);\n\t      }\n\t    };\n\t\n\t    var bivirgaState = {\n\t      neume: function neume() {\n\t        return new Neumes.Bivirga();\n\t      },\n\t      handle: function handle(currNote, prevNote) {\n\t\n\t        if (currNote.shape == _Exsurge3.NoteShape.Virga && currNote.staffPosition == prevNote.staffPosition) return createNeume(new Neumes.Trivirga(), false);else return createNeume(new Neumes.Bivirga(), false);\n\t      }\n\t    };\n\t\n\t    var apostrophaState = {\n\t      neume: function neume() {\n\t        return new Neumes.Apostropha();\n\t      },\n\t      handle: function handle(currNote, prevNote) {\n\t        if (currNote.staffPosition == prevNote.staffPosition && currNote.shape == _Exsurge3.NoteShape.Apostropha) return distrophaState;else return createNeume(new Neumes.Apostropha(), false);\n\t      }\n\t    };\n\t\n\t    var distrophaState = {\n\t      neume: function neume() {\n\t        return new Neumes.Distropha();\n\t      },\n\t      handle: function handle(currNote, prevNote) {\n\t        if (currNote.staffPosition == prevNote.staffPosition && currNote.shape == _Exsurge3.NoteShape.Apostropha) return createNeume(new Neumes.Tristropha(), true);else return createNeume(new Neumes.Distropha(), false);\n\t      }\n\t    };\n\t\n\t    var torculusState = {\n\t      neume: function neume() {\n\t        return new Neumes.Torculus();\n\t      },\n\t      handle: function handle(currNote, prevNote) {\n\t        if (currNote.shape == _Exsurge3.NoteShape.Default && currNote.staffPosition > prevNote.staffPosition) return torculusResupinusState;else return createNeume(new Neumes.Torculus(), false);\n\t      }\n\t    };\n\t\n\t    var torculusResupinusState = {\n\t      neume: function neume() {\n\t        return new Neumes.TorculusResupinus();\n\t      },\n\t      handle: function handle(currNote, prevNote) {\n\t        if (currNote.shape == _Exsurge3.NoteShape.Default && currNote.staffPosition < prevNote.staffPosition) return createNeume(new Neumes.TorculusResupinusFlexus(), true);else return createNeume(new Neumes.TorculusResupinus(), false);\n\t      }\n\t    };\n\t\n\t    var state = unknownState;\n\t\n\t    while (currNoteIndex < notes.length) {\n\t\n\t      prevNote = currNote;\n\t      currNote = notes[currNoteIndex];\n\t\n\t      state = state.handle(currNote, prevNote);\n\t\n\t      // if we are on the last note, then try to create a neume if we need to.\n\t      if (currNoteIndex == notes.length - 1 && state != unknownState) createNeume(state.neume(), true);\n\t\n\t      currNoteIndex++;\n\t    }\n\t\n\t    if (neumes.length > 0) {\n\t      if (finalTrailingSpace >= 0) {\n\t        neumes[neumes.length - 1].keepWithNext = true;\n\t        neumes[neumes.length - 1].trailingSpace = finalTrailingSpace;\n\t      }\n\t    }\n\t\n\t    return neumes;\n\t  },\n\t\n\t  createNoteFromData: function createNoteFromData(clef, data) {\n\t\n\t    var note = new _Exsurge3.Note();\n\t\n\t    if (data.length < 1) throw 'Invalid note data: ' + data;\n\t\n\t    if (data[0] == '-') {\n\t      // liquescent\n\t      note.isLiquescent = true;\n\t      data = data.substring(1);\n\t    }\n\t\n\t    if (data.length < 1) throw 'Invalid note data: ' + data;\n\t\n\t    // the next char is always the pitch\n\t    var pitch = this.convertGabcStaffPositionToScribamPitch(clef, data[0]);\n\t\n\t    if (data[0] == data[0].toUpperCase()) note.shape = _Exsurge3.NoteShape.Inclinatum;\n\t\n\t    note.staffPosition = this.convertGabcStaffPositionToScribamStaffPosition(clef, data[0]);\n\t    note.pitch = pitch;\n\t\n\t    // process the modifiers\n\t    for (var i = 1; i < data.length; i++) {\n\t\n\t      var c = data[i];\n\t      var lookahead = '\\0';\n\t\n\t      var haveLookahead = i + 1 < data.length;\n\t      if (haveLookahead) lookahead = data[i + 1];\n\t\n\t      switch (c) {\n\t\n\t        // rhythmic markings\n\t        case '.':\n\t          note.markings.push(new Markings.Mora(note));\n\t          break;\n\t\n\t        case '_':\n\t          var mark = new Markings.HorizontalEpisema(note);\n\t          if (haveLookahead && lookahead == '0') {\n\t            mark.positionHint = _Exsurge.MarkingPositionHint.Below;\n\t            i++;\n\t          }\n\t          note.markings.push(mark);\n\t          break;\n\t\n\t        case '\\'':\n\t          note.markings.push(new Markings.Ictus(note));\n\t          break;\n\t\n\t        //note shapes\n\t        case 'r':\n\t          if (haveLookahead && lookahead == '1') {\n\t            note.markings.push(new Markings.AcuteAccent(note));\n\t            i++;\n\t          } else note.shape = _Exsurge3.NoteShape.Cavum;\n\t          break;\n\t\n\t        case 'v':\n\t          note.shape = _Exsurge3.NoteShape.Virga;\n\t          break;\n\t\n\t        case 'w':\n\t          note.shape = _Exsurge3.NoteShape.Quilisma;\n\t          break;\n\t\n\t        case 'o':\n\t          if (haveLookahead && lookahead == '<') {\n\t            note.shape = _Exsurge3.NoteShape.OriscusAscending;\n\t            i++;\n\t          } else if (haveLookahead && lookahead == '>') {\n\t            note.shape = _Exsurge3.NoteShape.OriscusDescending;\n\t            i++;\n\t          } else note.shape = _Exsurge3.NoteShape.OriscusAscending;\n\t          break;\n\t\n\t        // liquescents\n\t        case '~':\n\t          note.isLiquescent = true;\n\t          break;\n\t        case '<':\n\t          note.isLiquescent = true;\n\t          note.shape = _Exsurge3.NoteShape.AscLiquescent;\n\t          break;\n\t        case '>':\n\t          note.isLiquescent = true;\n\t          note.shape = _Exsurge3.NoteShape.DesLiquescent;\n\t          break;\n\t\n\t        // accidentals\n\t        case 'x':\n\t          if (note.pitch.step == _Exsurge.Step.Mi) note.pitch.step = _Exsurge.Step.Me;else if (note.pitch.step == _Exsurge.Step.Ti) note.pitch.step = _Exsurge.Step.Te;\n\t          break;\n\t        case 'y':\n\t          if (note.pitch.step == _Exsurge.Step.Te) note.pitch.step = _Exsurge.Step.Ti;else if (note.pitch.step == _Exsurge.Step.Me) note.pitch.step = _Exsurge.Step.Mi;else if (note.pitch.step == _Exsurge.Step.Du) note.pitch.step = _Exsurge.Step.Do;else if (note.pitch.step == _Exsurge.Step.Fu) note.pitch.step = _Exsurge.Step.Fa;\n\t          break;\n\t        case '#':\n\t          if (note.pitch.step == _Exsurge.Step.Do) note.pitch.step = _Exsurge.Step.Du;else if (note.pitch.step == _Exsurge.Step.Fa) note.pitch.step = _Exsurge.Step.Fu;\n\t          break;\n\t      }\n\t    }\n\t\n\t    return note;\n\t  },\n\t\n\t  // returns pitch\n\t  convertGabcStaffPositionToScribamStaffPosition: function convertGabcStaffPositionToScribamStaffPosition(clef, gabcStaffPos) {\n\t    return gabcStaffPos.toLowerCase().charCodeAt(0) - 'a'.charCodeAt(0) - 6;\n\t  },\n\t\n\t  // returns pitch\n\t  convertGabcStaffPositionToScribamPitch: function convertGabcStaffPositionToScribamPitch(clef, gabcStaffPos) {\n\t    var scribamStaffPosition = this.convertGabcStaffPositionToScribamStaffPosition(clef, gabcStaffPos);\n\t\n\t    var pitch = clef.staffPositionToPitch(scribamStaffPosition);\n\t\n\t    if (clef.activeAccidental != null) clef.activeAccidental.applyToPitch(pitch);\n\t\n\t    return pitch;\n\t  }\n\t};\n\t\n\t//export default Gabc;\n\n/***/ },\n/* 8 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.Mora = exports.Ictus = exports.HorizontalEpisema = exports.AcuteAccent = exports.Marking = undefined;\n\t\n\tvar _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if (\"value\" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _Exsurge = __webpack_require__(1);\n\t\n\tvar Exsurge = _interopRequireWildcard(_Exsurge);\n\t\n\tvar _Exsurge2 = __webpack_require__(4);\n\t\n\tvar _Exsurge3 = __webpack_require__(5);\n\t\n\tfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } //\n\t// Author(s):\n\t// Fr. Matthew Spencer, OSJ <mspencer@osjusa.org>\n\t//\n\t// Copyright (c) 2008-2016 Fr. Matthew Spencer, OSJ\n\t//\n\t// Permission is hereby granted, free of charge, to any person obtaining a copy\n\t// of this software and associated documentation files (the \"Software\"), to deal\n\t// in the Software without restriction, including without limitation the rights\n\t// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n\t// copies of the Software, and to permit persons to whom the Software is\n\t// furnished to do so, subject to the following conditions:\n\t//\n\t// The above copyright notice and this permission notice shall be included in\n\t// all copies or substantial portions of the Software.\n\t//\n\t// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n\t// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n\t// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n\t// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n\t// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n\t// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n\t// THE SOFTWARE.\n\t//\n\t\n\tvar Marking = exports.Marking = function (_ChantLayoutElement) {\n\t  _inherits(Marking, _ChantLayoutElement);\n\t\n\t  function Marking(note) {\n\t    _classCallCheck(this, Marking);\n\t\n\t    var _this = _possibleConstructorReturn(this, Object.getPrototypeOf(Marking).call(this));\n\t\n\t    _this.note = note;\n\t    _this.horizontalOffset = 0;\n\t    _this.verticalOffset = 0;\n\t    _this.positionHint = Exsurge.MarkingPositionHint.Default;\n\t    return _this;\n\t  }\n\t\n\t  _createClass(Marking, [{\n\t    key: 'performLayout',\n\t    value: function performLayout(ctxt) {}\n\t  }]);\n\t\n\t  return Marking;\n\t}(_Exsurge2.ChantLayoutElement);\n\t\n\tvar AcuteAccent = exports.AcuteAccent = function (_Marking) {\n\t  _inherits(AcuteAccent, _Marking);\n\t\n\t  function AcuteAccent(note) {\n\t    _classCallCheck(this, AcuteAccent);\n\t\n\t    var _this2 = _possibleConstructorReturn(this, Object.getPrototypeOf(AcuteAccent).call(this, note));\n\t\n\t    _this2.positionHint = Exsurge.MarkingPositionHint.Above;\n\t    _this2.glyph = null;\n\t    return _this2;\n\t  }\n\t\n\t  _createClass(AcuteAccent, [{\n\t    key: 'performLayout',\n\t    value: function performLayout(ctxt) {\n\t\n\t      this.glyph = new _Exsurge2.GlyphVisualizer(ctxt, _Exsurge2.GlyphCode.AcuteAccent);\n\t\n\t      this.glyph.performLayout(ctxt);\n\t\n\t      // fixme: acute markings might need to be positioned vertically over\n\t      // the notation bounds of the chantline after everything has already\n\t      // been laid out on the line...for now we just place them a\n\t      // reasonable height above the staff line.\n\t      this.verticalOffset = -ctxt.staffInterval * 5;\n\t      this.horizontalOffset = -this.glyph.bounds.x; // center on the note itself\n\t\n\t      this.bounds = this.glyph.bounds.clone();\n\t      this.bounds.x += this.orizontalOffset;\n\t      this.bounds.y += this.verticalOffset;\n\t\n\t      _get(Object.getPrototypeOf(AcuteAccent.prototype), 'performLayout', this).call(this, ctxt);\n\t    }\n\t  }]);\n\t\n\t  return AcuteAccent;\n\t}(Marking);\n\t\n\t/*\r\n\t * HorizontalEpisema\r\n\t */\n\t\n\t\n\tvar HorizontalEpisema = exports.HorizontalEpisema = function (_Marking2) {\n\t  _inherits(HorizontalEpisema, _Marking2);\n\t\n\t  function HorizontalEpisema(note) {\n\t    _classCallCheck(this, HorizontalEpisema);\n\t\n\t    return _possibleConstructorReturn(this, Object.getPrototypeOf(HorizontalEpisema).call(this, note));\n\t  }\n\t\n\t  _createClass(HorizontalEpisema, [{\n\t    key: 'performLayout',\n\t    value: function performLayout(ctxt) {\n\t      _get(Object.getPrototypeOf(HorizontalEpisema.prototype), 'performLayout', this).call(this, ctxt);\n\t\n\t      // the horizontal episema object is a little different from other markings in that it is a\n\t      // logical object and doesn't do layout on its own. the layout for the episema happens in\n\t      // Neume.finishLayout\n\t    }\n\t  }]);\n\t\n\t  return HorizontalEpisema;\n\t}(Marking);\n\t\n\t/*\r\n\t * Ictus\r\n\t */\n\t\n\t\n\tvar Ictus = exports.Ictus = function (_Marking3) {\n\t  _inherits(Ictus, _Marking3);\n\t\n\t  function Ictus(note) {\n\t    _classCallCheck(this, Ictus);\n\t\n\t    var _this4 = _possibleConstructorReturn(this, Object.getPrototypeOf(Ictus).call(this, note));\n\t\n\t    _this4.glyph = null;\n\t    return _this4;\n\t  }\n\t\n\t  _createClass(Ictus, [{\n\t    key: 'performLayout',\n\t    value: function performLayout(ctxt) {\n\t\n\t      var glyphCode;\n\t      var staffPosition;\n\t\n\t      // fixme: this positioning logic doesn't work for the ictus on a virga apparently...?\n\t\n\t      if (this.positionHint == Exsurge.MarkingPositionHint.Above) {\n\t        glyphCode = _Exsurge2.GlyphCode.VerticalEpisemaAbove;\n\t      } else {\n\t        glyphCode = _Exsurge2.GlyphCode.VerticalEpisemaBelow;\n\t      }\n\t\n\t      staffPosition = this.note.staffPosition;\n\t\n\t      this.horizontalOffset = this.note.bounds.width / 2;\n\t      this.verticalOffset = 0;\n\t\n\t      switch (glyphCode) {\n\t        case _Exsurge2.GlyphCode.VerticalEpisemaAbove:\n\t          if (staffPosition % 2 == 0) this.verticalOffset -= ctxt.staffInterval * 1.5;else this.verticalOffset -= ctxt.staffInterval * .8;\n\t          break;\n\t\n\t        case _Exsurge2.GlyphCode.VerticalEpisemaBelow:\n\t        default:\n\t          if (staffPosition % 2 == 0) this.verticalOffset += ctxt.staffInterval * 1.5;else this.verticalOffset += ctxt.staffInterval * .8;\n\t          break;\n\t      }\n\t\n\t      this.glyph = new _Exsurge2.GlyphVisualizer(ctxt, glyphCode);\n\t      this.glyph.setStaffPosition(ctxt, staffPosition);\n\t\n\t      this.bounds = this.glyph.bounds.clone();\n\t      this.bounds.x += this.note.bounds.x + this.horizontalOffset;\n\t      this.bounds.y += this.verticalOffset;\n\t\n\t      _get(Object.getPrototypeOf(Ictus.prototype), 'performLayout', this).call(this, ctxt);\n\t    }\n\t  }]);\n\t\n\t  return Ictus;\n\t}(Marking);\n\t\n\t/*\r\n\t * Mora\r\n\t */\n\t\n\t\n\tvar Mora = exports.Mora = function (_Marking4) {\n\t  _inherits(Mora, _Marking4);\n\t\n\t  function Mora(note) {\n\t    _classCallCheck(this, Mora);\n\t\n\t    var _this5 = _possibleConstructorReturn(this, Object.getPrototypeOf(Mora).call(this, note));\n\t\n\t    _this5.glyph = null;\n\t    return _this5;\n\t  }\n\t\n\t  _createClass(Mora, [{\n\t    key: 'performLayout',\n\t    value: function performLayout(ctxt) {\n\t\n\t      var staffPosition = this.note.staffPosition;\n\t\n\t      this.glyph = new _Exsurge2.GlyphVisualizer(ctxt, _Exsurge2.GlyphCode.Mora);\n\t      this.glyph.setStaffPosition(ctxt, staffPosition);\n\t\n\t      this.verticalOffset = 0;\n\t      switch (this.positionHint) {\n\t        case Exsurge.MarkingPositionHint.Below:\n\t          if (staffPosition % 2 == 0) this.verticalOffset += ctxt.staffInterval / 3.0;else this.verticalOffset += ctxt.staffInterval * 2 / 3.0;\n\t          break;\n\t\n\t        case Exsurge.MarkingPositionHint.Default:\n\t        case Exsurge.MarkingPositionHint.Above:\n\t        default:\n\t          if (staffPosition % 2 == 0) this.verticalOffset -= ctxt.staffInterval / 3.0;else this.verticalOffset -= ctxt.staffInterval * 2 / 3.0;\n\t          break;\n\t      }\n\t\n\t      this.bounds = this.glyph.bounds.clone();\n\t      this.bounds.x += this.note.bounds.right() + this.horizontalOffset;\n\t      this.bounds.y += this.verticalOffset;\n\t\n\t      // this.drawable = this.glyph.drawable;\n\t      // this.drawable.classList.add('Mora');\n\t      // QuickSvg.translate(this.drawable, this.bounds.x, this.bounds.y);\n\t\n\t      _get(Object.getPrototypeOf(Mora.prototype), 'performLayout', this).call(this, ctxt);\n\t    }\n\t  }]);\n\t\n\t  return Mora;\n\t}(Marking);\n\n/***/ },\n/* 9 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\texports.Virga = exports.Tristropha = exports.TorculusResupinusFlexus = exports.TorculusResupinus = exports.Torculus = exports.TextOnly = exports.ScandicusFlexus = exports.Scandicus = exports.Punctum = exports.PorrectusFlexus = exports.Porrectus = exports.Podatus = exports.PesSubpunctis = exports.PesQuassus = exports.Oriscus = exports.Distropha = exports.Clivis = exports.Climacus = exports.Trivirga = exports.Bivirga = exports.Apostropha = exports.Neume = undefined;\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if (\"value\" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };\n\t\n\tvar _Exsurge = __webpack_require__(1);\n\t\n\tvar Exsurge = _interopRequireWildcard(_Exsurge);\n\t\n\tvar _Exsurge2 = __webpack_require__(4);\n\t\n\tvar _Exsurge3 = __webpack_require__(5);\n\t\n\tfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } //\n\t// Author(s):\n\t// Fr. Matthew Spencer, OSJ <mspencer@osjusa.org>\n\t//\n\t// Copyright (c) 2008-2016 Fr. Matthew Spencer, OSJ\n\t//\n\t// Permission is hereby granted, free of charge, to any person obtaining a copy\n\t// of this software and associated documentation files (the \"Software\"), to deal\n\t// in the Software without restriction, including without limitation the rights\n\t// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n\t// copies of the Software, and to permit persons to whom the Software is\n\t// furnished to do so, subject to the following conditions:\n\t//\n\t// The above copyright notice and this permission notice shall be included in\n\t// all copies or substantial portions of the Software.\n\t//\n\t// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n\t// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n\t// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n\t// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n\t// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n\t// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n\t// THE SOFTWARE.\n\t//\n\t\n\t/*\r\n\t * Neumes base class\r\n\t */\n\t\n\tvar Neume = exports.Neume = function (_ChantNotationElement) {\n\t    _inherits(Neume, _ChantNotationElement);\n\t\n\t    function Neume() {\n\t        _classCallCheck(this, Neume);\n\t\n\t        var _this = _possibleConstructorReturn(this, Object.getPrototypeOf(Neume).call(this));\n\t\n\t        _this.notes = [];\n\t        return _this;\n\t    }\n\t\n\t    _createClass(Neume, [{\n\t        key: 'performLayout',\n\t        value: function performLayout(ctxt) {\n\t            _get(Object.getPrototypeOf(Neume.prototype), 'performLayout', this).call(this, ctxt);\n\t        }\n\t    }, {\n\t        key: 'finishLayout',\n\t        value: function finishLayout(ctxt) {\n\t\n\t            /*\r\n\t                var startEpisema = null;\r\n\t                var boundsToMark;\r\n\t            \r\n\t                var neume = this;\r\n\t                var createEpisema = function() {\r\n\t                  var line = new HorizontalEpisemaLineVisualizer(ctxt, boundsToMark, startEpisema.positionHint);\r\n\t                  neume.drawable.appendChild(line.drawable);\r\n\t                };\r\n\t            \r\n\t                // layout the markings of the notes\r\n\t                for (var i = 0; i < this.notes.length; i++) {\r\n\t                  var note = this.notes[i];\r\n\t            \r\n\t                  for (var j = 0; j < note.markings.length; j++) {\r\n\t                    var marking = note.markings[j];\r\n\t            \r\n\t                    // episemas we treat specially because we try to combine them when possible\r\n\t                    if (marking.constructor.name == \"HorizontalEpisema\") {\r\n\t            \r\n\t                      if (startEpisema == null) {\r\n\t                        // first one we've seen\r\n\t                        startEpisema = marking;\r\n\t                        boundsToMark = note.bounds.clone();\r\n\t                      } else {\r\n\t                        // try to continue the previous one if possible\r\n\t                        if (marking.positionHint == startEpisema.positionHint) {\r\n\t                          boundsToMark.union(note.bounds);\r\n\t                        } else {\r\n\t                          // can't combine them, terminate the previous one and start a new one.\r\n\t                          createEpisema();\r\n\t            \r\n\t                          startEpisema = marking;\r\n\t                          boundsToMark = note.bounds.clone();\r\n\t                        }\r\n\t                      }\r\n\t                    } else {\r\n\t            \r\n\t                      if (marking.drawable != null) {\r\n\t                        this.drawable.appendChild(marking.drawable);\r\n\t            \r\n\t                        QuickSvg.translate(marking.drawable, note.bounds.x + note.origin.x + marking.bounds.x, marking.bounds.y);\r\n\t                      }\r\n\t                    }\r\n\t                  }\r\n\t            \r\n\t                  // end of the note processing...if we are the last one and we have an episema started, we need to terminate it here\r\n\t                  if (i == this.notes.length - 1 && startEpisema != null)\r\n\t                    createEpisema();\r\n\t                }\r\n\t            \r\n\t                if (this.hasLyric()) {\r\n\t                  // add ui support for note playback on click\r\n\t                  this.lyric.svgText.setAttribute('onclick', \"alert('Clicked lyric: \" + this.lyric.text + \"');\");\r\n\t                }\r\n\t            */\n\t            _get(Object.getPrototypeOf(Neume.prototype), 'finishLayout', this).call(this, ctxt);\n\t        }\n\t\n\t        // this will handle quilismae, mora, and horizontal episemae.\n\t        // subclasses can override for their own nuances to note rhythms\n\t\n\t    }, {\n\t        key: 'generatePlaybackData',\n\t        value: function generatePlaybackData() {\n\t\n\t            var playbackData = [];\n\t\n\t            var prevIsQuilisma = false;\n\t            for (var i = 0; i < this.notes; i++) {\n\t                var note = this.notes[i];\n\t\n\t                var duration = 1.0; // reset to standard length\n\t                var multiplier = 1.0;\n\t\n\t                if (prevIsQuilisma) multiplier *= 0.5;\n\t\n\t                if (note.shape == _Exsurge3.NoteShape.Quilisma) {\n\t                    multiplier *= 2;\n\t                    prevIsQuilisma = true;\n\t                } else prevIsQuilisma = false;\n\t\n\t                // check markings\n\t                for (var j = 0; j < note.markings.length; j++) {\n\t                    var marking = note.markings[j];\n\t\n\t                    if (marking.className == 'Mora') multiplier = Math.max(multiplier, 2);else if (marking.className == 'HorizontalEpisema' || _Exsurge2.ctxt.horizontalEpisemaActive) multiplier = Math.max(multiplier, 2);\n\t                }\n\t\n\t                duration *= multiplier;\n\t\n\t                playbackData.push({\n\t                    type: 'note',\n\t                    duration: duration,\n\t                    pitch: note.pitch\n\t                });\n\t            }\n\t\n\t            return playbackData;\n\t        }\n\t    }]);\n\t\n\t    return Neume;\n\t}(_Exsurge2.ChantNotationElement);\n\t\n\t/*\r\n\t * Apostropha\r\n\t */\n\t\n\t\n\tvar Apostropha = exports.Apostropha = function (_Neume) {\n\t    _inherits(Apostropha, _Neume);\n\t\n\t    function Apostropha() {\n\t        _classCallCheck(this, Apostropha);\n\t\n\t        return _possibleConstructorReturn(this, Object.getPrototypeOf(Apostropha).apply(this, arguments));\n\t    }\n\t\n\t    _createClass(Apostropha, [{\n\t        key: 'performLayout',\n\t        value: function performLayout(ctxt) {\n\t            _get(Object.getPrototypeOf(Apostropha.prototype), 'performLayout', this).call(this, ctxt);\n\t\n\t            // determine the glyph to use\n\t            var note = this.notes[0];\n\t\n\t            if (note.isLiquescent) note.setGlyphShape(ctxt, _Exsurge2.GlyphCode.ApostrophaLiquescent);else note.setGlyphShape(ctxt, _Exsurge2.GlyphCode.Apostropha);\n\t\n\t            note.performLayout(ctxt);\n\t            this.addVisualizer(note);\n\t\n\t            this.origin.x = note.origin.x;\n\t            this.origin.y = note.origin.y;\n\t\n\t            this.finishLayout(ctxt);\n\t        }\n\t    }]);\n\t\n\t    return Apostropha;\n\t}(Neume);\n\t\n\t/*\r\n\t * Bivirga\r\n\t *\r\n\t * For simplicity in implementation, Bivirga's have two notes in the object\r\n\t * structure. These technically must be the same pitch though.\r\n\t */\n\t\n\t\n\tvar Bivirga = exports.Bivirga = function (_Neume2) {\n\t    _inherits(Bivirga, _Neume2);\n\t\n\t    function Bivirga() {\n\t        _classCallCheck(this, Bivirga);\n\t\n\t        return _possibleConstructorReturn(this, Object.getPrototypeOf(Bivirga).apply(this, arguments));\n\t    }\n\t\n\t    _createClass(Bivirga, [{\n\t        key: 'performLayout',\n\t        value: function performLayout(ctxt) {\n\t            _get(Object.getPrototypeOf(Bivirga.prototype), 'performLayout', this).call(this, ctxt);\n\t\n\t            var note1 = this.notes[0];\n\t            var note2 = this.notes[1];\n\t\n\t            note1.setGlyphShape(ctxt, Virga.getGlyphCode(note1.staffPosition));\n\t            note1.performLayout(ctxt);\n\t\n\t            note2.setGlyphShape(ctxt, Virga.getGlyphCode(note1.staffPosition));\n\t            note2.performLayout(ctxt);\n\t            note2.bounds.x += note1.bounds.width + ctxt.intraNeumeSpacing;\n\t\n\t            this.addVisualizer(note1);\n\t            this.addVisualizer(note2);\n\t\n\t            this.origin.x = note1.origin.x;\n\t            this.origin.y = note1.origin.y;\n\t\n\t            this.finishLayout(ctxt);\n\t        }\n\t    }]);\n\t\n\t    return Bivirga;\n\t}(Neume);\n\t\n\t/*\r\n\t * Trivirga\r\n\t *\r\n\t * For simplicity in implementation, Trivirga's have three notes in the object\r\n\t * structure. These technically must be the same pitch though.\r\n\t */\n\t\n\t\n\tvar Trivirga = exports.Trivirga = function (_Neume3) {\n\t    _inherits(Trivirga, _Neume3);\n\t\n\t    function Trivirga() {\n\t        _classCallCheck(this, Trivirga);\n\t\n\t        return _possibleConstructorReturn(this, Object.getPrototypeOf(Trivirga).apply(this, arguments));\n\t    }\n\t\n\t    _createClass(Trivirga, [{\n\t        key: 'performLayout',\n\t        value: function performLayout(ctxt) {\n\t            _get(Object.getPrototypeOf(Trivirga.prototype), 'performLayout', this).call(this, ctxt);\n\t\n\t            var note1 = this.notes[0];\n\t            var note2 = this.notes[1];\n\t            var note3 = this.notes[2];\n\t\n\t            note1.setGlyphShape(ctxt, Virga.getGlyphCode(note1.staffPosition));\n\t            note1.performLayout(ctxt);\n\t\n\t            note2.setGlyphShape(ctxt, Virga.getGlyphCode(note1.staffPosition));\n\t            note2.performLayout(ctxt);\n\t            note2.bounds.x += note1.bounds.width + ctxt.intraNeumeSpacing;\n\t\n\t            note3.setGlyphShape(ctxt, Virga.getGlyphCode(staffPosition));\n\t            note3.performLayout(ctxt);\n\t            note3.bounds.x += note1.bounds.width + ctxt.intraNeumeSpacing + note2.bounds.width + ctxt.intraNeumeSpacing;\n\t\n\t            this.addVisualizer(note1);\n\t            this.addVisualizer(note2);\n\t            this.addVisualizer(note3);\n\t\n\t            this.origin.x = note1.origin.x;\n\t            this.origin.y = note1.origin.y;\n\t\n\t            this.finishLayout(ctxt);\n\t        }\n\t    }]);\n\t\n\t    return Trivirga;\n\t}(Neume);\n\t\n\t/*\r\n\t * Climacus\r\n\t */\n\t\n\t\n\tvar Climacus = exports.Climacus = function (_Neume4) {\n\t    _inherits(Climacus, _Neume4);\n\t\n\t    function Climacus() {\n\t        _classCallCheck(this, Climacus);\n\t\n\t        return _possibleConstructorReturn(this, Object.getPrototypeOf(Climacus).apply(this, arguments));\n\t    }\n\t\n\t    _createClass(Climacus, [{\n\t        key: 'performLayout',\n\t        value: function performLayout(ctxt) {\n\t            _get(Object.getPrototypeOf(Climacus.prototype), 'performLayout', this).call(this, ctxt);\n\t\n\t            // the first note is always a virga...\n\t            var staffPosition, prevStaffPosition;\n\t            var x = 0;\n\t\n\t            var note = this.notes[0];\n\t            staffPosition = note.staffPosition;\n\t            note.setGlyphShape(ctxt, Virga.getGlyphCode(staffPosition));\n\t            note.performLayout(ctxt);\n\t\n\t            x += note.bounds.width * 1.2; // fixme: correct spacing after virga\n\t\n\t            this.addVisualizer(note);\n\t\n\t            this.origin.x = note.origin.x;\n\t            this.origin.y = note.origin.y;\n\t\n\t            // now add all the punctum inclinati\n\t            prevStaffPosition = this.notes[1].staffPosition;\n\t            for (var i = 1; i < this.notes.length; i++, prevStaffPosition = staffPosition) {\n\t                note = this.notes[i];\n\t\n\t                if (note.isLiquescent) note.setGlyphShape(ctxt, _Exsurge2.GlyphCode.punctumInclinatumLiquescent);else {\n\t                    // fixme: some climaci in the new chant books end with a punctum cuadratum\n\t                    // (see, for example, the antiphon \"Sancta Maria\" for October 7).\n\t                    note.setGlyphShape(ctxt, _Exsurge2.GlyphCode.PunctumInclinatum);\n\t                }\n\t\n\t                staffPosition = note.staffPosition;\n\t\n\t                note.performLayout(ctxt);\n\t\n\t                // fixme: how do these calculations look for puncti inclinati based on staff position offsets?\n\t                var multiple;\n\t                switch (Math.abs(prevStaffPosition - staffPosition)) {\n\t                    case 0:\n\t                        multiple = 0;\n\t                        break;\n\t                    case 1:\n\t                        multiple = 0.8;\n\t                        break;\n\t                    default:\n\t                        multiple = 1.2;\n\t                        break;\n\t                }\n\t\n\t                x += note.bounds.width * multiple;\n\t                note.bounds.x += x;\n\t\n\t                this.addVisualizer(note);\n\t            }\n\t\n\t            this.finishLayout(ctxt);\n\t        }\n\t    }]);\n\t\n\t    return Climacus;\n\t}(Neume);\n\t\n\t/*\r\n\t * Clivis\r\n\t */\n\t\n\t\n\tvar Clivis = exports.Clivis = function (_Neume5) {\n\t    _inherits(Clivis, _Neume5);\n\t\n\t    function Clivis() {\n\t        _classCallCheck(this, Clivis);\n\t\n\t        return _possibleConstructorReturn(this, Object.getPrototypeOf(Clivis).apply(this, arguments));\n\t    }\n\t\n\t    _createClass(Clivis, [{\n\t        key: 'performLayout',\n\t        value: function performLayout(ctxt) {\n\t            _get(Object.getPrototypeOf(Clivis.prototype), 'performLayout', this).call(this, ctxt);\n\t\n\t            var line;\n\t            var isLiquescent;\n\t\n\t            var upper = this.notes[0];\n\t            var lower = this.notes[1];\n\t\n\t            if (lower.isLiquescent || upper.isLiquescent) {\n\t                upper.setGlyphShape(ctxt, _Exsurge2.GlyphCode.BeginningDesLiquescent);\n\t                lower.setGlyphShape(ctxt, _Exsurge2.GlyphCode.TerminatingDesLiquescent);\n\t                isLiquescent = true;\n\t            } else {\n\t                upper.setGlyphShape(ctxt, _Exsurge2.GlyphCode.PunctumCuadratum);\n\t                lower.setGlyphShape(ctxt, _Exsurge2.GlyphCode.PunctumCuadratum);\n\t                isLiquescent = false;\n\t            }\n\t\n\t            var upperStaffPos = upper.staffPosition;\n\t            var lowerStaffPos = lower.staffPosition;\n\t\n\t            upper.performLayout(ctxt);\n\t            lower.performLayout(ctxt);\n\t\n\t            // add the ascending line\n\t            line = new _Exsurge2.NeumeLineVisualizer(ctxt, lower, upper, true);\n\t            line.bounds.x = upper.bounds.x;\n\t\n\t            this.addVisualizer(line);\n\t            line = null;\n\t\n\t            var x = upper.bounds.right();\n\t\n\t            // do we need to draw a descending line?\n\t            if (upperStaffPos - lowerStaffPos > 1) {\n\t                line = new _Exsurge2.NeumeLineVisualizer(ctxt, upper, lower, false);\n\t                x -= line.bounds.width;\n\t                line.bounds.x = x;\n\t                this.addVisualizer(line);\n\t            }\n\t\n\t            if (isLiquescent) {\n\t                if (line != null) x -= lower.bounds.width - line.bounds.width;else x -= lower.bounds.width;\n\t            }\n\t\n\t            lower.bounds.x = x;\n\t\n\t            this.addVisualizer(upper);\n\t            this.addVisualizer(lower);\n\t\n\t            this.origin.x = upper.origin.x;\n\t            this.origin.y = upper.origin.y;\n\t\n\t            this.finishLayout(ctxt);\n\t        }\n\t    }]);\n\t\n\t    return Clivis;\n\t}(Neume);\n\t\n\t/*\r\n\t * Distropha\r\n\t *\r\n\t * For simplicity in implementation, Distropha's have two notes in the object\r\n\t * structure. These technically must be the same pitch though (like Bivirga).\r\n\t */\n\t\n\t\n\tvar Distropha = exports.Distropha = function (_Neume6) {\n\t    _inherits(Distropha, _Neume6);\n\t\n\t    function Distropha() {\n\t        _classCallCheck(this, Distropha);\n\t\n\t        return _possibleConstructorReturn(this, Object.getPrototypeOf(Distropha).apply(this, arguments));\n\t    }\n\t\n\t    _createClass(Distropha, [{\n\t        key: 'performLayout',\n\t        value: function performLayout(ctxt) {\n\t            _get(Object.getPrototypeOf(Distropha.prototype), 'performLayout', this).call(this, ctxt);\n\t\n\t            var note1 = this.notes[0];\n\t            var note2 = this.notes[1];\n\t\n\t            note1.setGlyphShape(ctxt, _Exsurge2.GlyphCode.PunctumCuadratum);\n\t            note1.performLayout(ctxt);\n\t\n\t            note2.setGlyphShape(ctxt, _Exsurge2.GlyphCode.PunctumCuadratum);\n\t            note2.performLayout(ctxt);\n\t            note2.bounds.x += note1.bounds.width + ctxt.intraNeumeSpacing;\n\t\n\t            this.addVisualizer(note1);\n\t            this.addVisualizer(note2);\n\t\n\t            this.origin.x = note1.origin.x;\n\t            this.origin.y = note1.origin.y;\n\t\n\t            this.finishLayout(ctxt);\n\t        }\n\t    }]);\n\t\n\t    return Distropha;\n\t}(Neume);\n\t\n\t/*\r\n\t * Oriscus\r\n\t */\n\t\n\t\n\tvar Oriscus = exports.Oriscus = function (_Neume7) {\n\t    _inherits(Oriscus, _Neume7);\n\t\n\t    function Oriscus() {\n\t        _classCallCheck(this, Oriscus);\n\t\n\t        return _possibleConstructorReturn(this, Object.getPrototypeOf(Oriscus).apply(this, arguments));\n\t    }\n\t\n\t    _createClass(Oriscus, [{\n\t        key: 'performLayout',\n\t        value: function performLayout(ctxt) {\n\t            _get(Object.getPrototypeOf(Oriscus.prototype), 'performLayout', this).call(this, ctxt);\n\t\n\t            // determine the glyph to use\n\t            var note = this.notes[0];\n\t\n\t            if (note.shape == _Exsurge3.NoteShape.OriscusAscending) note.setGlyphShape(ctxt, _Exsurge2.GlyphCode.OriscusAsc);else note.setGlyphShape(ctxt, _Exsurge2.GlyphCode.OriscusDes);\n\t\n\t            note.performLayout(ctxt);\n\t            this.addVisualizer(note);\n\t\n\t            this.origin.x = note.origin.x;\n\t            this.origin.y = note.origin.y;\n\t\n\t            this.finishLayout(ctxt);\n\t        }\n\t    }]);\n\t\n\t    return Oriscus;\n\t}(Neume);\n\t\n\t/*\r\n\t * PesQuassus\r\n\t */\n\t\n\t\n\tvar PesQuassus = exports.PesQuassus = function (_Neume8) {\n\t    _inherits(PesQuassus, _Neume8);\n\t\n\t    function PesQuassus() {\n\t        _classCallCheck(this, PesQuassus);\n\t\n\t        return _possibleConstructorReturn(this, Object.getPrototypeOf(PesQuassus).apply(this, arguments));\n\t    }\n\t\n\t    _createClass(PesQuassus, [{\n\t        key: 'performLayout',\n\t        value: function performLayout(ctxt) {\n\t            _get(Object.getPrototypeOf(PesQuassus.prototype), 'performLayout', this).call(this, ctxt);\n\t\n\t            var x = 0;\n\t\n\t            var lower = this.notes[0];\n\t            var upper = this.notes[1];\n\t            var line;\n\t\n\t            var lowerStaffPos = lower.staffPosition;\n\t            var upperStaffPos = upper.staffPosition;\n\t\n\t            lower.setGlyphShape(ctxt, _Exsurge2.GlyphCode.PunctumCuadratum);\n\t\n\t            if (upper.isLiquescent) upper.setGlyphShape(ctxt, _Exsurge2.GlyphCode.PunctumCuadratumDesLiquescent);else upper.setGlyphShape(ctxt, _Exsurge2.GlyphCode.PunctumCuadratum);\n\t\n\t            lower.performLayout(ctxt);\n\t            lower.bounds.x = x;\n\t            this.addVisualizer(lower);\n\t\n\t            x += lower.bounds.right();\n\t\n\t            var needsLines = upperStaffPos - lowerStaffPos > 1;\n\t            if (needsLines) {\n\t                line = new _Exsurge2.NeumeLineVisualizer(ctxt, lower, upper, false);\n\t                x -= line.bounds.width;\n\t                line.bounds.x = x;\n\t                this.addVisualizer(line);\n\t            }\n\t\n\t            upper.bounds.x = x;\n\t\n\t            upper.performLayout(ctxt);\n\t            upper.bounds.x = x;\n\t            this.addVisualizer(upper);\n\t\n\t            x += upper.bounds.width;\n\t\n\t            // add a hanging line if we need it\n\t            if (needsLines) {\n\t                line = new _Exsurge2.NeumeLineVisualizer(ctxt, upper, lower, true);\n\t                x -= line.bounds.width;\n\t                line.bounds.x = x;\n\t                this.addVisualizer(line);\n\t            }\n\t\n\t            this.origin.x = lower.origin.x;\n\t            this.origin.y = lower.origin.y;\n\t\n\t            this.finishLayout(ctxt);\n\t        }\n\t    }]);\n\t\n\t    return PesQuassus;\n\t}(Neume);\n\t\n\t/*\r\n\t * PesSubpunctis\r\n\t */\n\t\n\t\n\tvar PesSubpunctis = exports.PesSubpunctis = function (_Neume9) {\n\t    _inherits(PesSubpunctis, _Neume9);\n\t\n\t    function PesSubpunctis() {\n\t        _classCallCheck(this, PesSubpunctis);\n\t\n\t        return _possibleConstructorReturn(this, Object.getPrototypeOf(PesSubpunctis).apply(this, arguments));\n\t    }\n\t\n\t    _createClass(PesSubpunctis, [{\n\t        key: 'performLayout',\n\t        value: function performLayout(ctxt) {\n\t            _get(Object.getPrototypeOf(PesSubpunctis.prototype), 'performLayout', this).call(this, ctxt);\n\t\n\t            var lower = this.notes[0];\n\t            var upper = this.notes[1];\n\t            var staffPosition, prevStaffPosition;\n\t            var x = 0;\n\t\n\t            if (lower.isLiquescent || upper.isLiquescent) {\n\t                lower.setGlyphShape(ctxt, _Exsurge2.GlyphCode.BeginningAscLiquescent);\n\t                upper.setGlyphShape(ctxt, _Exsurge2.GlyphCode.TerminatingAscLiquescent);\n\t            } else {\n\t                lower.setGlyphShape(ctxt, _Exsurge2.GlyphCode.PodatusLower);\n\t                upper.setGlyphShape(ctxt, _Exsurge2.GlyphCode.PodatusUpper);\n\t            }\n\t\n\t            if (lower.shape == _Exsurge3.NoteShape.Quilisma) lower.setGlyphShape(ctxt, _Exsurge2.GlyphCode.Quilisma);\n\t\n\t            lower.performLayout(ctxt);\n\t            upper.performLayout(ctxt);\n\t\n\t            var line = new _Exsurge2.NeumeLineVisualizer(ctxt, lower, upper, false);\n\t\n\t            line.bounds.x = lower.bounds.right() - line.bounds.width;\n\t            upper.bounds.x = lower.bounds.right() - upper.bounds.width;\n\t\n\t            // add the elements\n\t            this.addVisualizer(lower);\n\t            this.addVisualizer(line);\n\t            this.addVisualizer(upper);\n\t\n\t            x += Math.max(lower.bounds.width, upper.bounds.width) * 1.2; // fixme: correct spacing after podatus\n\t\n\t            // now add all the punctum inclinati\n\t            staffPosition = upper.staffPosition;\n\t            prevStaffPosition = lower.staffPosition;\n\t            for (var i = 2; i < this.notes.length; i++, prevStaffPosition = staffPosition) {\n\t                var note = this.notes[i];\n\t\n\t                if (note.isLiquescent) note.setGlyphShape(ctxt, _Exsurge2.GlyphCode.PunctumInclinatumLiquescent);else {\n\t                    // fixme: some climaci in the new chant books end with a punctum cuadratum\n\t                    // (see, for example, the antiphon \"Sancta Maria\" for October 7).\n\t                    note.setGlyphShape(ctxt, _Exsurge2.GlyphCode.PunctumInclinatum);\n\t                }\n\t\n\t                staffPosition = note.staffPosition;\n\t\n\t                note.performLayout(ctxt);\n\t\n\t                // fixme: how do these calculations look for puncti inclinati based on staff position offsets?\n\t                var multiple;\n\t                switch (Math.abs(prevStaffPosition - staffPosition)) {\n\t                    case 0:\n\t                        multiple = 0;\n\t                        break;\n\t                    case 1:\n\t                        multiple = 0.8;\n\t                        break;\n\t                    default:\n\t                        multiple = 1.2;\n\t                        break;\n\t                }\n\t\n\t                x += note.bounds.width * multiple;\n\t                note.bounds.x += x;\n\t\n\t                this.addVisualizer(note);\n\t            }\n\t\n\t            this.origin.x = lower.origin.x;\n\t            this.origin.y = lower.origin.y;\n\t\n\t            this.finishLayout(ctxt);\n\t        }\n\t    }]);\n\t\n\t    return PesSubpunctis;\n\t}(Neume);\n\t\n\t/*\r\n\t * Podatus\r\n\t */\n\t\n\t\n\tvar Podatus = exports.Podatus = function (_Neume10) {\n\t    _inherits(Podatus, _Neume10);\n\t\n\t    function Podatus() {\n\t        _classCallCheck(this, Podatus);\n\t\n\t        return _possibleConstructorReturn(this, Object.getPrototypeOf(Podatus).apply(this, arguments));\n\t    }\n\t\n\t    _createClass(Podatus, [{\n\t        key: 'performLayout',\n\t        value: function performLayout(ctxt) {\n\t            _get(Object.getPrototypeOf(Podatus.prototype), 'performLayout', this).call(this, ctxt);\n\t\n\t            var lower = this.notes[0];\n\t            var upper = this.notes[1];\n\t\n\t            if (lower.isLiquescent || upper.isLiquescent) {\n\t                lower.setGlyphShape(ctxt, _Exsurge2.GlyphCode.BeginningAscLiquescent);\n\t                upper.setGlyphShape(ctxt, _Exsurge2.GlyphCode.TerminatingAscLiquescent);\n\t            } else {\n\t                lower.setGlyphShape(ctxt, _Exsurge2.GlyphCode.PodatusLower);\n\t                upper.setGlyphShape(ctxt, _Exsurge2.GlyphCode.PodatusUpper);\n\t            }\n\t\n\t            if (lower.shape == _Exsurge3.NoteShape.Quilisma) lower.setGlyphShape(ctxt, _Exsurge2.GlyphCode.Quilisma);\n\t\n\t            upper.performLayout(ctxt);\n\t            lower.performLayout(ctxt);\n\t\n\t            var line = new _Exsurge2.NeumeLineVisualizer(ctxt, lower, upper, false);\n\t\n\t            line.bounds.x = lower.bounds.right() - line.bounds.width;\n\t            upper.bounds.x = lower.bounds.right() - upper.bounds.width;\n\t\n\t            // add the elements\n\t            this.addVisualizer(lower);\n\t            this.addVisualizer(line);\n\t            this.addVisualizer(upper);\n\t\n\t            this.origin.x = lower.origin.x;\n\t            this.origin.y = lower.origin.y;\n\t\n\t            this.finishLayout(ctxt);\n\t        }\n\t    }]);\n\t\n\t    return Podatus;\n\t}(Neume);\n\t\n\t/*\r\n\t * Porrectus\r\n\t */\n\t\n\t\n\tvar Porrectus = exports.Porrectus = function (_Neume11) {\n\t    _inherits(Porrectus, _Neume11);\n\t\n\t    function Porrectus() {\n\t        _classCallCheck(this, Porrectus);\n\t\n\t        return _possibleConstructorReturn(this, Object.getPrototypeOf(Porrectus).apply(this, arguments));\n\t    }\n\t\n\t    _createClass(Porrectus, [{\n\t        key: 'performLayout',\n\t        value: function performLayout(ctxt) {\n\t            _get(Object.getPrototypeOf(Porrectus.prototype), 'performLayout', this).call(this, ctxt);\n\t\n\t            var line;\n\t            var first = this.notes[0];\n\t            var second = this.notes[1];\n\t            var third = this.notes[2];\n\t            var x = 0.0;\n\t\n\t            var firstStaffPosition = first.staffPosition;\n\t            var secondStaffPosition = second.staffPosition;\n\t            var thirdStaffPosition = third.staffPosition;\n\t\n\t            switch (firstStaffPosition - secondStaffPosition) {\n\t                case 1:\n\t                    first.setGlyphShape(ctxt, _Exsurge2.GlyphCode.Porrectus1);\n\t                    break;\n\t                case 2:\n\t                    first.setGlyphShape(ctxt, _Exsurge2.GlyphCode.Porrectus2);\n\t                    break;\n\t                case 3:\n\t                    first.setGlyphShape(ctxt, _Exsurge2.GlyphCode.Porrectus3);\n\t                    break;\n\t                case 4:\n\t                    first.setGlyphShape(ctxt, _Exsurge2.GlyphCode.Porrectus4);\n\t                    break;\n\t                default:\n\t                    // fixme: should we generate an error here?\n\t                    first.setGlyphShape(ctxt, _Exsurge2.GlyphCode.None);\n\t                    break;\n\t            }\n\t\n\t            first.performLayout(ctxt);\n\t\n\t            // the second glyph does not draw anything, but it still has logical importance for the editing\n\t            // environment...it can respond to changes which will then change the swash glyph of the first.\n\t            second.setGlyphShape(ctxt, _Exsurge2.GlyphCode.None);\n\t            second.performLayout(ctxt);\n\t\n\t            // add the first line and the swash\n\t            line = new _Exsurge2.NeumeLineVisualizer(ctxt, first, second, true);\n\t\n\t            x = line.bounds.x = first.bounds.x;\n\t            x = first.bounds.right();\n\t            second.bounds.x = x - second.bounds.width;\n\t            x = second.bounds.right();\n\t\n\t            this.addVisualizer(line);\n\t            this.addVisualizer(first);\n\t            this.addVisualizer(second);\n\t\n\t            // add the connecting line\n\t            if (thirdStaffPosition - secondStaffPosition > 1) {\n\t                line = new _Exsurge2.NeumeLineVisualizer(ctxt, second, third, false);\n\t                line.bounds.x = x - line.bounds.width;\n\t                this.addVisualizer(line);\n\t            }\n\t\n\t            if (third.isLiquescent) third.setGlyphShape(ctxt, _Exsurge2.GlyphCode.TerminatingAscLiquescent);else third.setGlyphShape(ctxt, _Exsurge2.GlyphCode.PodatusUpper);\n\t\n\t            third.performLayout(ctxt);\n\t            third.bounds.x += x;\n\t\n\t            this.addVisualizer(third);\n\t\n\t            this.origin.x = first.origin.x;\n\t            this.origin.y = first.origin.y;\n\t\n\t            this.finishLayout(ctxt);\n\t        }\n\t    }]);\n\t\n\t    return Porrectus;\n\t}(Neume);\n\t\n\t/*\r\n\t * PorrectusFlexus\r\n\t */\n\t\n\t\n\tvar PorrectusFlexus = exports.PorrectusFlexus = function (_Neume12) {\n\t    _inherits(PorrectusFlexus, _Neume12);\n\t\n\t    function PorrectusFlexus() {\n\t        _classCallCheck(this, PorrectusFlexus);\n\t\n\t        return _possibleConstructorReturn(this, Object.getPrototypeOf(PorrectusFlexus).apply(this, arguments));\n\t    }\n\t\n\t    _createClass(PorrectusFlexus, [{\n\t        key: 'performLayout',\n\t        value: function performLayout(ctxt) {\n\t            _get(Object.getPrototypeOf(PorrectusFlexus.prototype), 'performLayout', this).call(this, ctxt);\n\t\n\t            var line;\n\t            var first = this.notes[0];\n\t            var second = this.notes[1];\n\t            var third = this.notes[2];\n\t            var fourth = this.notes[3];\n\t            var x = 0;\n\t\n\t            var firstStaffPosition = first.staffPosition;\n\t            var secondStaffPosition = second.staffPosition;\n\t            var thirdStaffPosition = third.staffPosition;\n\t            var fourthStaffPosition = fourth.staffPosition;\n\t\n\t            switch (firstStaffPosition - secondStaffPosition) {\n\t                case 1:\n\t                    first.setGlyphShape(ctxt, _Exsurge2.GlyphCode.Porrectus1);\n\t                    break;\n\t                case 2:\n\t                    first.setGlyphShape(ctxt, _Exsurge2.GlyphCode.Porrectus2);\n\t                    break;\n\t                case 3:\n\t                    first.setGlyphShape(ctxt, _Exsurge2.GlyphCode.Porrectus3);\n\t                    break;\n\t                case 4:\n\t                    first.setGlyphShape(ctxt, _Exsurge2.GlyphCode.Porrectus4);\n\t                    break;\n\t                default:\n\t                    // fixme: should we generate an error here?\n\t                    first.setGlyphShape(ctxt, _Exsurge2.GlyphCode.None);\n\t                    break;\n\t            }\n\t\n\t            first.performLayout(ctxt);\n\t\n\t            // add the first line and the swash\n\t            line = new _Exsurge2.NeumeLineVisualizer(ctxt, first, second, true);\n\t\n\t            x = line.bounds.x = first.bounds.x;\n\t            x = first.bounds.right();\n\t            this.addVisualizer(line);\n\t            this.addVisualizer(first);\n\t\n\t            // the second glyph does not draw anything, but it still has logical importance for the editing\n\t            // environment...it can respond to changes which will then change the swash glyph of the first.\n\t            second.setGlyphShape(ctxt, _Exsurge2.GlyphCode.None);\n\t            second.performLayout(ctxt);\n\t            second.bounds.x = x;\n\t            x = second.bounds.right();\n\t            this.addVisualizer(second);\n\t\n\t            // add a connecting line\n\t            if (thirdStaffPosition - secondStaffPosition > 1) {\n\t                line = new _Exsurge2.NeumeLineVisualizer(ctxt, second, third, false);\n\t                x -= line.bounds.width;\n\t                line.bounds.x += x;\n\t                this.addVisualizer(line);\n\t            }\n\t\n\t            third.setGlyphShape(ctxt, _Exsurge2.GlyphCode.PunctumCuadratum);\n\t            third.performLayout(ctxt);\n\t            third.bounds.x = x;\n\t            x = third.bounds.right();\n\t            this.addVisualizer(third);\n\t\n\t            // add a connecting line\n\t            if (thirdStaffPosition - fourthStaffPosition > 1) {\n\t                line = new _Exsurge2.NeumeLineVisualizer(ctxt, third, fourth, false);\n\t                x -= line.bounds.width;\n\t                line.bounds.x += x;\n\t                this.addVisualizer(line);\n\t            }\n\t\n\t            fourth.setGlyphShape(ctxt, _Exsurge2.GlyphCode.PunctumCuadratum);\n\t            fourth.performLayout(ctxt);\n\t            fourth.bounds.x = x;\n\t            this.addVisualizer(fourth);\n\t\n\t            this.origin.x = first.origin.x;\n\t            this.origin.y = first.origin.y;\n\t\n\t            this.finishLayout(ctxt);\n\t        }\n\t    }]);\n\t\n\t    return PorrectusFlexus;\n\t}(Neume);\n\t\n\t/*\r\n\t * Punctum\r\n\t */\n\t\n\t\n\tvar Punctum = exports.Punctum = function (_Neume13) {\n\t    _inherits(Punctum, _Neume13);\n\t\n\t    function Punctum() {\n\t        _classCallCheck(this, Punctum);\n\t\n\t        return _possibleConstructorReturn(this, Object.getPrototypeOf(Punctum).apply(this, arguments));\n\t    }\n\t\n\t    _createClass(Punctum, [{\n\t        key: 'performLayout',\n\t        value: function performLayout(ctxt) {\n\t            _get(Object.getPrototypeOf(Punctum.prototype), 'performLayout', this).call(this, ctxt);\n\t\n\t            // determine the glyph to use\n\t\n\t            var note = this.notes[0];\n\t\n\t            if (note.isLiquescent) {\n\t                if (note.shape == _Exsurge3.NoteShape.Inclinatum) note.setGlyphShape(ctxt, _Exsurge2.GlyphCode.PunctumInclinatumLiquescent);else {\n\t                    // fixme: implement two types of punctum liquescents\n\t                    note.setGlyphShape(ctxt, _Exsurge2.GlyphCode.PunctumCuadratumAscLiquescent);\n\t                }\n\t            } else {\n\t                switch (note.shape) {\n\t                    case _Exsurge3.NoteShape.Cavum:\n\t                        note.setGlyphShape(ctxt, _Exsurge2.GlyphCode.PunctumCavum);\n\t                        break;\n\t\n\t                    case _Exsurge3.NoteShape.Inclinatum:\n\t                        note.setGlyphShape(ctxt, _Exsurge2.GlyphCode.PunctumInclinatum);\n\t                        break;\n\t\n\t                    case _Exsurge3.NoteShape.Quilisma:\n\t                        note.setGlyphShape(ctxt, _Exsurge2.GlyphCode.Quilisma);\n\t                        break;\n\t\n\t                    default:\n\t                        note.setGlyphShape(ctxt, _Exsurge2.GlyphCode.PunctumCuadratum);\n\t                        break;\n\t                }\n\t            }\n\t\n\t            note.performLayout(ctxt);\n\t            this.addVisualizer(note);\n\t\n\t            this.origin.x = note.origin.x;\n\t            this.origin.y = note.origin.y;\n\t\n\t            this.finishLayout(ctxt);\n\t        }\n\t    }]);\n\t\n\t    return Punctum;\n\t}(Neume);\n\t\n\t/*\r\n\t * Scandicus\r\n\t */\n\t\n\t\n\tvar Scandicus = exports.Scandicus = function (_Neume14) {\n\t    _inherits(Scandicus, _Neume14);\n\t\n\t    function Scandicus() {\n\t        _classCallCheck(this, Scandicus);\n\t\n\t        return _possibleConstructorReturn(this, Object.getPrototypeOf(Scandicus).apply(this, arguments));\n\t    }\n\t\n\t    _createClass(Scandicus, [{\n\t        key: 'performLayout',\n\t\n\t\n\t        // fixme: for now, we render the scandicus as a punctum followed by a podatus. however,\n\t        // it could also be a podatus followed by a virga...see LU, \"Preface,\" xj.\n\t        //\n\t        // perhaps the best way to indicate the virga form is to check if the note shape of\n\t        // the third note is a virga!\n\t        value: function performLayout(ctxt) {\n\t            _get(Object.getPrototypeOf(Scandicus.prototype), 'performLayout', this).call(this, ctxt);\n\t\n\t            var first = this.notes[0];\n\t            var second = this.notes[1];\n\t            var third = this.notes[2];\n\t\n\t            first.setGlyphShape(ctxt, _Exsurge2.GlyphCode.PunctumCuadratum);\n\t\n\t            if (second.isLiquescent || third.isLiquescent) {\n\t                second.setGlyphShape(ctxt, _Exsurge2.GlyphCode.BeginningAscLiquescent);\n\t                third.setGlyphShape(ctxt, _Exsurge2.GlyphCode.TerminatingAscLiquescent);\n\t            } else {\n\t                second.setGlyphShape(ctxt, _Exsurge2.GlyphCode.PodatusLower);\n\t                third.setGlyphShape(ctxt, _Exsurge2.GlyphCode.PodatusUpper);\n\t            }\n\t\n\t            // fixme: can a scandicus have a quilisma like this?\n\t            if (second.shape == _Exsurge3.NoteShape.Quilisma) second.setGlyphShape(ctxt, _Exsurge2.GlyphCode.Quilisma);\n\t\n\t            first.performLayout(ctxt);\n\t            second.performLayout(ctxt);\n\t            third.performLayout(ctxt);\n\t\n\t            var line = new _Exsurge2.NeumeLineVisualizer(ctxt, second, third, false);\n\t\n\t            second.bounds.x = first.bounds.right();\n\t            line.bounds.x = second.bounds.right() - line.bounds.width;\n\t            third.bounds.x = second.bounds.right() - third.bounds.width;\n\t\n\t            // add the elements\n\t            this.addVisualizer(first);\n\t            this.addVisualizer(second);\n\t            this.addVisualizer(line);\n\t            this.addVisualizer(third);\n\t\n\t            this.origin.x = first.origin.x;\n\t            this.origin.y = first.origin.y;\n\t\n\t            this.finishLayout(ctxt);\n\t        }\n\t    }]);\n\t\n\t    return Scandicus;\n\t}(Neume);\n\t\n\t/*\r\n\t * Scandicus Flexus\r\n\t */\n\t\n\t\n\tvar ScandicusFlexus = exports.ScandicusFlexus = function (_Neume15) {\n\t    _inherits(ScandicusFlexus, _Neume15);\n\t\n\t    function ScandicusFlexus() {\n\t        _classCallCheck(this, ScandicusFlexus);\n\t\n\t        return _possibleConstructorReturn(this, Object.getPrototypeOf(ScandicusFlexus).apply(this, arguments));\n\t    }\n\t\n\t    _createClass(ScandicusFlexus, [{\n\t        key: 'performLayout',\n\t\n\t\n\t        // see notes in Scandicus about determining the first three notes.\n\t        value: function performLayout(ctxt) {\n\t            _get(Object.getPrototypeOf(ScandicusFlexus.prototype), 'performLayout', this).call(this, ctxt);\n\t\n\t            var first = this.notes[0];\n\t            var second = this.notes[1];\n\t            var third = this.notes[2];\n\t            var fourth = this.notes[3];\n\t\n\t            first.setGlyphShape(ctxt, _Exsurge2.GlyphCode.PunctumCuadratum);\n\t\n\t            if (second.iisLiquescent || third.isLiquescent) {\n\t                second.setGlyphShape(ctxt, _Exsurge2.GlyphCode.BeginningAscLiquescent);\n\t                third.setGlyphShape(ctxt, _Exsurge2.GlyphCode.TerminatingAscLiquescent);\n\t            } else {\n\t                second.setGlyphShape(ctxt, _Exsurge2.GlyphCode.PodatusLower);\n\t                third.setGlyphShape(ctxt, _Exsurge2.GlyphCode.PodatusUpper);\n\t            }\n\t\n\t            // fixme: can a scandicus have a quilisma like this?\n\t            if (second.shape == _Exsurge3.NoteShape.Quilisma) second.setGlyphShape(ctxt, _Exsurge2.GlyphCode.Quilisma);\n\t\n\t            first.performLayout(ctxt);\n\t            second.performLayout(ctxt);\n\t            third.performLayout(ctxt);\n\t            fourth.performLayout(ctxt);\n\t\n\t            var line = new _Exsurge2.NeumeLineVisualizer(ctxt, second, third, false);\n\t\n\t            second.bounds.x = first.bounds.right();\n\t            line.bounds.x = second.bounds.right() - line.bounds.width;\n\t            third.bounds.x = second.bounds.right() - third.bounds.width;\n\t            fourth.bounds.x = third.bounds.right();\n\t\n\t            // do we need to draw a descending line?\n\t            var staffPos3 = third.staffPosition;\n\t            var staffPos4 = fourth.staffPosition;\n\t            if (staffPos3 - staffPos4 > 1) {\n\t                var extraLine = new _Exsurge2.NeumeLineVisualizer(ctxt, third, fourth, false);\n\t                fourth.bounds.x -= extraLine.bounds.width;\n\t                extraLine.bounds.x -= extraLine.bounds.width;\n\t                this.addVisualizer(extraLine);\n\t            }\n\t\n\t            // add the elements\n\t            this.addVisualizer(first);\n\t            this.addVisualizer(second);\n\t            this.addVisualizer(line);\n\t            this.addVisualizer(third);\n\t            this.addVisualizer(fourth);\n\t\n\t            this.origin.x = first.origin.x;\n\t            this.origin.y = first.origin.y;\n\t\n\t            this.finishLayout(ctxt);\n\t        }\n\t    }]);\n\t\n\t    return ScandicusFlexus;\n\t}(Neume);\n\t\n\t/*\r\n\t * TextOnly\r\n\t */\n\t\n\t\n\tvar TextOnly = exports.TextOnly = function (_Neume16) {\n\t    _inherits(TextOnly, _Neume16);\n\t\n\t    function TextOnly() {\n\t        _classCallCheck(this, TextOnly);\n\t\n\t        return _possibleConstructorReturn(this, Object.getPrototypeOf(TextOnly).apply(this, arguments));\n\t    }\n\t\n\t    _createClass(TextOnly, [{\n\t        key: 'performLayout',\n\t        value: function performLayout(ctxt) {\n\t            _get(Object.getPrototypeOf(TextOnly.prototype), 'performLayout', this).call(this, ctxt);\n\t\n\t            // add an empty glyph as a placeholder\n\t            this.addVisualizer(new _Exsurge2.GlyphVisualizer(ctxt, _Exsurge2.GlyphCode.None));\n\t\n\t            this.origin.x = 0;\n\t            this.origin.y = 0;\n\t\n\t            this.finishLayout(ctxt);\n\t        }\n\t    }]);\n\t\n\t    return TextOnly;\n\t}(Neume);\n\t\n\t/*\r\n\t * Torculus\r\n\t */\n\t\n\t\n\tvar Torculus = exports.Torculus = function (_Neume17) {\n\t    _inherits(Torculus, _Neume17);\n\t\n\t    function Torculus() {\n\t        _classCallCheck(this, Torculus);\n\t\n\t        return _possibleConstructorReturn(this, Object.getPrototypeOf(Torculus).apply(this, arguments));\n\t    }\n\t\n\t    _createClass(Torculus, [{\n\t        key: 'performLayout',\n\t        value: function performLayout(ctxt) {\n\t            _get(Object.getPrototypeOf(Torculus.prototype), 'performLayout', this).call(this, ctxt);\n\t\n\t            var note1 = this.notes[0];\n\t            var note2 = this.notes[1];\n\t            var note3 = this.notes[2];\n\t            var line;\n\t\n\t            // fixme: implement liquescents\n\t            note1.setGlyphShape(ctxt, _Exsurge2.GlyphCode.PunctumCuadratum);\n\t            note2.setGlyphShape(ctxt, _Exsurge2.GlyphCode.PunctumCuadratum);\n\t            note3.setGlyphShape(ctxt, _Exsurge2.GlyphCode.PunctumCuadratum);\n\t\n\t            var staffPos1 = note1.staffPosition;\n\t            var staffPos2 = note2.staffPosition;\n\t            var staffPos3 = note3.staffPosition;\n\t\n\t            note1.performLayout(ctxt);\n\t            note2.performLayout(ctxt);\n\t            note3.performLayout(ctxt);\n\t\n\t            var x = note1.bounds.right();\n\t\n\t            // do we need to draw the first (ascending) line?\n\t            if (staffPos2 - staffPos1 > 1) {\n\t                line = new _Exsurge2.NeumeLineVisualizer(ctxt, note1, note2, false);\n\t                x -= line.bounds.width;\n\t                line.bounds.x = x;\n\t                this.addVisualizer(line);\n\t            }\n\t\n\t            note2.bounds.x = x;\n\t            x += note2.bounds.width;\n\t\n\t            // do we need to draw a descending line?\n\t            if (staffPos2 - staffPos3 > 1) {\n\t                line = new _Exsurge2.NeumeLineVisualizer(ctxt, note2, note3, false);\n\t                x -= line.bounds.width;\n\t                line.bounds.x = x;\n\t                this.addVisualizer(line);\n\t            }\n\t\n\t            note3.bounds.x = x;\n\t\n\t            this.addVisualizer(note1);\n\t            this.addVisualizer(note2);\n\t            this.addVisualizer(note3);\n\t\n\t            this.origin.x = note1.origin.x;\n\t            this.origin.y = note1.origin.y;\n\t\n\t            this.finishLayout(ctxt);\n\t        }\n\t    }]);\n\t\n\t    return Torculus;\n\t}(Neume);\n\t\n\t/*\r\n\t * TorculusResupinus\r\n\t */\n\t\n\t\n\tvar TorculusResupinus = exports.TorculusResupinus = function (_Neume18) {\n\t    _inherits(TorculusResupinus, _Neume18);\n\t\n\t    function TorculusResupinus() {\n\t        _classCallCheck(this, TorculusResupinus);\n\t\n\t        return _possibleConstructorReturn(this, Object.getPrototypeOf(TorculusResupinus).apply(this, arguments));\n\t    }\n\t\n\t    _createClass(TorculusResupinus, [{\n\t        key: 'performLayout',\n\t        value: function performLayout(ctxt) {\n\t            _get(Object.getPrototypeOf(TorculusResupinus.prototype), 'performLayout', this).call(this, ctxt);\n\t\n\t            var line;\n\t            var first = this.notes[0];\n\t            var second = this.notes[1];\n\t            var third = this.notes[2];\n\t            var fourth = this.notes[3];\n\t            var x = 0;\n\t\n\t            // first, figure out the porrectus swash\n\t            var firstStaffPosition = first.staffPosition;\n\t            var secondStaffPosition = second.staffPosition;\n\t            var thirdStaffPosition = third.staffPosition;\n\t            var fourthStaffPosition = fourth.staffPosition;\n\t\n\t            switch (first.shape) {\n\t                case _Exsurge3.NoteShape.Quilisma:\n\t                    first.setGlyphShape(ctxt, _Exsurge2.GlyphCode.Quilisma);\n\t                    break;\n\t\n\t                default:\n\t                    first.setGlyphShape(ctxt, _Exsurge2.GlyphCode.PunctumCuadratum);\n\t                    break;\n\t            }\n\t\n\t            first.performLayout(ctxt);\n\t            x = first.bounds.right();\n\t            this.addVisualizer(first);\n\t\n\t            // if we need a line between the first punctum and the porrectus swash, add it now\n\t            if (secondStaffPosition - firstStaffPosition > 1) {\n\t                line = new _Exsurge2.NeumeLineVisualizer(ctxt, first, second, false);\n\t                x -= line.bounds.width;\n\t                line.bounds.x = x;\n\t                this.addVisualizer(line);\n\t            }\n\t\n\t            switch (Math.abs(secondStaffPosition - thirdStaffPosition)) {\n\t                case 1:\n\t                    second.setGlyphShape(ctxt, _Exsurge2.GlyphCode.Porrectus1);\n\t                    break;\n\t                case 2:\n\t                    second.setGlyphShape(ctxt, _Exsurge2.GlyphCode.Porrectus2);\n\t                    break;\n\t                case 3:\n\t                    second.setGlyphShape(ctxt, _Exsurge2.GlyphCode.Porrectus3);\n\t                    break;\n\t                case 4:\n\t                    second.setGlyphShape(ctxt, _Exsurge2.GlyphCode.Porrectus4);\n\t                    break;\n\t                default:\n\t                    // fixme: this should be an error!\n\t                    second.setGlyphShape(ctxt, _Exsurge2.GlyphCode.Porrectus1);\n\t                    break;\n\t            }\n\t\n\t            second.performLayout(ctxt);\n\t            second.bounds.x = x;\n\t            x = second.bounds.right();\n\t            this.addVisualizer(second);\n\t\n\t            // the third glyph does not draw anything, but it still has logical importance for the editing\n\t            // environment...it can respond to changes which will then change the swash glyph of the first.\n\t            third.setGlyphShape(ctxt, _Exsurge2.GlyphCode.None);\n\t            third.performLayout(ctxt);\n\t\n\t            // do we need an ascending line after the porrectus swash?\n\t            if (fourthStaffPosition - thirdStaffPosition > 1) {\n\t                line = new _Exsurge2.NeumeLineVisualizer(ctxt, third, fourth, false);\n\t                line.bounds.x = x - line.bounds.width;\n\t                this.addVisualizer(line);\n\t            }\n\t\n\t            if (fourth.isLiquescent) fourth.setGlyphShape(ctxt, _Exsurge2.GlyphCode.TerminatingAscLiquescent);else fourth.setGlyphShape(ctxt, _Exsurge2.GlyphCode.PodatusUpper);\n\t\n\t            fourth.performLayout(ctxt);\n\t            fourth.bounds.x += x;\n\t            this.addVisualizer(fourth);\n\t\n\t            this.origin.x = first.origin.x;\n\t            this.origin.y = first.origin.y;\n\t\n\t            this.finishLayout(ctxt);\n\t        }\n\t    }]);\n\t\n\t    return TorculusResupinus;\n\t}(Neume);\n\t\n\t/*\r\n\t * TorculusResupinusFlexus\r\n\t */\n\t\n\t\n\tvar TorculusResupinusFlexus = exports.TorculusResupinusFlexus = function (_Neume19) {\n\t    _inherits(TorculusResupinusFlexus, _Neume19);\n\t\n\t    function TorculusResupinusFlexus() {\n\t        _classCallCheck(this, TorculusResupinusFlexus);\n\t\n\t        return _possibleConstructorReturn(this, Object.getPrototypeOf(TorculusResupinusFlexus).apply(this, arguments));\n\t    }\n\t\n\t    _createClass(TorculusResupinusFlexus, [{\n\t        key: 'performLayout',\n\t        value: function performLayout(ctxt) {\n\t            _get(Object.getPrototypeOf(TorculusResupinusFlexus.prototype), 'performLayout', this).call(this, ctxt);\n\t\n\t            var line;\n\t            var first = this.notes[0];\n\t            var second = this.notes[1];\n\t            var third = this.notes[2];\n\t            var fourth = this.notes[3];\n\t            var fifth = this.notes[4];\n\t            var x = 0;\n\t\n\t            var firstStaffPosition = first.staffPosition;\n\t            var secondStaffPosition = second.staffPosition;\n\t            var thirdStaffPosition = third.staffPosition;\n\t            var fourthStaffPosition = fourth.staffPosition;\n\t            var fifthStaffPosition = fifth.staffPosition;\n\t\n\t            switch (first.shape) {\n\t                case _Exsurge3.NoteShape.Quilisma:\n\t                    first.setGlyphShape(ctxt, _Exsurge2.GlyphCode.Quilisma);\n\t                    break;\n\t\n\t                default:\n\t                    first.setGlyphShape(ctxt, _Exsurge2.GlyphCode.PunctumCuadratum);\n\t                    break;\n\t            }\n\t\n\t            first.performLayout(ctxt);\n\t            x = first.bounds.right();\n\t            this.addVisualizer(first);\n\t\n\t            // if we need a line between the first punctum and the porrectus swash, add it now\n\t            if (secondStaffPosition - firstStaffPosition > 1) {\n\t                line = new _Exsurge2.NeumeLineVisualizer(ctxt, first, second, false);\n\t                x -= line.bounds.width;\n\t                line.bounds.x = x;\n\t                this.addVisualizer(line);\n\t            }\n\t\n\t            switch (secondStaffPosition - thirdStaffPosition) {\n\t                case 1:\n\t                    second.setGlyphShape(ctxt, _Exsurge2.GlyphCode.Porrectus1);\n\t                    break;\n\t                case 2:\n\t                    second.setGlyphShape(ctxt, _Exsurge2.GlyphCode.Porrectus2);\n\t                    break;\n\t                case 3:\n\t                    second.setGlyphShape(ctxt, _Exsurge2.GlyphCode.Porrectus3);\n\t                    break;\n\t                case 4:\n\t                    second.setGlyphShape(ctxt, _Exsurge2.GlyphCode.Porrectus4);\n\t                    break;\n\t                default:\n\t                    // fixme: should we generate an error here?\n\t                    second.setGlyphShape(ctxt, _Exsurge2.GlyphCode.None);\n\t                    break;\n\t            }\n\t\n\t            second.performLayout(ctxt);\n\t            second.bounds.x = x;\n\t            x = second.bounds.right();\n\t            this.addVisualizer(second);\n\t\n\t            // the second glyph does not draw anything, but it still has logical importance for the editing\n\t            // environment...it can respond to changes which will then change the swash glyph of the first.\n\t            third.setGlyphShape(ctxt, _Exsurge2.GlyphCode.None);\n\t            third.performLayout(ctxt);\n\t            third.bounds.x = x;\n\t            x = third.bounds.right();\n\t            this.addVisualizer(third);\n\t\n\t            // add a connecting line\n\t            if (fourthStaffPosition - thirdStaffPosition > 1) {\n\t                line = new _Exsurge2.NeumeLineVisualizer(ctxt, third, fourth, false);\n\t                x -= line.bounds.width;\n\t                line.bounds.x += x;\n\t                this.addVisualizer(line);\n\t            }\n\t\n\t            fourth.setGlyphShape(ctxt, _Exsurge2.GlyphCode.PunctumCuadratum);\n\t            fourth.performLayout(ctxt);\n\t            fourth.bounds.x = x;\n\t            x = fourth.bounds.right();\n\t            this.addVisualizer(fourth);\n\t\n\t            // add a connecting line\n\t            if (fourthStaffPosition - fifthStaffPosition > 1) {\n\t                line = new _Exsurge2.NeumeLineVisualizer(ctxt, fourth, fifth, false);\n\t                x -= line.bounds.width * 1.5;\n\t                line.bounds.x += x;\n\t                this.addVisualizer(line);\n\t            }\n\t\n\t            fifth.setGlyphShape(ctxt, _Exsurge2.GlyphCode.PunctumCuadratum);\n\t            fifth.performLayout(ctxt);\n\t            fifth.bounds.x = x;\n\t            this.addVisualizer(fifth);\n\t\n\t            this.origin.x = first.origin.x;\n\t            this.origin.y = first.origin.y;\n\t\n\t            this.finishLayout(ctxt);\n\t        }\n\t    }]);\n\t\n\t    return TorculusResupinusFlexus;\n\t}(Neume);\n\t\n\t/*\r\n\t * Tristropha\r\n\t *\r\n\t * For simplicity in implementation, Tristropha's have three notes in the object\r\n\t * structure. These technically must be the same pitch though (like the\r\n\t * Distropha and Bivirga).\r\n\t */\n\t\n\t\n\tvar Tristropha = exports.Tristropha = function (_Neume20) {\n\t    _inherits(Tristropha, _Neume20);\n\t\n\t    function Tristropha() {\n\t        _classCallCheck(this, Tristropha);\n\t\n\t        return _possibleConstructorReturn(this, Object.getPrototypeOf(Tristropha).apply(this, arguments));\n\t    }\n\t\n\t    _createClass(Tristropha, [{\n\t        key: 'performLayout',\n\t        value: function performLayout(ctxt) {\n\t            _get(Object.getPrototypeOf(Tristropha.prototype), 'performLayout', this).call(this, ctxt);\n\t\n\t            var note1 = this.notes[0];\n\t            var note2 = this.notes[1];\n\t            var note3 = this.notes[2];\n\t\n\t            var staffPosition = note1.staffPosition;\n\t\n\t            note1.setGlyphShape(ctxt, _Exsurge2.GlyphCode.PunctumCuadratum);\n\t            note1.performLayout(ctxt);\n\t\n\t            note2.setGlyphShape(ctxt, _Exsurge2.GlyphCode.PunctumCuadratum);\n\t            note2.performLayout(ctxt);\n\t            note2.bounds.x += note1.bounds.width + ctxt.intraNeumeSpacing;\n\t\n\t            note3.setGlyphShape(ctxt, _Exsurge2.GlyphCode.PunctumCuadratum);\n\t            note3.performLayout(ctxt);\n\t            note3.bounds.x += note1.bounds.width + note2.bounds.width + ctxt.intraNeumeSpacing * 2;\n\t\n\t            this.addVisualizer(note1);\n\t            this.addVisualizer(note2);\n\t            this.addVisualizer(note3);\n\t\n\t            this.origin.x = note1.origin.x;\n\t            this.origin.y = note1.origin.y;\n\t\n\t            this.finishLayout(ctxt);\n\t        }\n\t    }]);\n\t\n\t    return Tristropha;\n\t}(Neume);\n\t\n\t/*\r\n\t * Virga\r\n\t */\n\t\n\t\n\tvar Virga = exports.Virga = function (_Neume21) {\n\t    _inherits(Virga, _Neume21);\n\t\n\t    function Virga() {\n\t        _classCallCheck(this, Virga);\n\t\n\t        return _possibleConstructorReturn(this, Object.getPrototypeOf(Virga).apply(this, arguments));\n\t    }\n\t\n\t    _createClass(Virga, [{\n\t        key: 'performLayout',\n\t        value: function performLayout(ctxt) {\n\t            _get(Object.getPrototypeOf(Virga.prototype), 'performLayout', this).call(this, ctxt);\n\t\n\t            var note = this.notes[0];\n\t\n\t            var staffPosition = note.staffPosition;\n\t\n\t            var glyphCode = Virga.getGlyphCode(staffPosition);\n\t            note.setGlyphShape(ctxt, glyphCode);\n\t            note.performLayout(ctxt);\n\t\n\t            this.addVisualizer(note);\n\t\n\t            this.origin.x = note.origin.x;\n\t            this.origin.y = note.origin.y;\n\t\n\t            this.finishLayout(ctxt);\n\t        }\n\t\n\t        // The virga's glyph depends on its staff position. This is a helper function\n\t        // that can be used by other neumes that use the virga glyphs...\n\t\n\t    }], [{\n\t        key: 'getGlyphCode',\n\t        value: function getGlyphCode(staffPosition) {\n\t            if (Math.abs(staffPosition) % 2 == 1) return _Exsurge2.GlyphCode.VirgaLong;else return _Exsurge2.GlyphCode.VirgaShort;\n\t\n\t            // fixme: add logic for virgas low on the staff that are probably short also...\n\t        }\n\t    }]);\n\t\n\t    return Virga;\n\t}(Neume);\n\n/***/ }\n/******/ ])\n});\n;\n\n\n/** WEBPACK FOOTER **\n ** exsurge.min.js\n **/"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap 47b4f9ec3c0ad91f4482\n **/","//\r\n// Author(s):\r\n// Fr. Matthew Spencer, OSJ <mspencer@osjusa.org>\r\n//\r\n// Copyright (c) 2008-2016 Fr. Matthew Spencer, OSJ\r\n//\r\n// Permission is hereby granted, free of charge, to any person obtaining a copy\r\n// of this software and associated documentation files (the \"Software\"), to deal\r\n// in the Software without restriction, including without limitation the rights\r\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\n// copies of the Software, and to permit persons to whom the Software is\r\n// furnished to do so, subject to the following conditions:\r\n//\r\n// The above copyright notice and this permission notice shall be included in\r\n// all copies or substantial portions of the Software.\r\n//\r\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n// THE SOFTWARE.\r\n//\r\n\r\n'use strict';\r\n\r\nexport * from './Exsurge.Core'\r\nexport * from './Exsurge.Text'\r\nexport * from './Exsurge.Glyphs'\r\nexport * from './Exsurge.Drawing'\r\nexport * from './Exsurge.Chant'\r\nexport * from './Exsurge.Chant.Markings'\r\nexport * from './Exsurge.Chant.Signs'\r\nexport * from './Exsurge.Chant.Neumes'\r\nexport * from './Exsurge.Gabc'\r\n\r\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/index.js\n **/","//\r\n// Author(s):\r\n// Fr. Matthew Spencer, OSJ <mspencer@osjusa.org>\r\n//\r\n// Copyright (c) 2008-2016 Fr. Matthew Spencer, OSJ\r\n//\r\n// Permission is hereby granted, free of charge, to any person obtaining a copy\r\n// of this software and associated documentation files (the \"Software\"), to deal\r\n// in the Software without restriction, including without limitation the rights\r\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\n// copies of the Software, and to permit persons to whom the Software is\r\n// furnished to do so, subject to the following conditions:\r\n//\r\n// The above copyright notice and this permission notice shall be included in\r\n// all copies or substantial portions of the Software.\r\n//\r\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n// THE SOFTWARE.\r\n//\r\n\r\nexport function isDef(val) {\r\n  var undefined;\r\n  return val !== undefined;\r\n};\r\n\r\nexport var Units = {\r\n  // enums\r\n  DeviceIndepenedent: 0, // device independent units: 96/inch\r\n  Centimeters: 1,\r\n  Millimeters: 2,\r\n  Inches: 3,\r\n\r\n  // constants for device independent units (diu)\r\n  DIU_PER_INCH: 96,\r\n  DIU_PER_CENTIMETER: 96 / 2.54,\r\n\r\n  ToDeviceIndependent: function (n, inputUnits) {\r\n    switch (inputUnits) {\r\n      case Centimeters:\r\n        return n * DIU_PER_CENTIMETER;\r\n      case Millimeters:\r\n        return n * DIU_PER_CENTIMETER / 10;\r\n      case Inches:\r\n        return n * DIU_PER_INCH;\r\n      default:\r\n        return n;\r\n    }\r\n  },\r\n\r\n  FromDeviceIndependent: function (n, outputUnits) {\r\n    switch (outputUnits) {\r\n      case Centimeters:\r\n        return n / DIU_PER_CENTIMETER;\r\n      case Millimeters:\r\n        return n / DIU_PER_CENTIMETER * 10;\r\n      case Inches:\r\n        return n / DIU_PER_INCH;\r\n      default:\r\n        return n;\r\n    }\r\n  },\r\n\r\n\r\n  StringToUnitsType: function(s) {\r\n    switch (s.ToLower()) {\r\n      case \"in\":\r\n      case \"inches\":\r\n        return Inches;\r\n\r\n      case \"cm\":\r\n      case \"centimeters\":\r\n        return Centimeters;\r\n\r\n      case \"mm\":\r\n      case \"millimeters\":\r\n        return Millimeters;\r\n\r\n      case \"di\":\r\n      case \"device-independent\":\r\n        return DeviceIndepenedent;\r\n\r\n      default:\r\n        return DeviceIndepenedent;\r\n    }\r\n  },\r\n\r\n  UnitsTypeToString: function(units) {\r\n    switch (units) {\r\n      case Inches: return \"in\";\r\n      case Centimeters: return \"cm\";\r\n      case Millimeters: return \"mm\";\r\n      case DeviceIndepenedent: return \"device-independent\";\r\n      default: return \"device-independent\";\r\n    }\r\n  }\r\n}\r\n\r\nexport function DeviceIndependent(n) {\r\n  return n;\r\n}\r\n\r\nexport function Centimeters(n) {\r\n  return Units.ToDeviceIndependent(n, Units.Centimeters);\r\n}\r\n\r\nexport function Millimeters(n) {\r\n  return Units.ToDeviceIndependent(n, Units.Millimeters);\r\n}\r\n\r\nexport function Inches(n) {\r\n  return Units.ToDeviceIndependent(n, Units.Inches);\r\n}\r\n\r\nexport function ToCentimeters(n) {\r\n  return Units.FromDeviceIndependent(n, Units.Centimeters);\r\n}\r\n\r\nexport function ToMillimeters(n) {\r\n  return Units.FromDeviceIndependent(n, Units.Millimeters);\r\n}\r\n\r\nexport function ToInches(n) {\r\n  return Units.FromDeviceIndependent(n, Units.Inches);\r\n}\r\n\r\n\r\n/*\r\n * Point\r\n */\r\nexport class Point {\r\n  constructor(x, y) {\r\n    this.x = (typeof x !== 'undefined') ? x : 0;\r\n    this.y = (typeof y !== 'undefined') ? y : 0;\r\n  }\r\n\r\n  clone() {\r\n    return new Point(this.x, this.y);\r\n  }\r\n};\r\n\r\n/*\r\n * Rect\r\n */\r\nexport class Rect {\r\n  constructor(x, y, width, height) {\r\n    this.x = (typeof x !== 'undefined') ? x : Infinity;\r\n    this.y = (typeof y !== 'undefined') ? y : Infinity;\r\n    this.width = isDef(width) ? width : -Infinity;\r\n    this.height = isDef(height) ? height : -Infinity;\r\n  }\r\n\r\n  clone() {\r\n    return new Rect(this.x, this.y, this.width, this.height);\r\n  }\r\n\r\n  isEmpty() {\r\n    return (this.x == Infinity &&\r\n            this.y == Infinity &&\r\n            this.width == -Infinity &&\r\n            this.height == -Infinity);\r\n  }\r\n\r\n  // convenience method\r\n  right() {\r\n    return this.x + this.width;\r\n  }\r\n\r\n  bottom() {\r\n    return this.y + this.bottom;\r\n  }\r\n\r\n  equals(rect) {\r\n    return this.x == rect.x && this.y == rect.y &&\r\n           this.width == rect.width && this.height == rect.height;\r\n  }\r\n\r\n  // other can be a Point or a Rect\r\n  contains(other) {\r\n    if (other instanceof Point) {\r\n      return other.x >= this.x &&\r\n              other.x <= this.x + this.width &&\r\n              other.y >= this.y &&\r\n              other.y <= this.y + this.height;\r\n    } else { // better be instance of Rect\r\n      return this.x <= other.x &&\r\n              this.x + this.width >= other.x + other.width &&\r\n              this.y <= other.y &&\r\n              this.y + this.height >= other.y + other.height;\r\n    }\r\n  }\r\n\r\n  union(rect) {\r\n\r\n    var right = Math.max(this.x + this.width, rect.x + rect.width);\r\n    var bottom = Math.max(this.y + this.height, rect.y + rect.height);\r\n\r\n    this.x = Math.min(this.x, rect.x);\r\n    this.y = Math.min(this.y, rect.y);\r\n\r\n    this.width = right - this.x;\r\n    this.height = bottom - this.y;\r\n  }\r\n\r\n  equals(rect) {\r\n    return this.x == rect.x &&\r\n        this.y == rect.y &&\r\n        this.width == rect.width &&\r\n        this.height == rect.height;\r\n  }\r\n\r\n  //static Empty = new Rect(Infinity, Infinity, -Infinity, -Infinity);\r\n}\r\n\r\n/**\r\n * Margins\r\n *\r\n * @class\r\n */\r\nexport class Margins {\r\n  constructor(left, top, right, bottom) {\r\n    this.left = (typeof left !== 'undefined') ? left : 0;\r\n    this.top = (typeof top !== 'undefined') ? top : 0;\r\n    this.right = (typeof right !== 'undefined') ? right : 0;\r\n    this.bottom = (typeof bottom !== 'undefined') ? bottom : 0;\r\n  }\r\n\r\n  clone() {\r\n    return new Margins(this.left, this.top, this.right, this.bottom);\r\n  }\r\n\r\n  equals(margins) {\r\n    return this.left == margins.left &&\r\n        this.top == margins.top &&\r\n        this.right == margins.right &&\r\n        this.bottom == margins.bottom;\r\n  }\r\n};\r\n\r\n/**\r\n * Size\r\n *\r\n * @class\r\n */\r\n\r\nexport class Size {\r\n  constructor(width, height) {\r\n    this.width = (typeof width !== 'undefined') ? width : 0;\r\n    this.height = (typeof height !== 'undefined') ? height : 0;\r\n  }\r\n\r\n  clone() {\r\n    return new Size(this.width, this.height);\r\n  }\r\n\r\n  equals(size) {\r\n    return this.width == size.width &&\r\n        this.height == size.height;\r\n  }\r\n};\r\n\r\n\r\n/*\r\n * Pitches, notes\r\n */\r\nexport var Step = {\r\n  Do: 0,\r\n  Du: 1,\r\n  Re: 2,\r\n  Me: 3,\r\n  Mi: 4,\r\n  Fa: 5,\r\n  Fu: 6,\r\n  So: 7,\r\n  La: 9,\r\n  Te: 10,\r\n  Ti: 11\r\n};\r\n\r\n  // this little array helps map step values to staff positions. The numeric values of steps\r\n  // correspond to whole step increments (2) or half step increments (1). This gives us the ability\r\n  // to compare pitches precisely, but makes it challenging to place steps on the staff. this little\r\n  // array maps the steps to an incremental position the steps take on the staff line. This works\r\n  // so simply because chant only uses do and fa clefs, and only has a flatted ti (te), making\r\n  // for relatively easy mapping to staff line locations.\r\n  //                         Do Du Re Me Mi Fa Fu So    La Te Ti\r\nvar __StepToStaffPosition = [0, 0, 1, 1, 2, 3, 3, 4, 4, 5, 6, 6];\r\nvar __StaffOffsetToStep = [Step.Do, Step.Re, Step.Mi, Step.Fa, Step.So, Step.La, Step.Ti]; // no accidentals in this one\r\n\r\n\r\nexport class Pitch {\r\n  constructor(step, octave) {\r\n    this.step = step;\r\n    this.octave = octave;\r\n  }\r\n  \r\n  toInt() {\r\n    return this.octave * 12 + this.step;\r\n  }\r\n\r\n  isHigherThan(pitch) {\r\n    return this.toInt() > pitch.toInt();\r\n  }\r\n\r\n  isLowerThan(pitch) {\r\n    return this.toInt() < pitch.toInt();\r\n  }\r\n\r\n  equals(pitch) {\r\n    return this.toInt() == pitch.toInt();\r\n  }\r\n\r\n  static stepToStaffOffset(step) {\r\n    return __StepToStaffPosition[step];\r\n  }\r\n\r\n  static staffOffsetToStep(offset) {\r\n    while (offset < 0)\r\n      offset = __StaffOffsetToStep.length + offset;\r\n\r\n    return __StaffOffsetToStep[offset % __StaffOffsetToStep.length];\r\n  }\r\n};\r\n\r\n// for positioning markings on notes\r\nexport var MarkingPositionHint = {\r\n  Default: 0,\r\n  Above: 1,\r\n  Below: 2\r\n};\r\n\r\n\r\n\r\nexport function generateRandomGuid() {\r\n  function s4() {\r\n    return Math.floor((1 + Math.random()) * 0x10000)\r\n      .toString(16)\r\n      .substring(1);\r\n  }\r\n  return s4() + s4();\r\n};\n\n\n/** WEBPACK FOOTER **\n ** ./src/Exsurge.Core.js\n **/","//\n// Author(s):\n// Fr. Matthew Spencer, OSJ <mspencer@osjusa.org>\n//\n// Copyright (c) 2008-2016 Fr. Matthew Spencer, OSJ\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n//\n\nimport * as Exsurge from './Exsurge.Core'\n\n/**\n * @class\n */\nexport class Language {\n  constructor(name) {\n    this.name = (typeof name !== 'undefined') ? name : \"<unknown>\";\n  }\n\n  /**\n   * @param {String} text The string to parsed into words.\n   * @return {Word[]} the resulting parsed words from syllabification\n   */\n  syllabify(text) {\n\n    var parsedWords = [];\n\n    if (text == undefined || text == \"\")\n      return parsedWords;\n\n    // Divide the text into words separated by whitespace\n    var words = text.split(/[\\s]+/);\n\n    for (var i = 0, end = words.length; i < end; i++)\n      parsedWords.push(this.syllabifyWord(words[i]));\n\n    return parsedWords;\n  }\n}\n\n/**\n * @class\n */\nexport class Latin extends Language {\n\n  /**\n   * @constructs\n   */\n  constructor() {\n    super(\"Latin\");\n\n    // fixme: should we include 'diphthongs' with accented vowels, e.g., áe?\n    // fixme: ui is only diphthong in the exceptional cases below (according to Wheelock's Latin)\n    this.diphthongs = [\"ae\", \"au\", \"oe\"];\n\n    // some words that are simply exceptions to standard syllabification rules!\n    var wordExceptions = new Object();\n\n    // ui combos pronounced as dipthongs\n    wordExceptions[\"huius\"] = [\"hui\", \"us\"];\n    wordExceptions[\"cuius\"] = [\"cui\", \"us\"];\n    wordExceptions[\"huic\"] = [\"huic\"];\n    wordExceptions[\"cui\"] = [\"cui\"];\n    wordExceptions[\"hui\"] = [\"hui\"];\n\n    this.vowels = ['a', 'e', 'i', 'o', 'u',\n                   'á', 'é', 'í', 'ó', 'ú',\n                   'æ', 'œ',\n                   'ǽ',  // no accented œ in unicode?\n                   'y']; // y is treated as a vowel; not native to Latin but useful for words borrowed from Greek\n\n    this.muteConsonantsAndF = ['b', 'c', 'd', 'g', 'p', 't', 'f'];\n\n    this.liquidConsonants = ['l', 'r'];\n  }\n\n  // c must be lowercase!\n  isVowel(c) {\n    for (var i = 0, end = this.vowels.length; i < end; i++)\n      if (this.vowels[i] == c)\n        return true;\n\n    return false;\n  }\n\n  /**\n   * f is not a mute consonant, but we lump it together for syllabification\n   * since it is syntactically treated the same way\n   *\n   * @param {String} c The character to test; must be lowercase\n   * @return {boolean} true if c is an f or a mute consonant\n   */\n  isMuteConsonantOrF(c) {\n    for (var i = 0, end = this.muteConsonantsAndF.length; i < end; i++)\n      if (this.muteConsonantsAndF[i] == c)\n        return true;\n\n    return false;\n  }\n\n  /**\n   *\n   * @param {String} c The character to test; must be lowercase\n   * @return {boolean} true if c is a liquid consonant\n   */\n  isLiquidConsonant(c) {\n    for (var i = 0, end = this.liquidConsonants.length; i < end; i++)\n      if (this.liquidConsonants[i] == c)\n        return true;\n\n    return false;\n  }\n\n  /**\n   *\n   * @param {String} s The string to test; must be lowercase\n   * @return {boolean} true if s is a diphthong\n   */\n  isDiphthong(s) {\n    for (var i = 0, end = this.diphthongs.length; i < end; i++)\n      if (this.diphthongs[i] == s)\n        return true;\n\n    return false;\n  }\n\n  /**\n   * Rules for Latin syllabification (from Collins, \"A Primer on Ecclesiastical Latin\")\n   *\n   * Divisions occur when:\n   *   1. After open vowels (those not followed by a consonant) (e.g., \"pi-us\" and \"De-us\")\n   *   2. After vowels followed by a single consonant (e.g., \"vi-ta\" and \"ho-ra\")\n   *   3. After the first consonant when two or more consonants follow a vowel\n   *      (e.g., \"mis-sa\", \"minis-ter\", and \"san-ctus\").\n   *\n   * Exceptions:\n   *   1. In compound words the consonants stay together (e.g., \"de-scribo\").\n   *   2. A mute consonant (b, c, d, g, p, t) or f followed by a liquid consonant (l, r)\n   *      go with the succeeding vowel: \"la-crima\", \"pa-tris\"\n   *\n   * In addition to these rules, Wheelock's Latin provides this sound exception:\n   *   -  Also counted as single consonants are qu and the aspirates ch, ph,\n   *      th, which should never be separated in syllabification:\n   *      architectus, ar-chi-tec-tus; loquacem, lo-qua-cem.\n   *\n   */\n  syllabifyWord(word) {\n    var syllables = [];\n    var haveCompleteSyllable = false;\n    var previousWasVowel = false;\n    var workingString = word.toLowerCase();\n    var startSyllable = 0;\n\n    var c, lookahead, haveLookahead;\n\n    // a helper function to create syllables\n    var makeSyllable = function (length) {\n      if (haveCompleteSyllable) {\n        syllables.push(word.substr(startSyllable, length));\n        startSyllable += length;\n      }\n\n      haveCompleteSyllable = false;\n    }\n\n    for (var i = 0, wordLength = workingString.length; i < wordLength; i++) {\n\n      c = workingString[i];\n\n      // get our lookahead in case we need them...\n      lookahead = '*';\n      haveLookahead = (i + 1) < wordLength;\n\n      if (haveLookahead)\n        lookahead = workingString[i + 1];\n\n      var cIsVowel = this.isVowel(c);\n\n      // i is a special case for a vowel. when i is at the beginning\n      // of the word (Iesu) or i is between vowels (alleluia),\n      // then the i is treated as a consonant (y)\n      if (c == 'i') {\n        if (i == 0 && haveLookahead && this.isVowel(lookahead))\n          cIsVowel = false;\n        else if (previousWasVowel && haveLookahead && this.isVowel(lookahead)) {\n          cIsVowel = false;\n        }\n      }\n\n      if (c == '-') {\n\n        // a hyphen forces a syllable break, which effectively resets\n        // the logic...\n\n        haveCompleteSyllable = true;\n        previousWasVowel = false;\n        makeSyllable(i - startSyllable);\n        startSyllable++;\n\n      } else if (cIsVowel) {\n\n        // once we get a vowel, we have a complete syllable\n        haveCompleteSyllable = true;\n\n        if (previousWasVowel && !this.isDiphthong(workingString[i - 1] + \"\" + c)) {\n          makeSyllable(i - startSyllable);\n          haveCompleteSyllable = true;\n        }\n\n        previousWasVowel = true;\n\n      } else if (haveLookahead) {\n\n        if ((c == 'q' && lookahead == 'u') ||\n                 (lookahead == 'h' && (c == 'c' || c == 'p' || c == 't'))) {\n          // handle wheelock's exceptions for qu, ch, ph and th\n          makeSyllable(i - startSyllable);\n          i++; // skip over the 'h' or 'u'\n        } else if (previousWasVowel && this.isVowel(lookahead)) {\n          // handle division rule 2\n          makeSyllable(i - startSyllable);\n        } else if (this.isMuteConsonantOrF(c) && this.isLiquidConsonant(lookahead)) {\n          // handle exception 2\n          makeSyllable(i - startSyllable);\n        } else if (haveCompleteSyllable) {\n          // handle division rule 3\n          makeSyllable(i + 1 - startSyllable);\n        }\n\n        previousWasVowel = false;\n      }\n    }\n\n    // if we have a complete syllable, we can add it as a new one. Otherwise\n    // we tack the remaining characters onto the last syllable.\n    if (haveCompleteSyllable)\n      syllables.push(word.substr(startSyllable));\n    else if (startSyllable > 0)\n      syllables[syllables.length - 1] += word.substr(startSyllable);\n\n    return syllables;\n  }\n\n  /**\n   * @param {String} s the string to search\n   * @param {Number} startIndex The index at which to start searching for a vowel in the string\n   * @retuns a custom class with three properties: {found: (true/false) startIndex: (start index in s of vowel segment) length ()}\n   */\n  findVowelSegment(s, startIndex) {\n\n    var i, end, index;\n    var workingString = s.toLowerCase();\n\n    // do we have a diphthongs?\n    for (i = 0, end = this.diphthongs.length; i < end; i++) {\n      var d = this.diphthongs[i];\n      index = workingString.indexOf(d, startIndex);\n\n      if (index >= 0)\n        return { found: true, startIndex: index, length: d.length };\n    }\n\n    // no diphthongs. Let's look for single vowels then...\n    for (i = 0, end = this.vowels.length; i < end; i++) {\n      index = workingString.indexOf(this.vowels[i], startIndex);\n\n      if (index >= 0)\n        return { found: true, startIndex: index, length: 1 };\n    }\n\n    // no vowels sets found after startIndex!\n    return { found: false, startIndex: -1, length: -1 };\n  }\n}\n\n\n/**\n * @class\n */\nexport class Spanish extends Language {\n\n  constructor() {\n    super(\"Spanish\");\n\n    this.vowels = ['a', 'e', 'i', 'o', 'u', 'y',\n                    'á', 'é', 'í', 'ó', 'ú', 'ü'];\n\n    this.weakVowels = ['i', 'u', 'ü', 'y'];\n\n    this.strongVowels = ['a', 'e', 'o', 'á', 'é', 'í', 'ó', 'ú', ];\n\n\n    this.dipthongs = [\"ai\", \"ei\", \"oi\", \"ui\", \"ia\", \"ie\", \"io\", \"iu\", \"au\", \"eu\", \"ou\", \"ua\", \"ue\", \"uo\",\n                       \"ái\", \"éi\", \"ói\", \"úi\", \"iá\", \"ié\", \"ió\", \"iú\", \"áu\", \"éu\", \"óu\", \"uá\", \"ué\", \"uó\",\n                       \"üe\", \"üi\"];\n\n    this.uDipthongExpections = [\"gue\", \"gui\", \"qua\", \"que\", \"qui\", \"quo\"];\n  }\n\n  // c must be lowercase!\n  isVowel(c) {\n    for (var i = 0, end = this.vowels.length; i < end; i++)\n      if (this.vowels[i] == c)\n        return true;\n\n    return false;\n  }\n\n  /**\n   * @param {String} c The character to test; must be lowercase\n   * @return {boolean} true if c is an f or a mute consonant\n   */\n  isWeakVowel(c) {\n    for (var i = 0, end = this.weakVowels.length; i < end; i++)\n      if (this.weakVowels[i] == c)\n        return true;\n\n    return false;\n  }\n\n  /**\n   * @param {String} c The character to test; must be lowercase\n   * @return {boolean} true if c is an f or a mute consonant\n   */\n  isStrongVowel(c) {\n    for (var i = 0, end = this.strongVowels.length; i < end; i++)\n      if (this.strongVowels[i] == c)\n        return true;\n\n    return false;\n  }\n\n  /**\n   *\n   * @param {String} s The string to test; must be lowercase\n   * @return {boolean} true if s is a diphthong\n   */\n  isDiphthong(s) {\n    for (var i = 0, end = this.diphthongs.length; i < end; i++)\n      if (this.diphthongs[i] == s)\n        return true;\n\n    return false;\n  }\n\n  createSyllable(text) {\n\n/*\n    var accented = false;\n    var ellidesToNext = false;\n\n    if (text.length > 0) {\n        \n        if (text[0] == '`') {\n            accented = true;\n            text = text.substr(1);\n        }\n\n        if (text[text.length - 1] == '_') {\n            ellidesToNext = true;\n            text = text.substr(0, text.length - 1);\n        }\n    }\n\n    var s = new Syllable(text);\n\n    s.isMusicalAccent = accented;\n    s.elidesToNext = ellidesToNext;*/\n\n    return text;\n  }\n\n  /**\n   */\n  syllabifyWord(word) {\n\n    var syllables = [];\n\n    var haveCompleteSyllable = false;\n    var previousIsVowel = false;\n    var previousIsStrongVowel = false; // only valid if previousIsVowel == true\n    var startSyllable = 0;\n\n    // fixme: first check for prefixes\n\n    for (i = 0; i < word.length; i++) {\n\n      var c = word[i].toLowerCase();\n\n      if (this.isVowel(c)) {\n\n        // we have a complete syllable as soon as we have a vowel\n        haveCompleteSyllable = true;\n\n        var cIsStrongVowel = this.isStrongVowel(c);\n\n        if (previousIsVowel) {\n          // if we're at a strong vowel, then we finish out the last syllable\n          if (cIsStrongVowel) {\n            if (previousIsStrongVowel) {\n              syllables.push(this.createSyllable(word.substr(startSyllable, i - startSyllable)));\n              startSyllable = i;\n            }\n          }\n        }\n\n        previousIsVowel = true;\n        previousIsStrongVowel = cIsStrongVowel;\n\n      } else {\n        if (!haveCompleteSyllable) {\n          // do nothing since we don't have a complete syllable yet...\n        } else {\n\n          // handle explicit syllable breaks\n          if (word[i] == '-') {\n            // start new syllable\n            syllables.push(this.createSyllable(word.substr(startSyllable, i - startSyllable)));\n            startSyllable = ++i;\n          } else {\n\n            var numberOfConsonants = 1;\n\n            // count how many more consonants there are\n            for (j = i + 1; j < word.length; j++) {\n              if (this.isVowel(word[j]))\n                break;\n              numberOfConsonants++;\n            }\n\n            if (numberOfConsonants == 1) {\n              // start new syllable\n              syllables.push(this.createSyllable(word.substr(startSyllable, i - startSyllable)));\n              startSyllable = i;\n\n            } else if (numberOfConsonants == 2) {\n              var consonant2 = word[i + 1].toLowerCase();\n              if (consonant2 == 'l' || consonant2 == 'r' || (c == 'c' && consonant2 == 'h')) {\n                // split before the consonant pair\n                syllables.push(this.createSyllable(word.substr(startSyllable, i - startSyllable)));\n                startSyllable = i++;\n              } else {\n                //split the consonants\n                syllables.push(this.createSyllable(word.substr(startSyllable, ++i - startSyllable)));\n                startSyllable = i;\n              }\n\n            } else if (numberOfConsonants == 3) {\n              var consonant2 = word[i + 1].toLowerCase();\n\n              // if second consonant is s, divide cc-c, otherwise divide c-cc\n              if (consonant2 == 's') {\n                i += 2;\n                syllables.push(this.createSyllable(word.substr(startSyllable, i - startSyllable)));\n              } else {\n                syllables.push(this.createSyllable(word.substr(startSyllable, ++i - startSyllable)));\n              }\n\n              startSyllable = i;\n\n            } else if (numberOfConsonants == 4) {\n              // four always get split cc-cc\n              syllables.push(this.createSyllable(word.substr(startSyllable, i - startSyllable + 2)));\n              startSyllable = i + 2;\n              i += 3;\n            }\n          }\n\n          haveCompleteSyllable = false;\n        }\n\n        previousIsVowel = false;\n      }\n    }\n\n\n    // if we have a complete syllable, we can add it as a new one. Otherwise\n    // we tack the remaining characters onto the last syllable.\n    if (haveCompleteSyllable)\n      syllables.push(word.substr(startSyllable));\n    else if (startSyllable > 0)\n      syllables[syllables.length - 1] += word.substr(startSyllable);\n    else if (syllables.length == 0)\n      syllables.push(this.createSyllable(word))\n\n    return syllables;\n  }\n\n  /**\n   * @param {String} s the string to search\n   * @param {Number} startIndex The index at which to start searching for a vowel in the string\n   * @retuns a custom class with three properties: {found: (true/false) startIndex: (start index in s of vowel segment) length ()}\n   */\n  findVowelSegment(s, startIndex) {\n\n    var i, end, index;\n    var workingString = s.toLowerCase();\n\n    // do we have a diphthongs?\n    for (i = 0, end = this.diphthongs.length; i < end; i++) {\n      var d = this.diphthongs[i];\n      index = workingString.indexOf(d, startIndex);\n\n      if (index >= 0) {\n\n        // check the exceptions...\n        if (d[0] == 'u' && index > 0) {\n          var tripthong = s.substr(index - 1, 3).toLowerCase();\n\n          for (j = 0, endj = this.uDipthongExpections.length; i < endj; j++) {\n            if (tripthong == this.uDipthongExpections[j]) {\n              // search from after the u...\n              return this.findVowelSegment(s, index + 1);\n            }\n          }\n        }\n\n        return { found: true, startIndex: index, length: d.length };\n      }\n    }\n\n    // no diphthongs. Let's look for single vowels then...\n    for (i = 0, end = this.vowels.length; i < end; i++) {\n      index = workingString.indexOf(this.vowels[i], startIndex);\n\n      if (index >= 0)\n        return { found: true, startIndex: index, length: 1 };\n    }\n\n    // no vowels sets found after startIndex!\n    return { found: false, startIndex: -1, length: -1 };\n  }\n}\n\n\n/** WEBPACK FOOTER **\n ** ./src/Exsurge.Text.js\n **/","//\r\n// Author(s):\r\n// Fr. Matthew Spencer, OSJ <mspencer@osjusa.org>\r\n//\r\n// Copyright (c) 2008-2016 Fr. Matthew Spencer, OSJ\r\n//\r\n// Permission is hereby granted, free of charge, to any person obtaining a copy\r\n// of this software and associated documentation files (the \"Software\"), to deal\r\n// in the Software without restriction, including without limitation the rights\r\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\n// copies of the Software, and to permit persons to whom the Software is\r\n// furnished to do so, subject to the following conditions:\r\n//\r\n// The above copyright notice and this permission notice shall be included in\r\n// all copies or substantial portions of the Software.\r\n//\r\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n// THE SOFTWARE.\r\n//\r\n\r\n\r\n// generated based on the svg data\r\nexport let Glyphs = {\r\n  \"None\": {\r\n    \"svgSrc\": \"<g></g>\",\r\n    \"paths\": [{\r\n      \"type\": \"positive\",\r\n      \"data\": \"\"\r\n    }],\r\n    \"bounds\": {\r\n      \"x\": 0,\r\n      \"y\": 0,\r\n      \"width\": 0,\r\n      \"height\": 0\r\n    },\r\n    \"origin\": {\r\n      \"x\": 0,\r\n      \"y\": 0\r\n    }\r\n  },\r\n  \"AcuteAccent\": {\r\n    \"svgSrc\": \"<path d=\\\"M4 0C-.614.52-.614.52-.803-3.182l60.768-108.422c4.52-7.182 10.543-13.67 18.075-13.67 5.27 0 14.31 1.264 23.346 7.793 7.53 5.223 8.803 11.752 8.803 16.975 0 3.917-.52 11.1-8.05 17.628L4 0z\\\"/>\",\r\n    \"paths\": [{\r\n      \"type\": \"positive\",\r\n      \"data\": \"M4 0C-.614.52-.614.52-.803-3.182l60.768-108.422c4.52-7.182 10.543-13.67 18.075-13.67 5.27 0 14.31 1.264 23.346 7.793 7.53 5.223 8.803 11.752 8.803 16.975 0 3.917-.52 11.1-8.05 17.628L4 0z\"\r\n    }],\r\n    \"bounds\": {\r\n      \"x\": 0,\r\n      \"y\": 0,\r\n      \"width\": 110.99200439453125,\r\n      \"height\": 125.79399108886719\r\n    },\r\n    \"origin\": {\r\n      \"x\": 0.8030000329017639,\r\n      \"y\": 125.27399444580078\r\n    }\r\n  },\r\n  \"Apostropha\": {\r\n    \"svgSrc\": \"<path d=\\\"M1.22-73.438c4.165 13.02 12.238 27.084 24.217 42.188L49.657 0 34.812 27.344C18.666 55.47-.084 72.396-21.438 78.124c4.687-3.645 7.03-8.593 7.03-14.843 0-8.853-4.947-20.572-14.843-35.155L-48 0 1.22-73.438z\\\"/>\",\r\n    \"paths\": [{\r\n      \"type\": \"positive\",\r\n      \"data\": \"M1.22-73.438c4.165 13.02 12.238 27.084 24.217 42.188L49.657 0 34.812 27.344C18.666 55.47-.084 72.396-21.438 78.124c4.687-3.645 7.03-8.593 7.03-14.843 0-8.853-4.947-20.572-14.843-35.155L-48 0 1.22-73.438z\"\r\n    }],\r\n    \"bounds\": {\r\n      \"x\": 0,\r\n      \"y\": 0,\r\n      \"width\": 97.65699768066406,\r\n      \"height\": 151.56201171875\r\n    },\r\n    \"origin\": {\r\n      \"x\": 48,\r\n      \"y\": 73.43800354003906\r\n    }\r\n  },\r\n  \"BeginningAscLiquescent\": {\r\n    \"svgSrc\": \"<path d=\\\"M-50 43.688V-61c4.167 7.292 12.76 10.938 25.78 10.938 9.376 0 20.053-1.563 32.032-4.688C31.773-60.48 45.833-71.677 50-88.344v117.97C43.75 42.645 32.812 51.5 17.187 56.186-.52 61.398-15.886 64-28.906 64-42.97 64-50 57.23-50 43.687z\\\"/>\",\r\n    \"paths\": [{\r\n      \"type\": \"positive\",\r\n      \"data\": \"M-50 43.688V-61c4.167 7.292 12.76 10.938 25.78 10.938 9.376 0 20.053-1.563 32.032-4.688C31.773-60.48 45.833-71.677 50-88.344v117.97C43.75 42.645 32.812 51.5 17.187 56.186-.52 61.398-15.886 64-28.906 64-42.97 64-50 57.23-50 43.687z\"\r\n    }],\r\n    \"bounds\": {\r\n      \"x\": 0,\r\n      \"y\": 0,\r\n      \"width\": 100,\r\n      \"height\": 152.343994140625\r\n    },\r\n    \"origin\": {\r\n      \"x\": 50,\r\n      \"y\": 88.34400177001953\r\n    }\r\n  },\r\n  \"BeginningDesLiquescent\": {\r\n    \"svgSrc\": \"<path d=\\\"M-50-56.03c0-13.022 7.03-19.532 21.094-19.532 13.02 0 28.385 2.604 46.093 7.812C32.813-63.583 43.75-54.73 50-41.187V76C45.833 59.854 31.77 48.656 7.812 42.406c-11.98-3.125-22.656-4.687-32.03-4.687-13.022 0-21.615 3.905-25.782 11.718v-105.47z\\\"/>\",\r\n    \"paths\": [{\r\n      \"type\": \"positive\",\r\n      \"data\": \"M-50-56.03c0-13.022 7.03-19.532 21.094-19.532 13.02 0 28.385 2.604 46.093 7.812C32.813-63.583 43.75-54.73 50-41.187V76C45.833 59.854 31.77 48.656 7.812 42.406c-11.98-3.125-22.656-4.687-32.03-4.687-13.022 0-21.615 3.905-25.782 11.718v-105.47z\"\r\n    }],\r\n    \"bounds\": {\r\n      \"x\": 0,\r\n      \"y\": 0,\r\n      \"width\": 100,\r\n      \"height\": 151.56199645996094\r\n    },\r\n    \"origin\": {\r\n      \"x\": 50,\r\n      \"y\": 75.56199645996094\r\n    }\r\n  },\r\n  \"CustodDescLong\": {\r\n    \"svgSrc\": \"<path d=\\\"M39.063 273.472c5.73.52 7.29-6.25 4.687-20.312V-65.59c-13.542 2.083-24.22 5.468-32.03 10.156C3.905-50.226 0-43.714 0-35.904V71.91c5.73-5.21 10.677-8.594 14.844-10.157 5.73-1.562 12.24-2.343 19.53-2.343v196.875c0 11.458 1.563 17.187 4.688 17.187z\\\"/>\",\r\n    \"paths\": [{\r\n      \"type\": \"positive\",\r\n      \"data\": \"M39.063 273.472c5.73.52 7.29-6.25 4.687-20.312V-65.59c-13.542 2.083-24.22 5.468-32.03 10.156C3.905-50.226 0-43.714 0-35.904V71.91c5.73-5.21 10.677-8.594 14.844-10.157 5.73-1.562 12.24-2.343 19.53-2.343v196.875c0 11.458 1.563 17.187 4.688 17.187\"\r\n    }],\r\n    \"bounds\": {\r\n      \"x\": 0,\r\n      \"y\": 0,\r\n      \"width\": 46.35300064086914,\r\n      \"height\": 339.58197021484375\r\n    },\r\n    \"origin\": {\r\n      \"x\": 0,\r\n      \"y\": 65.58999633789062\r\n    }\r\n  },\r\n  \"CustodDescShort\": {\r\n    \"svgSrc\": \"<path d=\\\"M34.375 191.923c0 8.333 1.563 12.24 4.688 11.72 3.125-.522 4.687-7.033 4.687-19.533v-250c-13.542 2.084-24.22 5.47-32.03 10.157C3.905-50.525 0-44.015 0-36.203V71.61c5.73-5.208 10.677-8.593 14.844-10.156 5.73-1.562 12.24-2.344 19.53-2.344v132.813z\\\"/>\",\r\n    \"paths\": [{\r\n      \"type\": \"positive\",\r\n      \"data\": \"M34.375 191.923c0 8.333 1.563 12.24 4.688 11.72 3.125-.522 4.687-7.033 4.687-19.533v-250c-13.542 2.084-24.22 5.47-32.03 10.157C3.905-50.525 0-44.015 0-36.203V71.61c5.73-5.208 10.677-8.593 14.844-10.156 5.73-1.562 12.24-2.344 19.53-2.344v132.813z\"\r\n    }],\r\n    \"bounds\": {\r\n      \"x\": 0,\r\n      \"y\": 0,\r\n      \"width\": 43.75,\r\n      \"height\": 270.0530090332031\r\n    },\r\n    \"origin\": {\r\n      \"x\": 0,\r\n      \"y\": 65.88999938964844\r\n    }\r\n  },\r\n  \"CustodLong\": {\r\n    \"svgSrc\": \"<path d=\\\"M39.063-269.562c5.73-.52 7.29 6.25 4.687 20.312V69.5c-13.542-2.083-24.22-5.47-32.03-10.156C3.905 54.134 0 47.624 0 39.812V-68c5.73 5.208 10.677 8.594 14.844 10.156 5.73 1.563 12.24 2.344 19.53 2.344v-196.875c0-11.458 1.563-17.187 4.688-17.187z\\\"/>\",\r\n    \"paths\": [{\r\n      \"type\": \"positive\",\r\n      \"data\": \"M39.063-269.562c5.73-.52 7.29 6.25 4.687 20.312V69.5c-13.542-2.083-24.22-5.47-32.03-10.156C3.905 54.134 0 47.624 0 39.812V-68c5.73 5.208 10.677 8.594 14.844 10.156 5.73 1.563 12.24 2.344 19.53 2.344v-196.875c0-11.458 1.563-17.187 4.688-17.187z\"\r\n    }],\r\n    \"bounds\": {\r\n      \"x\": 0,\r\n      \"y\": 0,\r\n      \"width\": 46.35300064086914,\r\n      \"height\": 339.5820007324219\r\n    },\r\n    \"origin\": {\r\n      \"x\": 0,\r\n      \"y\": 270.0820007324219\r\n    }\r\n  },\r\n  \"CustodShort\": {\r\n    \"svgSrc\": \"<path d=\\\"M34.375-188.125c0-8.333 1.563-12.24 4.688-11.72 3.125.522 4.687 7.033 4.687 19.532v250c-13.542-2.083-24.22-5.468-32.03-10.156C3.905 54.324 0 47.813 0 40V-67.813c5.73 5.21 10.677 8.594 14.844 10.157 5.73 1.562 12.24 2.344 19.53 2.343v-132.812z\\\"/>\",\r\n    \"paths\": [{\r\n      \"type\": \"positive\",\r\n      \"data\": \"M34.375-188.125c0-8.333 1.563-12.24 4.688-11.72 3.125.522 4.687 7.033 4.687 19.532v250c-13.542-2.083-24.22-5.468-32.03-10.156C3.905 54.324 0 47.813 0 40V-67.813c5.73 5.21 10.677 8.594 14.844 10.157 5.73 1.562 12.24 2.344 19.53 2.343v-132.812z\"\r\n    }],\r\n    \"bounds\": {\r\n      \"x\": 0,\r\n      \"y\": 0,\r\n      \"width\": 43.75,\r\n      \"height\": 270.052001953125\r\n    },\r\n    \"origin\": {\r\n      \"x\": 0,\r\n      \"y\": 200.36500549316406\r\n    }\r\n  },\r\n  \"DoClef\": {\r\n    \"svgSrc\": \"<path d=\\\"M0 98.406V-97.688C0-118 5.99-134.275 17.97-146.516c11.978-12.24 27.603-18.36 46.874-18.36 10.937 0 19.53 3.126 25.78 9.376s9.376 14.583 9.376 25v107.813l-6.25-5.47c-4.167-3.645-10.287-7.42-18.36-11.327-8.072-3.907-16.796-5.86-26.17-5.86-11.46 0-21.486 4.427-30.08 13.282-8.593 8.854-12.89 19.53-12.89 32.03s4.297 23.308 12.89 32.423c8.594 9.115 18.62 13.672 30.08 13.672 9.374 0 18.098-1.822 26.17-5.468 8.073-3.646 14.193-7.292 18.36-10.938l6.25-6.25V132c0 9.896-3.125 18.1-9.375 24.61-6.25 6.51-14.844 9.765-25.78 9.765-19.272 0-34.897-6.25-46.876-18.75C5.99 135.125 0 118.72 0 98.405z\\\"/>\",\r\n    \"paths\": [{\r\n      \"type\": \"positive\",\r\n      \"data\": \"M0 98.406V-97.688C0-118 5.99-134.275 17.97-146.516c11.978-12.24 27.603-18.36 46.874-18.36 10.937 0 19.53 3.126 25.78 9.376s9.376 14.583 9.376 25v107.813l-6.25-5.47c-4.167-3.645-10.287-7.42-18.36-11.327-8.072-3.907-16.796-5.86-26.17-5.86-11.46 0-21.486 4.427-30.08 13.282-8.593 8.854-12.89 19.53-12.89 32.03s4.297 23.308 12.89 32.423c8.594 9.115 18.62 13.672 30.08 13.672 9.374 0 18.098-1.822 26.17-5.468 8.073-3.646 14.193-7.292 18.36-10.938l6.25-6.25V132c0 9.896-3.125 18.1-9.375 24.61-6.25 6.51-14.844 9.765-25.78 9.765-19.272 0-34.897-6.25-46.876-18.75C5.99 135.125 0 118.72 0 98.405z\"\r\n    }],\r\n    \"bounds\": {\r\n      \"x\": 0,\r\n      \"y\": 0,\r\n      \"width\": 100,\r\n      \"height\": 331.2510070800781\r\n    },\r\n    \"origin\": {\r\n      \"x\": 0,\r\n      \"y\": 164.87600708007812\r\n    }\r\n  },\r\n  \"FaClef\": {\r\n    \"svgSrc\": \"<path d=\\\"M85.156-32v193.75c0 9.375-1.562 14.323-4.687 14.844-1.564 0-2.605-.52-3.126-1.563-.52-1.04-.782-2.603-.78-4.686V56.28c-8.335-8.332-19.793-12.5-34.376-12.5-17.71 0-31.77 3.907-42.188 11.72V-32c0-18.23 14.193-27.344 42.578-27.344 28.385 0 42.578 9.115 42.578 27.344zM98.438 93V-92.156c0-19.27 5.73-34.896 17.187-46.875 11.458-11.98 26.562-17.97 45.313-17.97 10.937 0 19.14 2.865 24.61 8.594 5.467 5.73 8.202 13.542 8.202 23.437v103.126l-5.47-4.687c-3.645-3.647-9.374-7.293-17.186-10.94-7.813-3.645-15.886-5.467-24.22-5.468-11.978 0-22.004 4.167-30.077 12.5-8.073 8.334-12.11 18.36-12.11 30.08 0 11.717 4.037 22.004 12.11 30.858s18.1 13.28 30.078 13.28c8.333 0 16.406-1.822 24.22-5.468 7.81-3.645 13.54-7.03 17.186-10.156l5.47-5.468V125.81c0 9.896-2.865 17.84-8.594 23.83-5.73 5.988-13.802 8.983-24.22 8.983-18.75 0-33.853-6.12-45.31-18.36-11.46-12.24-17.19-27.994-17.19-47.265z\\\"/>\",\r\n    \"paths\": [{\r\n      \"type\": \"positive\",\r\n      \"data\": \"M85.156-32v193.75c0 9.375-1.562 14.323-4.687 14.844-1.564 0-2.605-.52-3.126-1.563-.52-1.04-.782-2.603-.78-4.686V56.28c-8.335-8.332-19.793-12.5-34.376-12.5-17.71 0-31.77 3.907-42.188 11.72V-32c0-18.23 14.193-27.344 42.578-27.344 28.385 0 42.578 9.115 42.578 27.344zM98.438 93V-92.156c0-19.27 5.73-34.896 17.187-46.875 11.458-11.98 26.562-17.97 45.313-17.97 10.937 0 19.14 2.865 24.61 8.594 5.467 5.73 8.202 13.542 8.202 23.437v103.126l-5.47-4.687c-3.645-3.647-9.374-7.293-17.186-10.94-7.813-3.645-15.886-5.467-24.22-5.468-11.978 0-22.004 4.167-30.077 12.5-8.073 8.334-12.11 18.36-12.11 30.08 0 11.717 4.037 22.004 12.11 30.858s18.1 13.28 30.078 13.28c8.333 0 16.406-1.822 24.22-5.468 7.81-3.645 13.54-7.03 17.186-10.156l5.47-5.468V125.81c0 9.896-2.865 17.84-8.594 23.83-5.73 5.988-13.802 8.983-24.22 8.983-18.75 0-33.853-6.12-45.31-18.36-11.46-12.24-17.19-27.994-17.19-47.265z\"\r\n    }],\r\n    \"bounds\": {\r\n      \"x\": 0,\r\n      \"y\": 0,\r\n      \"width\": 193.75201416015625,\r\n      \"height\": 333.5950012207031\r\n    },\r\n    \"origin\": {\r\n      \"x\": 0.001003265380859375,\r\n      \"y\": 157.00100708007812\r\n    }\r\n  },\r\n  \"Flat\": {\r\n    \"svgSrc\": \"<path d=\\\"M7.813-204.406c4.166 0 6.25 5.208 6.25 15.625L12.5-10.657C33.854 13.302 54.167 25.28 73.438 25.28c9.374 0 14.062-4.686 14.062-14.06 0-6.25-1.042-11.72-3.125-16.407-2.083-4.688-7.03-9.766-14.844-15.235-7.81-5.47-13.02-8.984-15.624-10.547L27.344-45.81V-80.97c17.187 0 33.073 4.82 47.656 14.454C89.583-56.88 96.875-47.376 96.875-38c0 67.708-.26 101.562-.78 101.563-38.543 0-69.532-12.24-92.97-36.72C0-52.322-1.042-123.936 0-188c0-10.937 2.604-16.406 7.813-16.406z\\\"/>\",\r\n    \"paths\": [{\r\n      \"type\": \"positive\",\r\n      \"data\": \"M7.813-204.406c4.166 0 6.25 5.208 6.25 15.625L12.5-10.657C33.854 13.302 54.167 25.28 73.438 25.28c9.374 0 14.062-4.686 14.062-14.06 0-6.25-1.042-11.72-3.125-16.407-2.083-4.688-7.03-9.766-14.844-15.235-7.81-5.47-13.02-8.984-15.624-10.547L27.344-45.81V-80.97c17.187 0 33.073 4.82 47.656 14.454C89.583-56.88 96.875-47.376 96.875-38c0 67.708-.26 101.562-.78 101.563-38.543 0-69.532-12.24-92.97-36.72C0-52.322-1.042-123.936 0-188c0-10.937 2.604-16.406 7.813-16.406z\"\r\n    }],\r\n    \"bounds\": {\r\n      \"x\": 0,\r\n      \"y\": 0,\r\n      \"width\": 97.91699981689453,\r\n      \"height\": 267.968994140625\r\n    },\r\n    \"origin\": {\r\n      \"x\": 1.0420000553131104,\r\n      \"y\": 204.406005859375\r\n    }\r\n  },\r\n  \"Mora\": {\r\n    \"svgSrc\": \"<path d=\\\"M47.478-24c6.957 0 12.793 2.288 17.49 6.883C69.662-12.52 72-6.904 72-.267c0 6.64-2.337 12.352-7.033 17.118C60.27 21.618 54.435 24 47.477 24c-6.26 0-11.748-2.383-16.444-7.15C26.337 12.086 24 6.374 24-.265c0-6.638 2.337-12.255 7.033-16.85C35.73-21.713 41.217-24 47.478-24z\\\"/>\",\r\n    \"paths\": [{\r\n      \"type\": \"positive\",\r\n      \"data\": \"M47.478-24c6.957 0 12.793 2.288 17.49 6.883C69.662-12.52 72-6.904 72-.267c0 6.64-2.337 12.352-7.033 17.118C60.27 21.618 54.435 24 47.477 24c-6.26 0-11.748-2.383-16.444-7.15C26.337 12.086 24 6.374 24-.265c0-6.638 2.337-12.255 7.033-16.85C35.73-21.713 41.217-24 47.478-24z\"\r\n    }],\r\n    \"bounds\": {\r\n      \"x\": 0,\r\n      \"y\": 0,\r\n      \"width\": 48,\r\n      \"height\": 48\r\n    },\r\n    \"origin\": {\r\n      \"x\": -24,\r\n      \"y\": 24\r\n    }\r\n  },\r\n  \"Natural\": {\r\n    \"svgSrc\": \"<path d=\\\"M7.906-166.563c-2.864 0-5.614.52-8.218 1.563v13.28l.78 56.25.782 78.907v85.157c.52 3.646 2.604 5.73 6.25 6.25l23.438-3.906 23.437-3.907v29.69c0 42.186-.26 63.54-.78 64.06l6.25 2.345c1.04.52 2.082.78 3.124.78 2.603 0 4.947-1.3 7.03-3.905L67.656-71.25c-.52-2.604-2.083-3.906-4.687-3.906-7.814 0-17.19 1.04-28.126 3.125l-19.53 3.124.78-38.28V-165c-2.604-1.042-5.323-1.562-8.188-1.563zM55.938-40v71.875l-41.407 7.03c0-48.436.262-72.655.783-72.655L55.938-40z\\\"/>\",\r\n    \"paths\": [{\r\n      \"type\": \"positive\",\r\n      \"data\": \"M7.906-166.563c-2.864 0-5.614.52-8.218 1.563v13.28l.78 56.25.782 78.907v85.157c.52 3.646 2.604 5.73 6.25 6.25l23.438-3.906 23.437-3.907v29.69c0 42.186-.26 63.54-.78 64.06l6.25 2.345c1.04.52 2.082.78 3.124.78 2.603 0 4.947-1.3 7.03-3.905L67.656-71.25c-.52-2.604-2.083-3.906-4.687-3.906-7.814 0-17.19 1.04-28.126 3.125l-19.53 3.124.78-38.28V-165c-2.604-1.042-5.323-1.562-8.188-1.563zM55.938-40v71.875l-41.407 7.03c0-48.436.262-72.655.783-72.655L55.938-40z\"\r\n    }],\r\n    \"bounds\": {\r\n      \"x\": 0,\r\n      \"y\": 0,\r\n      \"width\": 70.31100463867188,\r\n      \"height\": 330.468994140625\r\n    },\r\n    \"origin\": {\r\n      \"x\": 0.3120002746582031,\r\n      \"y\": 166.56300354003906\r\n    }\r\n  },\r\n  \"OriscusAsc\": {\r\n    \"svgSrc\": \"<path d=\\\"M50 30.25c0 12.5-3.125 21.354-9.375 26.562-3.125 2.605-7.813 3.907-14.063 3.907-3.125 0-5.99-.522-8.593-1.564-2.605-1.04-5.6-2.474-8.986-4.297C5.6 53.035 2.734 51.603.39 50.56c-2.343-1.04-5.338-2.474-8.984-4.296-3.646-1.823-6.77-3.256-9.375-4.297-2.603-1.043-5.468-1.564-8.593-1.564-6.25 0-10.937 1.563-14.062 4.688C-46.875 50.824-50 59.677-50 71.656v-106.25c0-13.02 3.125-21.875 9.375-26.562 3.125-2.604 7.813-3.906 14.063-3.907 3.125 0 5.99.52 8.593 1.563 2.605 1.042 5.73 2.474 9.376 4.297 3.646 1.823 6.51 2.995 8.594 3.516l10.938 5.468c6.25 3.126 11.458 4.69 15.624 4.69 6.25 0 10.938-1.564 14.063-4.69C46.875-55.426 50-64.02 50-76V30.25z\\\"/>\",\r\n    \"paths\": [{\r\n      \"type\": \"positive\",\r\n      \"data\": \"M50 30.25c0 12.5-3.125 21.354-9.375 26.562-3.125 2.605-7.813 3.907-14.063 3.907-3.125 0-5.99-.522-8.593-1.564-2.605-1.04-5.6-2.474-8.986-4.297C5.6 53.035 2.734 51.603.39 50.56c-2.343-1.04-5.338-2.474-8.984-4.296-3.646-1.823-6.77-3.256-9.375-4.297-2.603-1.043-5.468-1.564-8.593-1.564-6.25 0-10.937 1.563-14.062 4.688C-46.875 50.824-50 59.677-50 71.656v-106.25c0-13.02 3.125-21.875 9.375-26.562 3.125-2.604 7.813-3.906 14.063-3.907 3.125 0 5.99.52 8.593 1.563 2.605 1.042 5.73 2.474 9.376 4.297 3.646 1.823 6.51 2.995 8.594 3.516l10.938 5.468c6.25 3.126 11.458 4.69 15.624 4.69 6.25 0 10.938-1.564 14.063-4.69C46.875-55.426 50-64.02 50-76V30.25z\"\r\n    }],\r\n    \"bounds\": {\r\n      \"x\": 0,\r\n      \"y\": 0,\r\n      \"width\": 100,\r\n      \"height\": 147.656005859375\r\n    },\r\n    \"origin\": {\r\n      \"x\": 50,\r\n      \"y\": 76\r\n    }\r\n  },\r\n  \"OriscusDes\": {\r\n    \"svgSrc\": \"<path d=\\\"M-50 30.844v-106.25c0 11.458 3.125 20.052 9.375 25.78 3.125 3.126 7.813 4.69 14.063 4.688 4.687 0 13.41-3.255 26.17-9.765 12.762-6.51 21.746-9.766 26.954-9.766 6.25 0 10.938 1.303 14.063 3.907C46.875-55.874 50-47.02 50-34V72.25c0-11.98-3.125-20.833-9.375-26.563C37.5 42.563 32.812 41 26.562 41 21.875 41 13.023 44.385 0 51.156c-4.167 2.604-8.594 4.948-13.28 7.032-4.69 2.083-9.116 3.124-13.283 3.124-6.25 0-10.937-1.302-14.062-3.906C-46.875 52.198-50 43.344-50 30.844z\\\"/>\",\r\n    \"paths\": [{\r\n      \"type\": \"positive\",\r\n      \"data\": \"M-50 30.844v-106.25c0 11.458 3.125 20.052 9.375 25.78 3.125 3.126 7.813 4.69 14.063 4.688 4.687 0 13.41-3.255 26.17-9.765 12.762-6.51 21.746-9.766 26.954-9.766 6.25 0 10.938 1.303 14.063 3.907C46.875-55.874 50-47.02 50-34V72.25c0-11.98-3.125-20.833-9.375-26.563C37.5 42.563 32.812 41 26.562 41 21.875 41 13.023 44.385 0 51.156c-4.167 2.604-8.594 4.948-13.28 7.032-4.69 2.083-9.116 3.124-13.283 3.124-6.25 0-10.937-1.302-14.062-3.906C-46.875 52.198-50 43.344-50 30.844z\"\r\n    }],\r\n    \"bounds\": {\r\n      \"x\": 0,\r\n      \"y\": 0,\r\n      \"width\": 100,\r\n      \"height\": 147.656005859375\r\n    },\r\n    \"origin\": {\r\n      \"x\": 50,\r\n      \"y\": 75.40599822998047\r\n    }\r\n  },\r\n  \"PodatusLower\": {\r\n    \"svgSrc\": \"<path d=\\\"M-4.688-30.28c22.396 0 34.636-.262 36.72-.782 5.728-1.563 8.593-5.21 8.593-10.938H50v97.656c0 2.604-1.302 4.167-3.906 4.688-5.21.52-21.355.78-48.438.78-23.958 0-38.54-.26-43.75-.78-2.604 0-3.906-1.302-3.906-3.906v-82.032c0-3.646 1.302-5.468 3.906-5.468h2.344c2.604.52 15.625.78 39.063.78z\\\"/>\",\r\n    \"paths\": [{\r\n      \"type\": \"positive\",\r\n      \"data\": \"M-4.688-30.28c22.396 0 34.636-.262 36.72-.782 5.728-1.563 8.593-5.21 8.593-10.938H50v97.656c0 2.604-1.302 4.167-3.906 4.688-5.21.52-21.355.78-48.438.78-23.958 0-38.54-.26-43.75-.78-2.604 0-3.906-1.302-3.906-3.906v-82.032c0-3.646 1.302-5.468 3.906-5.468h2.344c2.604.52 15.625.78 39.063.78z\"\r\n    }],\r\n    \"bounds\": {\r\n      \"x\": 0,\r\n      \"y\": 0,\r\n      \"width\": 100,\r\n      \"height\": 103.12399291992188\r\n    },\r\n    \"origin\": {\r\n      \"x\": 50,\r\n      \"y\": 42\r\n    }\r\n  },\r\n  \"PodatusUpper\": {\r\n    \"svgSrc\": \"<path d=\\\"M-46.094-63.78c13.542 0 24.61 2.473 33.203 7.42C-4.298-51.41 0-43.99 0-34.093V62h-9.375c0-10.938-2.604-19.14-7.812-24.61-5.21-5.468-14.844-8.203-28.907-8.202-18.23 0-33.333 4.166-45.312 12.5v-75.782c0-19.79 15.104-29.687 45.312-29.687z\\\"/>\",\r\n    \"paths\": [{\r\n      \"type\": \"positive\",\r\n      \"data\": \"M-46.094-63.78c13.542 0 24.61 2.473 33.203 7.42C-4.298-51.41 0-43.99 0-34.093V62h-9.375c0-10.938-2.604-19.14-7.812-24.61-5.21-5.468-14.844-8.203-28.907-8.202-18.23 0-33.333 4.166-45.312 12.5v-75.782c0-19.79 15.104-29.687 45.312-29.687z\"\r\n    }],\r\n    \"bounds\": {\r\n      \"x\": 0,\r\n      \"y\": 0,\r\n      \"width\": 91.406005859375,\r\n      \"height\": 125.78099822998047\r\n    },\r\n    \"origin\": {\r\n      \"x\": 91.406005859375,\r\n      \"y\": 63.78099822998047\r\n    }\r\n  },\r\n  \"Porrectus1\": {\r\n    \"svgSrc\": \"<path d=\\\"M233.594 162.875c-58.855 0-107.032-6.25-144.53-18.75C34.895 125.895-11.46 99.855-50 66V-52.75C-21.354-24.625 26.302 6.885 92.97 41.78 123.697 57.928 163.54 66 212.5 66c21.354 0 34.635-9.896 39.844-29.688V151.94c0 7.29-6.25 10.937-18.75 10.937z\\\"/>\",\r\n    \"paths\": [{\r\n      \"type\": \"positive\",\r\n      \"data\": \"M233.594 162.875c-58.855 0-107.032-6.25-144.53-18.75C34.895 125.895-11.46 99.855-50 66V-52.75C-21.354-24.625 26.302 6.885 92.97 41.78 123.697 57.928 163.54 66 212.5 66c21.354 0 34.635-9.896 39.844-29.688V151.94c0 7.29-6.25 10.937-18.75 10.937z\"\r\n    }],\r\n    \"bounds\": {\r\n      \"x\": 0,\r\n      \"y\": 0,\r\n      \"width\": 302.343994140625,\r\n      \"height\": 215.6269989013672\r\n    },\r\n    \"origin\": {\r\n      \"x\": 50,\r\n      \"y\": 52.75\r\n    }\r\n  },\r\n  \"Porrectus2\": {\r\n    \"svgSrc\": \"<path d=\\\"M309.375 259.375c-50.52 0-110.938-22.396-181.25-67.188C48.437 141.667-10.938 94.272-50 50V-68.75C0-3.125 60.417 52.083 131.25 96.875c58.333 36.98 110.677 58.854 157.03 65.625h7.033c16.145 0 26.822-9.896 32.03-29.688v114.844c0 7.812-5.99 11.72-17.968 11.72z\\\"/>\",\r\n    \"paths\": [{\r\n      \"type\": \"positive\",\r\n      \"data\": \"M309.375 259.375c-50.52 0-110.938-22.396-181.25-67.188C48.437 141.667-10.938 94.272-50 50V-68.75C0-3.125 60.417 52.083 131.25 96.875c58.333 36.98 110.677 58.854 157.03 65.625h7.033c16.145 0 26.822-9.896 32.03-29.688v114.844c0 7.812-5.99 11.72-17.968 11.72z\"\r\n    }],\r\n    \"bounds\": {\r\n      \"x\": 0,\r\n      \"y\": 0,\r\n      \"width\": 377.3429870605469,\r\n      \"height\": 328.1260070800781\r\n    },\r\n    \"origin\": {\r\n      \"x\": 50,\r\n      \"y\": 68.75\r\n    }\r\n  },\r\n  \"Porrectus3\": {\r\n    \"svgSrc\": \"<path d=\\\"M309.375 355.78c-48.96-16.666-109.115-55.468-180.47-116.405C79.428 198.23 19.793 134.687-50 48.75V-70C20 40 94.104 103.79 135.25 148.063 190 200 230 230 288.28 258.906c4.168 2.083 8.334 3.125 12.5 3.125 12.5 0 21.355-10.937 26.564-32.81v114.06c0 9.376-3.386 14.063-10.156 14.064-2.084 0-4.688-.522-7.813-1.563z\\\"/>\",\r\n    \"paths\": [{\r\n      \"type\": \"positive\",\r\n      \"data\": \"M309.375 355.78c-48.96-16.666-109.115-55.468-180.47-116.405C79.428 198.23 19.793 134.687-50 48.75V-70C20 40 94.104 103.79 135.25 148.063 190 200 230 230 288.28 258.906c4.168 2.083 8.334 3.125 12.5 3.125 12.5 0 21.355-10.937 26.564-32.81v114.06c0 9.376-3.386 14.063-10.156 14.064-2.084 0-4.688-.522-7.813-1.563z\"\r\n    }],\r\n    \"bounds\": {\r\n      \"x\": 0,\r\n      \"y\": 0,\r\n      \"width\": 377.343994140625,\r\n      \"height\": 427.3450012207031\r\n    },\r\n    \"origin\": {\r\n      \"x\": 50,\r\n      \"y\": 70\r\n    }\r\n  },\r\n  \"Porrectus4\": {\r\n    \"svgSrc\": \"<path d=\\\"M350 453.438c-52.754-22.397-120-77.345-201.74-164.844C90.87 227.656 24.784 147.708-50 48.75V-70C-8.84-1.25 58.406 86.51 151.74 193.28c60.868 69.793 119.13 124.22 174.782 163.282 5.797 3.646 11.014 5.47 15.652 5.47 12.173 0 21.45-11.72 27.826-35.157V441.72c0 9.373-3.19 14.06-9.565 14.06-2.9 0-6.377-.78-10.435-2.342z\\\"/>\",\r\n    \"paths\": [{\r\n      \"type\": \"positive\",\r\n      \"data\": \"M350 453.438c-52.754-22.397-120-77.345-201.74-164.844C90.87 227.656 24.784 147.708-50 48.75V-70C-8.84-1.25 58.406 86.51 151.74 193.28c60.868 69.793 119.13 124.22 174.782 163.282 5.797 3.646 11.014 5.47 15.652 5.47 12.173 0 21.45-11.72 27.826-35.157V441.72c0 9.373-3.19 14.06-9.565 14.06-2.9 0-6.377-.78-10.435-2.342z\"\r\n    }],\r\n    \"bounds\": {\r\n      \"x\": 0,\r\n      \"y\": 0,\r\n      \"width\": 420,\r\n      \"height\": 525.780029296875\r\n    },\r\n    \"origin\": {\r\n      \"x\": 50,\r\n      \"y\": 70\r\n    }\r\n  },\r\n  \"PunctumCavum\": {\r\n    \"svgSrc\": \"<path d=\\\"M0-60.906c33.333 0 50 9.635 50 28.906v94.53C39.062 51.595 22.396 46.126 0 46.126s-39.063 5.47-50 16.406V-32c0-19.27 16.667-28.906 50-28.906z\\\"/><path fill=\\\"#fff\\\" d=\\\"M.08-42.56c9.585.206 20.126.53 27.954 6.822 4.96 3.9 4.71 10.792 4.574 16.482v51.278C22.09 27.066 7.283 26.072.168 26.01c-7.72.23-21.895.935-32.616 4.674.04-19.197-.083-38.395.064-57.59.567-7.5 7.834-12.33 14.62-13.774 5.818-1.498 11.857-1.86 17.844-1.88z\\\"/>\",\r\n    \"paths\": [{\r\n      \"type\": \"positive\",\r\n      \"data\": \"M0-60.906c33.333 0 50 9.635 50 28.906v94.53C39.062 51.595 22.396 46.126 0 46.126s-39.063 5.47-50 16.406V-32c0-19.27 16.667-28.906 50-28.906z\"\r\n    },\r\n    {\r\n      \"type\": \"negative\",\r\n      \"data\": \"M.08-42.56c9.585.206 20.126.53 27.954 6.822 4.96 3.9 4.71 10.792 4.574 16.482v51.278C22.09 27.066 7.283 26.072.168 26.01c-7.72.23-21.895.935-32.616 4.674.04-19.197-.083-38.395.064-57.59.567-7.5 7.834-12.33 14.62-13.774 5.818-1.498 11.857-1.86 17.844-1.88z\"\r\n    }],\r\n    \"bounds\": {\r\n      \"x\": 0,\r\n      \"y\": 0,\r\n      \"width\": 100,\r\n      \"height\": 123.43799591064453\r\n    },\r\n    \"origin\": {\r\n      \"x\": 50,\r\n      \"y\": 60.90599822998047\r\n    }\r\n  },\r\n  \"PunctumCuadratum\": {\r\n    \"svgSrc\": \"<path d=\\\"M0-60.906c33.333 0 50 9.635 50 28.906v94.53C39.062 51.595 22.396 46.126 0 46.126s-39.063 5.47-50 16.406V-32c0-19.27 16.667-28.906 50-28.906z\\\"/>\",\r\n    \"paths\": [{\r\n      \"type\": \"positive\",\r\n      \"data\": \"M0-60.906c33.333 0 50 9.635 50 28.906v94.53C39.062 51.595 22.396 46.126 0 46.126s-39.063 5.47-50 16.406V-32c0-19.27 16.667-28.906 50-28.906z\"\r\n    }],\r\n    \"bounds\": {\r\n      \"x\": 0,\r\n      \"y\": 0,\r\n      \"width\": 100,\r\n      \"height\": 123.43799591064453\r\n    },\r\n    \"origin\": {\r\n      \"x\": 50,\r\n      \"y\": 60.90599822998047\r\n    }\r\n  },\r\n  \"PunctumCuadratumAscLiquescent\": {\r\n    \"svgSrc\": \"<path d=\\\"M-50 43.688V-61c4.167 7.292 12.76 10.938 25.78 10.938 9.376 0 20.053-1.563 32.032-4.688C31.773-60.48 45.833-71.677 50-88.344v117.97C43.75 42.645 32.812 51.5 17.187 56.186-.52 61.398-15.886 64-28.906 64-42.97 64-50 57.23-50 43.687z\\\"/>\",\r\n    \"paths\": [{\r\n      \"type\": \"positive\",\r\n      \"data\": \"M-50 43.688V-61c4.167 7.292 12.76 10.938 25.78 10.938 9.376 0 20.053-1.563 32.032-4.688C31.773-60.48 45.833-71.677 50-88.344v117.97C43.75 42.645 32.812 51.5 17.187 56.186-.52 61.398-15.886 64-28.906 64-42.97 64-50 57.23-50 43.687z\"\r\n    }],\r\n    \"bounds\": {\r\n      \"x\": 0,\r\n      \"y\": 0,\r\n      \"width\": 100,\r\n      \"height\": 152.343994140625\r\n    },\r\n    \"origin\": {\r\n      \"x\": 50,\r\n      \"y\": 88.34400177001953\r\n    }\r\n  },\r\n  \"PunctumCuadratumDesLiquescent\": {\r\n    \"svgSrc\": \"<path d=\\\"M-50-56.03c0-13.022 7.03-19.532 21.094-19.532 13.02 0 28.385 2.604 46.093 7.812C32.813-63.583 43.75-54.73 50-41.187V76C45.833 59.854 31.77 48.656 7.812 42.406c-11.98-3.125-22.656-4.687-32.03-4.687-13.022 0-21.615 3.905-25.782 11.718v-105.47z\\\"/>\",\r\n    \"paths\": [{\r\n      \"type\": \"positive\",\r\n      \"data\": \"M-50-56.03c0-13.022 7.03-19.532 21.094-19.532 13.02 0 28.385 2.604 46.093 7.812C32.813-63.583 43.75-54.73 50-41.187V76C45.833 59.854 31.77 48.656 7.812 42.406c-11.98-3.125-22.656-4.687-32.03-4.687-13.022 0-21.615 3.905-25.782 11.718v-105.47z\"\r\n    }],\r\n    \"bounds\": {\r\n      \"x\": 0,\r\n      \"y\": 0,\r\n      \"width\": 100,\r\n      \"height\": 151.56199645996094\r\n    },\r\n    \"origin\": {\r\n      \"x\": 50,\r\n      \"y\": 75.56199645996094\r\n    }\r\n  },\r\n  \"PunctumInclinatum\": {\r\n    \"svgSrc\": \"<path d=\\\"M0-75.78L50 0 0 75-50 0 0-75.78z\\\"/>\",\r\n    \"paths\": [{\r\n      \"type\": \"positive\",\r\n      \"data\": \"M0-75.78L50 0 0 75-50 0 0-75.78z\"\r\n    }],\r\n    \"bounds\": {\r\n      \"x\": 0,\r\n      \"y\": 0,\r\n      \"width\": 100,\r\n      \"height\": 150.77999877929688\r\n    },\r\n    \"origin\": {\r\n      \"x\": 50,\r\n      \"y\": 75.77999877929688\r\n    }\r\n  },\r\n  \"Quilisma\": {\r\n    \"svgSrc\": \"<path d=\\\"M-50 34.938V-51c5.73 20.833 13.02 31.25 21.875 31.25 7.813 0 12.5-15.625 14.063-46.875 3.645 12.5 6.9 21.224 9.765 26.172s6.9 7.422 12.11 7.422c5.208 0 9.374-14.324 12.5-42.97 5.73 22.917 10.677 34.375 14.843 34.375 5.73 0 10.677-15.885 14.844-47.656v100c0 17.707-3.125 26.56-9.375 26.56-4.688 0-9.115-5.988-13.28-17.968-2.085 21.875-8.074 32.813-17.97 32.813-7.813 0-16.146-7.292-25-21.875-4.688 20.312-10.677 30.47-17.97 30.47-5.207 0-9.244-2.605-12.108-7.814C-48.568 47.698-50 41.708-50 34.938z\\\"/>\",\r\n    \"paths\": [{\r\n      \"type\": \"positive\",\r\n      \"data\": \"M-50 34.938V-51c5.73 20.833 13.02 31.25 21.875 31.25 7.813 0 12.5-15.625 14.063-46.875 3.645 12.5 6.9 21.224 9.765 26.172s6.9 7.422 12.11 7.422c5.208 0 9.374-14.324 12.5-42.97 5.73 22.917 10.677 34.375 14.843 34.375 5.73 0 10.677-15.885 14.844-47.656v100c0 17.707-3.125 26.56-9.375 26.56-4.688 0-9.115-5.988-13.28-17.968-2.085 21.875-8.074 32.813-17.97 32.813-7.813 0-16.146-7.292-25-21.875-4.688 20.312-10.677 30.47-17.97 30.47-5.207 0-9.244-2.605-12.108-7.814C-48.568 47.698-50 41.708-50 34.938z\"\r\n    }],\r\n    \"bounds\": {\r\n      \"x\": 0,\r\n      \"y\": 0,\r\n      \"width\": 100,\r\n      \"height\": 150\r\n    },\r\n    \"origin\": {\r\n      \"x\": 50,\r\n      \"y\": 89.28199768066406\r\n    }\r\n  },\r\n  \"TerminatingAscLiquescent\": {\r\n    \"svgSrc\": \"<path d=\\\"M-9.375 40.22c0-11.98-4.948-17.97-14.844-17.97-10.936 0-19.53 3.646-25.78 10.938v-53.126c0-6.77 2.604-12.76 7.813-17.968 5.208-5.21 10.677-8.594 16.406-10.157 2.603-.52 5.207-.78 7.81-.78 3.647 0 7.032.78 10.157 2.343C-2.603-43.896 0-39.73 0-34V73.03h-9.375V40.22z\\\"/>\",\r\n    \"paths\": [{\r\n      \"type\": \"positive\",\r\n      \"data\": \"M-9.375 40.22c0-11.98-4.948-17.97-14.844-17.97-10.936 0-19.53 3.646-25.78 10.938v-53.126c0-6.77 2.604-12.76 7.813-17.968 5.208-5.21 10.677-8.594 16.406-10.157 2.603-.52 5.207-.78 7.81-.78 3.647 0 7.032.78 10.157 2.343C-2.603-43.896 0-39.73 0-34V73.03h-9.375V40.22z\"\r\n    }],\r\n    \"bounds\": {\r\n      \"x\": 0,\r\n      \"y\": 0,\r\n      \"width\": 49.999000549316406,\r\n      \"height\": 121.87299346923828\r\n    },\r\n    \"origin\": {\r\n      \"x\": 49.999000549316406,\r\n      \"y\": 48.842994689941406\r\n    }\r\n  },\r\n  \"TerminatingDesLiquescent\": {\r\n    \"svgSrc\": \"<path d=\\\"M-9.375-48.156V-80.97H0V26.845c0 5.73-2.604 9.896-7.813 12.5-3.125 1.562-6.51 2.343-10.156 2.343-2.603 0-5.207-.26-7.81-.78-5.73-1.563-11.2-4.95-16.407-10.157C-47.398 25.542-50 19.292-50 12v-52.344c6.25 7.292 14.844 10.938 25.78 10.938 9.897 0 14.845-6.25 14.845-18.75z\\\"/>\",\r\n    \"paths\": [{\r\n      \"type\": \"positive\",\r\n      \"data\": \"M-9.375-48.156V-80.97H0V26.845c0 5.73-2.604 9.896-7.813 12.5-3.125 1.562-6.51 2.343-10.156 2.343-2.603 0-5.207-.26-7.81-.78-5.73-1.563-11.2-4.95-16.407-10.157C-47.398 25.542-50 19.292-50 12v-52.344c6.25 7.292 14.844 10.938 25.78 10.938 9.897 0 14.845-6.25 14.845-18.75z\"\r\n    }],\r\n    \"bounds\": {\r\n      \"x\": 0,\r\n      \"y\": 0,\r\n      \"width\": 50,\r\n      \"height\": 122.65800476074219\r\n    },\r\n    \"origin\": {\r\n      \"x\": 50,\r\n      \"y\": 80.97000122070312\r\n    }\r\n  },\r\n  \"VerticalEpisemaAbove\": {\r\n    \"svgSrc\": \"<path d=\\\"M-8-80H8L4 0h-8l-4-80z\\\"/>\",\r\n    \"paths\": [{\r\n      \"type\": \"positive\",\r\n      \"data\": \"M-8-80H8L4 0h-8l-4-80z\"\r\n    }],\r\n    \"bounds\": {\r\n      \"x\": 0,\r\n      \"y\": 0,\r\n      \"width\": 16,\r\n      \"height\": 80\r\n    },\r\n    \"origin\": {\r\n      \"x\": 8,\r\n      \"y\": 80\r\n    }\r\n  },\r\n  \"VerticalEpisemaBelow\": {\r\n    \"svgSrc\": \"<path d=\\\"M-8 80H8L4 0h-8l-4 80z\\\"/>\",\r\n    \"paths\": [{\r\n      \"type\": \"positive\",\r\n      \"data\": \"M-8 80H8L4 0h-8l-4 80z\"\r\n    }],\r\n    \"bounds\": {\r\n      \"x\": 0,\r\n      \"y\": 0,\r\n      \"width\": 16,\r\n      \"height\": 80\r\n    },\r\n    \"origin\": {\r\n      \"x\": 8,\r\n      \"y\": 0\r\n    }\r\n  },\r\n  \"VirgaLong\": {\r\n    \"svgSrc\": \"<path d=\\\"M50-38v285.156c0 6.77-2.344 10.937-7.03 12.5-1.564 0-2.605-.78-3.126-2.344-.52-1.562-.782-10.156-.782-25.78V54.186C29.168 45.334 16.146 40.907 0 40.907c-22.917 0-39.583 5.208-50 15.624V-38c0-19.27 16.667-28.906 50-28.906S50-57.27 50-38z\\\"/>\",\r\n    \"paths\": [{\r\n      \"type\": \"positive\",\r\n      \"data\": \"M50-38v285.156c0 6.77-2.344 10.937-7.03 12.5-1.564 0-2.605-.78-3.126-2.344-.52-1.562-.782-10.156-.782-25.78V54.186C29.168 45.334 16.146 40.907 0 40.907c-22.917 0-39.583 5.208-50 15.624V-38c0-19.27 16.667-28.906 50-28.906S50-57.27 50-38z\"\r\n    }],\r\n    \"bounds\": {\r\n      \"x\": 0,\r\n      \"y\": 0,\r\n      \"width\": 100,\r\n      \"height\": 326.56201171875\r\n    },\r\n    \"origin\": {\r\n      \"x\": 50,\r\n      \"y\": 66.90599822998047\r\n    }\r\n  },\r\n  \"VirgaShort\": {\r\n    \"svgSrc\": \"<path d=\\\"M50-38v211.72c0 7.29-2.344 11.457-7.03 12.5-1.564 0-2.606-.783-3.126-2.345-.52-1.563-.782-10.156-.782-25.78V54.187C29.167 45.332 16.146 40.906 0 40.906c-22.917 0-39.583 5.21-50 15.625V-38c0-19.27 16.667-28.906 50-28.906S50-57.27 50-38z\\\"/>\",\r\n    \"paths\": [{\r\n      \"type\": \"positive\",\r\n      \"data\": \"M50-38v211.72c0 7.29-2.344 11.457-7.03 12.5-1.564 0-2.606-.783-3.126-2.345-.52-1.563-.782-10.156-.782-25.78V54.187C29.167 45.332 16.146 40.906 0 40.906c-22.917 0-39.583 5.21-50 15.625V-38c0-19.27 16.667-28.906 50-28.906S50-57.27 50-38z\"\r\n    }],\r\n    \"bounds\": {\r\n      \"x\": 0,\r\n      \"y\": 0,\r\n      \"width\": 100,\r\n      \"height\": 253.12600708007812\r\n    },\r\n    \"origin\": {\r\n      \"x\": 50,\r\n      \"y\": 66.90599822998047\r\n    }\r\n  },\r\n  \"Virgula\": {\r\n    \"svgSrc\": \"<path d=\\\"M8.178-55.66c0-22.137 12.092-33.2 36.287-33.2 11.835 0 23.53 5.66 35.108 16.98C91.15-60.547 96.94-41.766 96.94-15.534c0 53.515-31.646 87.487-94.937 101.895-2.048-2.06-3.077-5.146-3.077-9.273 0-1.03.247-1.8.76-2.316 42.71-19.027 64.075-41.678 64.075-67.92 0-11.322-2.325-20.326-6.945-27.016-4.62-6.69-9.52-11.052-14.676-13.11-5.147-2.048-11.836-3.85-20.07-5.403C12.81-39.707 8.18-45.37 8.18-55.66z\\\"/>\",\r\n    \"paths\": [{\r\n      \"type\": \"positive\",\r\n      \"data\": \"M8.178-55.66c0-22.137 12.092-33.2 36.287-33.2 11.835 0 23.53 5.66 35.108 16.98C91.15-60.547 96.94-41.766 96.94-15.534c0 53.515-31.646 87.487-94.937 101.895-2.048-2.06-3.077-5.146-3.077-9.273 0-1.03.247-1.8.76-2.316 42.71-19.027 64.075-41.678 64.075-67.92 0-11.322-2.325-20.326-6.945-27.016-4.62-6.69-9.52-11.052-14.676-13.11-5.147-2.048-11.836-3.85-20.07-5.403C12.81-39.707 8.18-45.37 8.18-55.66z\"\r\n    }],\r\n    \"bounds\": {\r\n      \"x\": 0,\r\n      \"y\": 0,\r\n      \"width\": 98.01399993896484,\r\n      \"height\": 175.2209930419922\r\n    },\r\n    \"origin\": {\r\n      \"x\": 1.0739939212799072,\r\n      \"y\": 88.86000061035156\r\n    }\r\n  }\r\n};\r\n\r\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/Exsurge.Glyphs.js\n **/","//\r\n// Author(s):\r\n// Fr. Matthew Spencer, OSJ <mspencer@osjusa.org>\r\n//\r\n// Copyright (c) 2008-2016 Fr. Matthew Spencer, OSJ\r\n//\r\n// Permission is hereby granted, free of charge, to any person obtaining a copy\r\n// of this software and associated documentation files (the \"Software\"), to deal\r\n// in the Software without restriction, including without limitation the rights\r\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\n// copies of the Software, and to permit persons to whom the Software is\r\n// furnished to do so, subject to the following conditions:\r\n//\r\n// The above copyright notice and this permission notice shall be included in\r\n// all copies or substantial portions of the Software.\r\n//\r\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n// THE SOFTWARE.\r\n//\r\n\r\nimport { Units, Pitch, Point, Rect, Margins, Size, Step, MarkingPositionHint } from './Exsurge.Core'\r\nimport { Glyphs } from './Exsurge.Glyphs'\r\nimport { Latin } from './Exsurge.Text'\r\n\r\n\r\nvar __syllableConnector = \"-\";\r\n\r\nexport let GlyphCode = {\r\n\r\n  None: \"None\",\r\n\r\n  AcuteAccent: \"AcuteAccent\",\r\n  Apostropha: \"Apostropha\",\r\n  //  ApostrophaLiquescent: \"ApostrophaLiquescent\",\r\n\r\n  BeginningAscLiquescent: \"BeginningAscLiquescent\",\r\n  BeginningDesLiquescent: \"BeginningDesLiquescent\",\r\n\r\n  CustodDescLong: \"CustodDescLong\",\r\n  CustodDescShort: \"CustodDescShort\",\r\n  CustodLong: \"CustodLong\",\r\n  CustodShort: \"CustodShort\",\r\n\r\n  // clefs and other markings\r\n  DoClef: \"DoClef\",\r\n  FaClef: \"FaClef\",\r\n  Flat: \"Flat\",\r\n  Mora: \"Mora\",\r\n  Natural: \"Natural\",\r\n  OriscusAsc: \"OriscusAsc\",\r\n  OriscusDes: \"OriscusDes\",\r\n\r\n  PodatusLower: \"PodatusLower\",\r\n  PodatusUpper: \"PodatusUpper\",\r\n\r\n  Porrectus1: \"Porrectus1\", // 1 staff line difference,\r\n  Porrectus2: \"Porrectus2\", // 2 lines difference, etc...\r\n  Porrectus3: \"Porrectus3\",\r\n  Porrectus4: \"Porrectus4\",\r\n\r\n  PunctumCavum: \"PunctumCavum\",\r\n  PunctumCuadratum: \"PunctumCuadratum\",\r\n  PunctumCuadratumAscLiquescent: \"PunctumCuadratumAscLiquescent\",\r\n  PunctumCuadratumDesLiquescent: \"PunctumCuadratumDesLiquescent\",\r\n  PunctumInclinatum: \"PunctumInclinatum\",\r\n  //  PunctumInclinatumLiquescent: \"PunctumInclinatumLiquescent\",\r\n  Quilisma: \"Quilisma\",\r\n\r\n  TerminatingAscLiquescent: \"TerminatingAscLiquescent\",\r\n  TerminatingDesLiquescent: \"TerminatingDesLiquescent\",\r\n  VerticalEpisemaAbove: \"VerticalEpisemaAbove\",\r\n  VerticalEpisemaBelow: \"VerticalEpisemaBelow\",\r\n  VirgaLong: \"VirgaLong\",\r\n  VirgaShort: \"VirgaShort\",\r\n  Virgula: \"Virgula\"\r\n}; // GlyphCode\r\n\r\nexport var QuickSvg = {\r\n\r\n  // namespaces  \r\n  ns: 'http://www.w3.org/2000/svg',\r\n  xmlns: 'http://www.w3.org/2000/xmlns/',\r\n  xlink: 'http://www.w3.org/1999/xlink',\r\n\r\n  // create the root level svg object\r\n  svg: function(width, height) {\r\n    var node = document.createElementNS(this.ns,'svg');\r\n\r\n    node.setAttribute('xmlns', this.ns); \r\n    node.setAttribute('version', '1.1');\r\n    node.setAttributeNS(this.xmlns, 'xmlns:xlink', this.xlink);\r\n\r\n    node.setAttribute('width', width);\r\n    node.setAttribute('height', height);\r\n\r\n    // create the defs element\r\n    var defs = document.createElementNS(this.ns, 'defs');\r\n    node.appendChild(defs);\r\n\r\n    node.defs = defs;\r\n\r\n    node.clearNotations = function() {\r\n      // clear out all children except defs\r\n      node.removeChild(defs);\r\n\r\n      while (node.hasChildNodes())\r\n        node.removeChild(node.lastChild);\r\n      \r\n      node.appendChild(defs);\r\n    }\r\n\r\n    return node;\r\n  },\r\n\r\n  defs: function() {\r\n    return node;\r\n  },\r\n\r\n  rect: function(width, height) {\r\n    var node = document.createElementNS(this.ns, 'rect');\r\n\r\n    node.setAttribute('width', width);\r\n    node.setAttribute('height', height);\r\n\r\n    return node;\r\n  },\r\n\r\n  line: function(x1, y1, x2, y2) {\r\n    var node = document.createElementNS(this.ns, 'line');\r\n\r\n    node.setAttribute('x1', x1);\r\n    node.setAttribute('y1', y1);\r\n    node.setAttribute('x2', x2);\r\n    node.setAttribute('y2', y2);\r\n\r\n    return node;\r\n  },\r\n\r\n  g: function() {\r\n    var node = document.createElementNS(this.ns, 'g');\r\n\r\n    return node;\r\n  },\r\n\r\n  text: function() {\r\n    var node = document.createElementNS(this.ns, 'text');\r\n\r\n    return node;\r\n  },\r\n\r\n  tspan: function(str) {\r\n    var node = document.createElementNS(this.ns, 'tspan');\r\n    node.textContent = str;\r\n\r\n    return node;\r\n  },\r\n\r\n  // nodeRef should be the id of the object in defs (without the #)\r\n  use: function(nodeRef) {\r\n    var node = document.createElementNS(this.ns, 'use');\r\n    node.setAttributeNS(this.xlink, \"xlink:href\", '#' + nodeRef);\r\n\r\n    return node;\r\n  },\r\n\r\n  createFragment: function(name, attributes, child) {\r\n    if (child === undefined || child === null)\r\n      child = '';\r\n\r\n    var fragment = '<' + name + ' ';\r\n\r\n    for (var attr in attributes)\r\n      fragment += attr + '=\"' + attributes[attr] + '\" ';\r\n\r\n    fragment += '>' + child + '</' + name + '>';\r\n\r\n    return fragment;\r\n  },\r\n\r\n  parseFragment: function(fragment) {\r\n\r\n    // create temporary holder\r\n    var well = document.createElement('svg');\r\n\r\n    // act as a setter if svg is given\r\n    if (fragment) {\r\n\r\n      var container = this.g();\r\n\r\n      // dump raw svg\r\n      // do this to allow the browser to automatically create svg nodes?\r\n      well.innerHTML = '<svg>' + fragment.replace(/\\n/, '').replace(/<(\\w+)([^<]+?)\\/>/g, '<$1$2></$1>') + '</svg>'\r\n\r\n      // transplant nodes\r\n      for (var i = 0, il = well.firstChild.childNodes.length; i < il; i++)\r\n        container.appendChild(well.firstChild.firstChild)\r\n      \r\n      return container;\r\n    }\r\n  },\r\n\r\n  translate: function(node, x, y) {\r\n    node.setAttribute('transform', 'translate(' + x + ',' + y + ')');\r\n    return node;\r\n  },\r\n\r\n  scale: function(node, sx, sy) {\r\n    node.setAttribute('transform', 'scale(' + sx + ',' + sy + ')');\r\n    return node;\r\n  }\r\n}\r\n\r\n/*\r\n * ChantContext\r\n */\r\nexport class ChantContext {\r\n\r\n  constructor() {\r\n\r\n    this.defs = {};\r\n\r\n    // font styles\r\n    this.lyricTextSize = 16; // in points?\r\n    this.lyricTextFont = 'Minion Pro';\r\n    this.lyricTextColor = \"#000\";\r\n    \r\n    this.dropCapTextSize = 64;\r\n    this.dropCapTextFont = this.lyricTextFont;\r\n    this.dropCapTextColor = this.lyricTextColor;\r\n    \r\n    this.annotationTextSize = 13;\r\n    this.annotationTextFont = this.lyricTextFont;\r\n    this.annotationTextColor = this.lyricTextColor;\r\n\r\n    // everything depends on the scale of the punctum\r\n    this.glyphPunctumWidth = Glyphs.PunctumCuadratum.bounds.width;\r\n    this.glyphPunctumHeight = Glyphs.PunctumCuadratum.bounds.height;\r\n\r\n    // fixme: for now, we just set these using the glyph scales as noted above, presuming a\r\n    // staff line size of 0.5 in. Really what we should do is scale the punctum size based\r\n    // on the text metrics, right? 1 punctum ~ x height size?\r\n    this.glyphScaling = 1.0 / 16.0; \r\n\r\n    this.staffInterval = this.glyphPunctumWidth * this.glyphScaling;\r\n    this.staffLineWeight = this.glyphPunctumWidth * this.glyphScaling / 8;\r\n    this.neumeLineWeight = this.glyphPunctumWidth * this.glyphScaling / 8; // the weight of connecting lines in the glyphs.\r\n    this.dividerLineWeight = this.neumeLineWeight; // of quarter bar, half bar, etc.\r\n    this.episemaLineWeight = this.neumeLineWeight; // of horizontal episemae\r\n\r\n    // for keeping track of the clef\r\n    this.activeClef = null;\r\n\r\n    this.staffLineColor = \"#000\";\r\n    this.dividerLineColor = \"#000\";\r\n\r\n    this.defaultLanguage = new Latin();\r\n\r\n    // compile the paths objects for the glyphs so we can render them quickly to the canvas\r\n    for (var glyphName in Glyphs) {\r\n      var glyph = Glyphs[glyphName];\r\n\r\n      for (var i = 0; i < glyph.paths.length; i++)\r\n        glyph.paths[i].path2D = new Path2D(glyph.paths[i].data);\r\n    }\r\n\r\n    this.svgTextMeasurer = QuickSvg.svg(1,1);\r\n    this.svgTextMeasurer.setAttribute('id', \"TextMeasurer\");\r\n    document.querySelector('body').appendChild(this.svgTextMeasurer);\r\n\r\n    // measure the size of a hyphen for the lyrics\r\n    var hyphen = new Lyric(this, \"-\", LyricType.SingleSyllable);\r\n    this.hyphenWidth = hyphen.bounds.width;\r\n\r\n    this.minLyricWordSpacing = this.hyphenWidth;\r\n\r\n    this.intraNeumeSpacing = this.staffInterval / 2.0;\r\n\r\n    // for connecting neume syllables...\r\n    this.syllableConnector = '-';\r\n\r\n    this.drawGuides = false;\r\n    this.drawDebuggingBounds = true;\r\n\r\n    // chant notation elements are normally separated by a minimum fixed amount of space\r\n    // on the staff line. It can happen, however, that two text elements are almost close\r\n    // enough to merge, only to be separated much more by the required hyphen (or other\r\n    // connecting string).\r\n    //\r\n    // This tolerance value allows a little bit of flexibility to merge two close lyrical\r\n    // elements, thus bringing the chant notation elements a bit closer than otherwise\r\n    // would be normally allowed.\r\n    //\r\n    // condensing tolerance is a percentage value (0.0-1.0, inclusive) that indicates\r\n    // how much the default spacing can shrink. E.g., a value of 0.80 allows the layout\r\n    // engine to separate two glyphs by only 80% of the normal inter-neume spacing value.\r\n    //\r\n    // fixme: condensing tolerance is not implemented yet!\r\n    this.condensingTolerance = 0.9;\r\n  }\r\n\r\n  calculateHeightFromStaffPosition(staffPosition) {\r\n    return -staffPosition * this.staffInterval;\r\n  }\r\n}\r\n\r\n\r\n/*\r\n * ChantLayoutElement\r\n */\r\nexport class ChantLayoutElement {\r\n\r\n  constructor() {\r\n\r\n    this.bounds = new Rect();\r\n    this.origin = new Point(0, 0);\r\n\r\n    this.selected = false;\r\n    this.highlighted = false;\r\n  }\r\n\r\n  // draws the element an html5 canvas\r\n  draw(ctxt) {\r\n\r\n  }\r\n\r\n  // returns svg code for the element, used for printing support\r\n  createDrawable(ctxt) {\r\n    throw \"ChantLayout Elements must implement createDrawable(ctxt)\";\r\n  }\r\n}\r\n\r\n\r\nexport class DividerLineVisualizer extends ChantLayoutElement {\r\n\r\n  constructor(ctxt, staffPosition0, staffPosition1) {\r\n    super();\r\n\r\n    var y0 = ctxt.calculateHeightFromStaffPosition(staffPosition0);\r\n    var y1 = ctxt.calculateHeightFromStaffPosition(staffPosition1);\r\n\r\n    if (y0 > y1) {\r\n      var temp = y0;\r\n      y0 = y1;\r\n      y1 = temp;\r\n    }\r\n\r\n    this.bounds.x = 0;\r\n    this.bounds.y = y0;\r\n    this.bounds.width = ctxt.dividerLineWeight;\r\n    this.bounds.height = y1 - y0;\r\n\r\n    this.origin.x = this.bounds.width / 2;\r\n    this.origin.y = y0;\r\n  }\r\n\r\n  createDrawable(ctxt) {\r\n\r\n    return QuickSvg.createFragment('rect', {\r\n      'x': this.bounds.x,\r\n      'y': this.bounds.y,\r\n      'width': ctxt.dividerLineWeight,\r\n      'height': this.bounds.height,\r\n      'fill': ctxt.dividerLineColor,\r\n      'class': 'DividerLine'\r\n    });\r\n  }\r\n}\r\n\r\nexport class NeumeLineVisualizer extends ChantLayoutElement {\r\n\r\n  constructor(ctxt, note0, note1, hanging) {\r\n    super();\r\n\r\n    var y0 = ctxt.calculateHeightFromStaffPosition(note0.staffPosition);\r\n    var y1 = ctxt.calculateHeightFromStaffPosition(note1.staffPosition);\r\n\r\n    if (y0 > y1) {\r\n      var temp = y0;\r\n      y0 = y1;\r\n      y1 = temp;\r\n    }\r\n\r\n    if (hanging)\r\n      y1 += this.glyphPunctumHeight * ctxt.glyphScaling / 2.2;\r\n\r\n    this.bounds.x = 0;\r\n    this.bounds.y = y0;\r\n    this.bounds.width = ctxt.neumeLineWeight;\r\n    this.bounds.height = y1 - y0;\r\n\r\n    this.origin.x = 0;\r\n    this.origin.y = 0;\r\n  }\r\n\r\n  createDrawable(ctxt) {\r\n\r\n    return QuickSvg.createFragment('rect', {\r\n      'x': this.bounds.x,\r\n      'y': this.bounds.y,\r\n      'width': ctxt.neumeLineWeight,\r\n      'height': this.bounds.height,\r\n      'fill': ctxt.neumeLineColor,\r\n      'class': 'NeumeLine'\r\n    });\r\n  }\r\n}\r\n\r\n\r\n\r\nexport class HorizontalEpisemaLineVisualizer extends ChantLayoutElement {\r\n\r\n  constructor(ctxt, boundsToMark, position) {\r\n    super();\r\n\r\n    var y = 0;\r\n    var minDistanceAway = ctxt.staffInterval * 0.4; // min distance both from neume and staff lines\r\n\r\n    if (position == MarkingPositionHint.Below) {\r\n      y = boundsToMark.y + boundsToMark.height + minDistanceAway; // the highest the line could be at\r\n\r\n      // now, just take a step or two up if we need to\r\n      if (Math.abs(y % ctxt.staffInterval) < minDistanceAway)\r\n        y += minDistanceAway - Math.abs(y % ctxt.staffInterval);\r\n    } else {\r\n      y = boundsToMark.y - minDistanceAway; // the lowest the line could be at\r\n\r\n      // now, just take a step or two up if we need to\r\n      if (Math.abs(y % ctxt.staffInterval) < minDistanceAway)\r\n        y -= minDistanceAway - Math.abs(y % ctxt.staffInterval);\r\n    }\r\n\r\n    this.bounds.x = boundsToMark.x;\r\n    this.bounds.y = y - ctxt.episemaLineWeight / 2;\r\n    this.bounds.width = boundsToMark.width;\r\n    this.bounds.height = ctxt.episemaLineWeight;\r\n\r\n    this.origin.x = 0;\r\n    this.origin.y = 0;\r\n  }\r\n\r\n  createDrawable(ctxt) {\r\n    // fixme: implement this\r\n    //this.drawable = QuickSvg.rect(this.bounds.width, this.bounds.height);\r\n    //QuickSvg.translate(this.drawable, this.bounds.x, this.bounds.y).classList.add('HorizontalEpisema');\r\n\r\n    return \"\";\r\n  }\r\n}\r\n\r\n\r\nexport class GlyphVisualizer extends ChantLayoutElement {\r\n\r\n  constructor(ctxt, glyphCode) {\r\n    super();\r\n\r\n    this.glyph = null;\r\n\r\n    this.setGlyphShape(ctxt, glyphCode);\r\n  }\r\n\r\n  setGlyphShape(ctxt, glyphCode) {\r\n\r\n    if (this.glyphCode == glyphCode)\r\n      return;\r\n\r\n    if (typeof glyphCode === 'undefined' || glyphCode == null || glyphCode == \"\")\r\n      this.glyphCode = GlyphCode.None;\r\n    else\r\n      this.glyphCode = glyphCode;\r\n\r\n    this.glyph = Glyphs[this.glyphCode];\r\n\r\n    // if this glyph hasn't been used yet, then load it up in the defs section for sharing\r\n    if (!ctxt.defs.hasOwnProperty(this.glyphCode)) {\r\n      var glyphSrc = this.glyph.svgSrc;\r\n\r\n      // create the ref\r\n      ctxt.defs[this.glyphCode] = QuickSvg.createFragment('g', {\r\n        id: this.glyphCode,\r\n        'class': 'glyph',\r\n        transform: 'scale(' + ctxt.glyphScaling + ')'\r\n      }, glyphSrc);\r\n    }\r\n\r\n\r\n    this.origin.x = this.glyph.origin.x * ctxt.glyphScaling;\r\n    this.origin.y = this.glyph.origin.y * ctxt.glyphScaling;\r\n\r\n    this.bounds.x = -this.origin.x;\r\n    this.bounds.y = -this.origin.y;\r\n    this.bounds.width = this.glyph.bounds.width * ctxt.glyphScaling;\r\n    this.bounds.height = this.glyph.bounds.height * ctxt.glyphScaling;\r\n  }\r\n\r\n  setStaffPosition(ctxt, staffPosition) {\r\n    this.bounds.y += ctxt.calculateHeightFromStaffPosition(staffPosition);\r\n  }\r\n\r\n  createDrawable(ctxt) {\r\n\r\n    return QuickSvg.createFragment('use', {\r\n      'xlink:href': '#' + this.glyphCode,\r\n      x: this.bounds.x + this.origin.x,\r\n      y: this.bounds.y + this.origin.y\r\n    });\r\n  }\r\n}\r\n\r\nvar TextSpan = function(text, cssClasses) {\r\n  if (typeof cssClasses === 'undefined' || cssClasses == null)\r\n    cssClasses = \"\";\r\n\r\n  this.text = text;\r\n  this.cssClasses = cssClasses;\r\n};\r\n\r\nvar boldMarkup = \"*\";\r\nvar italicMarkup = \"_\";\r\nvar redMarkup = \"^\";\r\nvar smallCapsMarkup = \"%\";\r\n\r\nfunction MarkupStackFrame(symbol, startIndex, cssClass) {\r\n  this.symbol = symbol;\r\n  this.startIndex = startIndex;\r\n  this.cssClass = cssClass;\r\n}\r\n\r\nMarkupStackFrame.createStackFrame = function(symbol, startIndex) {\r\n\r\n  var cssClass = \"\";\r\n\r\n  switch(symbol) {\r\n    case boldMarkup:\r\n      cssClass = 'bold';\r\n      break;\r\n    case italicMarkup:\r\n      cssClass = 'italic';\r\n      break;\r\n    case redMarkup:\r\n      cssClass = 'red';\r\n      break;\r\n    case smallCapsMarkup:\r\n      cssClass = 'small-caps';\r\n      break;\r\n  }\r\n\r\n  return new MarkupStackFrame(symbol, startIndex, cssClass);\r\n};\r\n\r\n\r\nexport class TextElement extends ChantLayoutElement {\r\n\r\n  constructor(ctxt, text, fontFamily, fontSize, textAnchor) {\r\n    super();\r\n\r\n    // set these to some sane values for now...\r\n    this.bounds.x = 0;\r\n    this.bounds.y = 0;\r\n    this.bounds.width = 0;\r\n    this.bounds.height = 0;\r\n    this.origin.x = 0;\r\n    this.origin.y = 0;\r\n\r\n    this.fontFamily = fontFamily;\r\n    this.fontSize = fontSize;\r\n    this.textAnchor = textAnchor;\r\n\r\n    this.generateSpansFromText(text);\r\n\r\n    this.recalculateMetrics(ctxt);\r\n  }\r\n\r\n  generateSpansFromText(text) {\r\n\r\n    this.unsanitizedText = text;\r\n    this.text = \"\";\r\n    this.spans = [];\r\n\r\n    // save ourselves a lot of grief for a very common text:\r\n    if (this.text == \"*\") {\r\n      this.spans.push(new TextSpan(text, \"\"));\r\n      return;\r\n    }\r\n\r\n    var markupStack = [];\r\n    var spanStartIndex = 0;\r\n\r\n    var that = this;\r\n    var closeSpan = function (spanText, extraCssClass) {\r\n      if (spanText == \"\")\r\n        return;\r\n\r\n      that.text += spanText;\r\n\r\n      var cssClasses = \"\";\r\n      for (var i = 0; i < markupStack.length; i++) {\r\n        if (cssClasses != \"\")\r\n          cssClasses += \" \";\r\n\r\n        cssClasses = cssClasses + markupStack[i].cssClass;\r\n      }\r\n\r\n      if (extraCssClass != null) {\r\n        if (cssClasses != \"\")\r\n          cssClasses += \" \";\r\n\r\n        cssClasses = cssClasses + extraCssClass;\r\n      }\r\n\r\n      that.spans.push(new TextSpan(spanText, cssClasses));\r\n    };\r\n\r\n    var markupRegex = /(\\*|_|\\^|%|[ARVarv]\\/\\.)/g;\r\n\r\n    var match = null;\r\n    while (match = markupRegex.exec(text)) {\r\n\r\n      var markupSymbol = match[0];\r\n\r\n      // non-matching symbols first\r\n      if (markupSymbol == \"A/.\" || markupSymbol == \"R/.\" || markupSymbol == \"V/.\" ||\r\n          markupSymbol == \"a/.\" || markupSymbol == \"r/.\" || markupSymbol == \"v/.\") {\r\n        closeSpan(text[match.index] + \".\", 'special-chant-character red');\r\n      } else if (markupStack.length == 0) {\r\n        // otherwise we're dealing with matching markup delimeters\r\n        // if this is our first markup frame, then just create an inline for preceding text and push the stack frame\r\n        closeSpan(text.substring(spanStartIndex, match.index));\r\n        markupStack.push(MarkupStackFrame.createStackFrame(markupSymbol, match.index));\r\n      } else {\r\n\r\n        if (markupStack[markupStack.length - 1].symbol == markupSymbol) {\r\n          // group close\r\n          closeSpan(text.substring(spanStartIndex, match.index));\r\n          markupStack.pop();\r\n        } else if (markupStack.filter((frame) => frame.Symbol == markupSymbol).length > 0) {\r\n          // trying to open a recursive group (or forgot to close a previous group)\r\n          // in either case, we just unwind to the previous stack frame\r\n          spanStartIndex = markupStack[markupStack.length - 1].startIndex;\r\n          markupStack.pop();\r\n          continue;\r\n        } else {\r\n          // group open\r\n          closeSpan(text.substring(spanStartIndex, match.index));\r\n          markupStack.push(MarkupStackFrame.createStackFrame(markupSymbol, match.index));\r\n        }\r\n      }\r\n\r\n      // advance the start index past the current markup\r\n      spanStartIndex = match.index + markupSymbol.length;\r\n    }\r\n\r\n    // if we finished matches, and there is still some text left, create one final run\r\n    if (spanStartIndex < text.length)\r\n      closeSpan(text.substring(spanStartIndex, text.length));\r\n\r\n    // if after all of that we still didn't create any runs, then just add the entire text\r\n    // string itself as a run\r\n    if (this.spans.length == 0)\r\n      closeSpan(text);\r\n  }\r\n\r\n  recalculateMetrics(ctxt) {\r\n\r\n    this.bounds.x = 0;\r\n    this.bounds.y = 0;\r\n\r\n    ctxt.svgTextMeasurer.innerHTML = this.createDrawable(ctxt);\r\n    var bbox = ctxt.svgTextMeasurer.firstChild.getBBox();\r\n\r\n    this.bounds.x = 0;\r\n    this.bounds.y = 0;\r\n    this.bounds.width = bbox.width;\r\n    this.bounds.height = bbox.height;\r\n    this.origin.x = 0;\r\n    this.origin.y = 0; // baseline?\r\n  }\r\n\r\n  getCssClasses() {\r\n    return \"TextElement\";\r\n  }\r\n\r\n  createDrawable(ctxt) {\r\n\r\n    var spans = \"\"\r\n\r\n    for (var i = 0; i < this.spans.length; i++) {\r\n      var options = {};\r\n\r\n      if (this.spans[i].cssClasses)\r\n        options['class'] = this.spans[i].cssClasses;\r\n\r\n      spans += QuickSvg.createFragment('tspan', options, this.spans[i].text);\r\n    }\r\n\r\n    return QuickSvg.createFragment('text', {\r\n      'transform': 'translate(' + this.bounds.x + ',' + this.bounds.y + ')',\r\n      'class': this.getCssClasses(),\r\n      'font-family': this.fontFamily,\r\n      'font-size': this.fontSize,\r\n      'text-anchor': this.textAnchor\r\n    }, spans);\r\n  }\r\n}\r\n\r\nexport var LyricType = {\r\n  SingleSyllable: 0,\r\n  BeginningSyllable: 1,\r\n  MiddleSyllable: 2,\r\n  EndingSyllable: 3,\r\n\r\n  Directive: 4 // for asterisks, \"ij.\" elements, or other performance notes.\r\n};\r\n\r\nexport class Lyric extends TextElement {\r\n  constructor(ctxt, text, lyricType) {\r\n    super(ctxt, text, ctxt.lyricTextFont, ctxt.lyricTextSize, 'start');\r\n\r\n    this.cssClasses += \" Lyric\";\r\n\r\n    if (typeof lyricType === 'undefined' || lyricType == null || lyricType == \"\")\r\n      this.lyricType = LyricType.SingleSyllable;\r\n    else\r\n      this.lyricType = lyricType;\r\n\r\n    this.needsConnector = false;\r\n  }\r\n\r\n  allowsConnector() {\r\n    return this.lyricType == LyricType.BeginningSyllable ||\r\n            this.lyricType == LyricType.MiddleSyllable;\r\n  }\r\n\r\n  setNeedsConnector(needs) {\r\n    if (needs === true) {\r\n      this.needsConnector = true;\r\n      this.bounds.width = this.widthWithConnector;\r\n\r\n      if (this.spans.length > 0)\r\n        this.spans[this.spans.length - 1].text = this.lastSpanTextWithConnector;\r\n    } else {\r\n      this.needsConnector = false;\r\n      this.bounds.width = this.widthWithoutConnector;\r\n\r\n      if (this.spans.length > 0)\r\n        this.spans[this.spans.length - 1].text = this.lastSpanText;\r\n    }\r\n  }\r\n\r\n  generateSpansFromText(text) {\r\n    super.generateSpansFromText(text);\r\n\r\n    if (this.spans.length > 0) {\r\n      this.lastSpanText = this.spans[this.spans.length - 1].text;\r\n      this.lastSpanTextWithConnector = this.lastSpanText + __syllableConnector;\r\n    } else {\r\n      this.lastSpanText = \"\";\r\n      this.lastSpanTextWithConnector = \"\";\r\n    }\r\n  }\r\n\r\n  recalculateMetrics(ctxt) {\r\n    super.recalculateMetrics(ctxt);\r\n\r\n    this.widthWithoutConnector = this.bounds.width;\r\n    this.textWithConnector = this.text + __syllableConnector;\r\n\r\n    this.widthWithConnector = this.bounds.width + ctxt.hyphenWidth;\r\n\r\n    var activeLanguage = ctxt.defaultLanguage;\r\n\r\n    // calculate the point where the text lines up to the staff notation\r\n    // and offset the rect that much\r\n    var offset = 0;\r\n\r\n    if (this.lyricType != LyricType.Directive) {\r\n\r\n      // Non-directive elements are lined up to the chant notation based on vowel segments.\r\n      // First we determine the vowel segment of the text, then we calculate the center point\r\n      // of that vowel segment.\r\n      var result = activeLanguage.findVowelSegment(this.text, 0);\r\n      if (result.found === true) {\r\n\r\n        // svgTextMeasurer still has the current lyric in it...\r\n        \r\n\r\n        var x1 = ctxt.svgTextMeasurer.firstChild.getSubStringLength(0, result.startIndex);\r\n        var x2 = ctxt.svgTextMeasurer.firstChild.getSubStringLength(0, result.startIndex + result.length);\r\n\r\n        offset = x1 + (x2 - x1) / 2;\r\n      } else {\r\n        // no vowels found according the text's language. for now we just center the text\r\n        offset = this.widthWithoutConnector / 2;\r\n      }\r\n\r\n    } else {\r\n      // directives are always centered on the chant notation\r\n      offset = this.widthWithoutConnector / 2;\r\n    }\r\n\r\n    this.bounds.x = -offset;\r\n    this.bounds.y = 0;\r\n\r\n    this.origin.x = offset;\r\n\r\n    this.bounds.width = this.widthWithoutConnector;\r\n    this.bounds.height = ctxt.lyricTextSize;\r\n  }\r\n\r\n  getCssClasses() {\r\n\r\n    var classes = \"Lyric \";\r\n\r\n    if (this.lyricType == LyricType.Directive)\r\n      classes += \"directive \";\r\n\r\n    return classes + super.getCssClasses();\r\n  }\r\n\r\n  createDrawable(ctxt) {\r\n    if (this.spans.length > 0) {\r\n      if (this.needsConnector)\r\n        this.spans[this.spans.length - 1].text = this.lastSpanTextWithConnector;\r\n      else\r\n        this.spans[this.spans.length - 1].text = this.lastSpanText;\r\n    }\r\n\r\n    return super.createDrawable(ctxt);\r\n  }\r\n}\r\n\r\nexport class DropCap extends TextElement {\r\n\r\n  /**\r\n   * @param {String} text\r\n   */\r\n  constructor(ctxt, text) {\r\n    super(ctxt, text, ctxt.dropCapTextFont, ctxt.dropCapTextSize, 'middle');\r\n\r\n    this.padding = ctxt.staffInterval * 2;\r\n  }\r\n\r\n  getCssClasses() {\r\n    return \"DropCap \" + super.getCssClasses();\r\n  }\r\n}\r\n\r\nexport class Annotation extends TextElement {\r\n\r\n  /**\r\n   * @param {String} text\r\n   */\r\n  constructor(ctxt, text) {\r\n    super(ctxt, text, ctxt.annotationTextFont, ctxt.annotationTextSize, 'middle');\r\n    this.padding = ctxt.staffInterval * 2;\r\n  }\r\n\r\n  getCssClasses() {\r\n    return \"Annotation \" + super.getCssClasses();\r\n  }\r\n}\r\n\r\n\r\n\r\nexport class ChantNotationElement extends ChantLayoutElement {\r\n\r\n  constructor() {\r\n    super();\r\n\r\n    //double\r\n    this.leadingSpace = 0.0;\r\n    this.trailingSpace = -1; // if less than zero, this is automatically calculated at layout time\r\n    this.keepWithNext = false;\r\n\r\n    this.lyric = null;\r\n\r\n    this.score = null; // the ChantScore\r\n    this.line = null; // the ChantLine\r\n\r\n    this.visualizers = [];\r\n  }\r\n\r\n  hasLyric() {\r\n    if (this.lyric != null)\r\n      return true;\r\n    else\r\n      return false;\r\n  }\r\n\r\n  getLyricLeft() {\r\n    return this.bounds.x + this.lyric.bounds.x;\r\n  }\r\n\r\n  getLyricRight() {\r\n    return this.bounds.x + this.lyric.bounds.x + this.lyric.bounds.width;\r\n  }\r\n\r\n  // used by subclasses while building up the chant notations.\r\n  addVisualizer(chantLayoutElement) {\r\n    if (this.bounds.isEmpty())\r\n      this.bounds = chantLayoutElement.bounds.clone();\r\n    else\r\n      this.bounds.union(chantLayoutElement.bounds);\r\n\r\n    this.visualizers.push(chantLayoutElement);\r\n  }\r\n\r\n  // chant notation elements are given an opportunity to perform their layout via this function.\r\n  // subclasses should call this function first in overrides of this function.\r\n  // on completion, exsurge presumes that the bounds, the origin, and the drawable objects are\r\n  // all valid and prepared for higher level layout.\r\n  performLayout(ctxt) {\r\n\r\n    if (this.trailingSpace < 0)\r\n      this.trailingSpace = ctxt.intraNeumeSpacing * 4;\r\n\r\n    // reset the bounds and the staff notations before doing a layout\r\n    this.visualizers = [];\r\n    this.bounds = new Rect(Infinity, Infinity, -Infinity, -Infinity);\r\n\r\n    if (this.hasLyric())\r\n      this.lyric.recalculateMetrics(ctxt);\r\n  }\r\n\r\n  // a helper function for subclasses to call after they are done performing layout...\r\n  finishLayout(ctxt) {\r\n    this.origin.x -= -this.bounds.x;\r\n    this.bounds.x = 0;\r\n    //this.bounds.y = 0;\r\n\r\n    // add the lyric and line it up\r\n    if (this.hasLyric())\r\n      this.lyric.bounds.x = this.origin.x - this.lyric.origin.x;\r\n  }\r\n\r\n  createDrawable(ctxt) {\r\n    var inner = \"\";\r\n\r\n    for (var i = 0; i < this.visualizers.length; i++)\r\n      inner += this.visualizers[i].createDrawable(ctxt);\r\n\r\n    if (this.lyric)\r\n      inner += this.lyric.createDrawable(ctxt);\r\n\r\n    return QuickSvg.createFragment('g', {\r\n      'class': 'ChantNotationElement ' + this.constructor.name,\r\n      'transform': 'translate(' + this.bounds.x + ',' + 0 + ')'\r\n    }, inner);\r\n  }\r\n}\n\n\n/** WEBPACK FOOTER **\n ** ./src/Exsurge.Drawing.js\n **/","//\r\n// Author(s):\r\n// Fr. Matthew Spencer, OSJ <mspencer@osjusa.org>\r\n//\r\n// Copyright (c) 2008-2016 Fr. Matthew Spencer, OSJ\r\n//\r\n// Permission is hereby granted, free of charge, to any person obtaining a copy\r\n// of this software and associated documentation files (the \"Software\"), to deal\r\n// in the Software without restriction, including without limitation the rights\r\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\n// copies of the Software, and to permit persons to whom the Software is\r\n// furnished to do so, subject to the following conditions:\r\n//\r\n// The above copyright notice and this permission notice shall be included in\r\n// all copies or substantial portions of the Software.\r\n//\r\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n// THE SOFTWARE.\r\n//\r\n\r\nimport * as Exsurge from './Exsurge.Core'\r\nimport { Step, Pitch, Rect, Point, Margins } from './Exsurge.Core'\r\nimport { ctxt, QuickSvg, ChantLayoutElement, ChantNotationElement, GlyphCode, GlyphVisualizer, Lyric, Annotation, DropCap } from './Exsurge.Drawing'\r\nimport { Glyphs } from './Exsurge.Glyphs'\r\nimport { Custod } from './Exsurge.Chant.Signs'\r\nimport { Gabc } from './Exsurge.Gabc'\r\n\r\n\r\nexport var NoteShape = {\r\n  Default: 0,\r\n\r\n  Inclinatum: 1,\r\n  Virga: 2,\r\n  Quilisma: 3,\r\n  Cavum: 4,\r\n  OriscusAscending: 5,\r\n  OriscusDescending: 6,\r\n\r\n  Apostropha: 7,\r\n\r\n  AscLiquescent: 8,\r\n  DesLiquescent: 9,\r\n};\r\n\r\n/**\r\n * @class\r\n */\r\nexport class Note extends ChantLayoutElement {\r\n\r\n  /**\r\n   * @para {Pitch} pitch\r\n   */\r\n  constructor(pitch) {\r\n    super();\r\n\r\n    if (typeof pitch !== 'undefined')\r\n      this.pitch = pitch;\r\n    else\r\n      this.pitch = null;\r\n\r\n    this.glyphVisualizer = null;\r\n    this.staffPosition = 0;\r\n    this.isLiquescent = false;\r\n    this.shape = NoteShape.Default;\r\n    this.markings = [];\r\n  }\r\n\r\n  setGlyphShape(ctxt, glyphCode) {\r\n    if (this.glyphVisualizer)\r\n      this.glyphVisualizer.setGlyphShape(ctxt, glyphCode);\r\n    else\r\n      this.glyphVisualizer = new GlyphVisualizer(ctxt, glyphCode);\r\n  }\r\n\r\n  performLayout(ctxt) {\r\n\r\n    if (this.glyphVisualizer == null) {\r\n      console.log(\"Tried to perform layout on a note with no glyphCode assigned!\");\r\n    }\r\n\r\n    this.glyphVisualizer.setStaffPosition(ctxt, this.staffPosition);\r\n\r\n    // assign glyphvisualizer metrics to this note\r\n    this.bounds.x = this.glyphVisualizer.bounds.x;\r\n    this.bounds.y = this.glyphVisualizer.bounds.y;\r\n    this.bounds.width = this.glyphVisualizer.bounds.width;\r\n    this.bounds.height = this.glyphVisualizer.bounds.height;\r\n\r\n    this.origin.x = this.glyphVisualizer.origin.x;\r\n    this.origin.y = this.glyphVisualizer.origin.y;\r\n\r\n    for (var i = 0; i < this.markings.length; i++) {\r\n      var marking = this.markings[i];\r\n\r\n      marking.performLayout(ctxt);\r\n    }\r\n\r\n    //this.drawable.attr({onclick: \"Audio.playNoteInt(\" + this.pitch.toInt() + ');',\r\n    //  \"data-pitch\": this.pitch.toInt()\r\n    //});\r\n  }\r\n\r\n  generateVisualizerPath(ctxt) {\r\n\r\n    this.glyphVisualizer.bounds.x = this.bounds.x;\r\n    this.glyphVisualizer.bounds.y = this.bounds.y;\r\n    return this.glyphVisualizer.generateVisualizerPath(ctxt);\r\n  }\r\n\r\n  draw(ctxt) {\r\n\r\n    this.glyphVisualizer.bounds.x = this.bounds.x;\r\n    this.glyphVisualizer.bounds.y = this.bounds.y;\r\n\r\n    this.glyphVisualizer.draw(ctxt);\r\n  }\r\n\r\n  createDrawable(ctxt) {\r\n\r\n    this.glyphVisualizer.bounds.x = this.bounds.x;\r\n    this.glyphVisualizer.bounds.y = this.bounds.y;\r\n    return this.glyphVisualizer.createDrawable(ctxt);\r\n  }\r\n}\r\n\r\nexport class Clef extends ChantNotationElement {\r\n\r\n  constructor(staffPosition, octave) {\r\n    super();\r\n\r\n    this.isClef = true;\r\n    this.staffPosition = staffPosition;\r\n    this.octave = octave;\r\n    this.defaultAccidental = null;\r\n    this.activeAccidental = null;\r\n  }\r\n\r\n  resetAccidentals() {\r\n    this.activeAccidental = this.defaultAccidental;\r\n  }\r\n\r\n  updateChantLogic() {\r\n    super.updateChantLogic();\r\n\r\n    ctxt.activeClef = this;\r\n  }\r\n\r\n  pitchToStaffPosition(pitch) {\r\n\r\n  }\r\n}\r\n\r\nexport class DoClef extends Clef {\r\n\r\n  constructor(staffPosition, octave) {\r\n    super(staffPosition, octave);\r\n\r\n    this.leadingSpace = 0.0;\r\n  }\r\n\r\n  pitchToStaffPosition(pitch) {\r\n    return (pitch.octave - this.octave) * 7 + this.staffPosition +\r\n            Pitch.stepToStaffOffset(pitch.step) -\r\n            Pitch.stepToStaffOffset(Step.Do);\r\n  }\r\n\r\n  staffPositionToPitch(staffPosition) {\r\n    var offset = staffPosition - this.staffPosition;\r\n    var octaveOffset = Math.floor(offset / 7);\r\n\r\n    var step = Pitch.staffOffsetToStep(offset);\r\n\r\n    if (this.defaultAccidental != null && step == this.defaultAccidental.step)\r\n      step += this.defaultAccidental.accidentalType;\r\n\r\n    return new Pitch(step, this.octave + octaveOffset);\r\n  }\r\n\r\n  performLayout(ctxt) {\r\n    super.performLayout(ctxt);\r\n\r\n    var glyph = new GlyphVisualizer(ctxt, GlyphCode.DoClef);\r\n    glyph.setStaffPosition(ctxt, this.staffPosition);\r\n    this.addVisualizer(glyph);\r\n\r\n    // fixme: implement this\r\n    /*\r\n    if (this.defaultAccidental != null) {\r\n      var x = glyph.bounds.right() + ctxt.intraNeumeSpacing;\r\n\r\n      glyph = new GlyphVisualizer(ctxt, GlyphCode.Flat, this.staffPosition - 1);\r\n      glyph.bounds.x += x;\r\n      this.addVisualizer(glyph);\r\n    }\r\n    */\r\n\r\n    this.finishLayout(ctxt);\r\n  }\r\n\r\n  clone() {\r\n    return new DoClef(this.staffPosition, this.octave);\r\n  }\r\n}\r\n\r\n\r\nexport class FaClef extends Clef {\r\n\r\n  constructor(staffPosition, octave) {\r\n    super(staffPosition, octave);\r\n\r\n    this.octave = octave;\r\n\r\n    this.leadingSpace = 0;\r\n  }\r\n\r\n  pitchToStaffPosition(pitch) {\r\n    return (pitch.octave - this.octave) * 7 + this.staffPosition +\r\n            Pitch.stepToStaffOffset(pitch.step) -\r\n            Pitch.stepToStaffOffset(Step.Fa);\r\n  }\r\n\r\n  staffPositionToPitch(staffPosition) {\r\n    var offset = staffPosition - this.staffPosition + 3; // + 3 because it's a fa clef (3 == offset from Do)\r\n    var octaveOffset = Math.floor(offset / 7);\r\n\r\n    var step = Pitch.staffOffsetToStep(offset);\r\n\r\n    if (step == Step.Ti && this.defaultAccidental == AccidentalType.Flat)\r\n      step = Step.Te;\r\n\r\n    return new Pitch(step, this.octave + octaveOffset);\r\n  }\r\n\r\n  performLayout(ctxt) {\r\n    super.performLayout(ctxt);\r\n\r\n    var glyph = new GlyphVisualizer(ctxt, GlyphCode.FaClef);\r\n    glyph.setStaffPosition(ctxt, this.staffPosition);\r\n    this.addVisualizer(glyph);\r\n\r\n    this.finishLayout(ctxt);\r\n  }\r\n\r\n  clone() {\r\n    return new FaClef(this.staffPosition, this.octave);\r\n  }\r\n}\r\n\r\nexport class ChantLineBreak extends ChantNotationElement {\r\n\r\n  constructor(justify) {\r\n    super();\r\n\r\n    this.justify = justify;\r\n  }\r\n\r\n  performLayout(ctxt) {\r\n\r\n    // reset the bounds before doing a layout\r\n    this.bounds = new Rect(0, 0, 0, 0);\r\n  }\r\n\r\n  clone() {\r\n    var lb = new ChantLineBreak();\r\n    lb.justify = this.justify;\r\n\r\n    return lb;\r\n  }\r\n}\r\n\r\n\r\n// a chant line represents one staff line on the page. ChantLines are created by the score\r\n// and laid out by the page\r\nexport class ChantLine extends ChantLayoutElement {\r\n\r\n  constructor(score) {\r\n    super();\r\n\r\n    this.score = score;\r\n\r\n    this.scoreNotationStart = 0;\r\n    this.scoreNotationCount = 0;\r\n    this.notations = [];\r\n    this.notationBounds = null; // Rect\r\n\r\n    this.lyricBounds = null; // Rect\r\n\r\n    this.staffLeft = 0;\r\n    this.staffRight = 0;\r\n\r\n    this.custod = null;\r\n\r\n    this.justify = true;\r\n\r\n    this.startingClef = null; // necessary for the layout process\r\n\r\n    this.nextLine = null;\r\n    this.previousLine = null; // for layout assistance\r\n\r\n    // fixme: make these configurable values from the score\r\n    this.spaceAfterNotations = 30; // the space between the notation bounds and the first text track\r\n    this.spaceBetweenTextTracks = 20; // spacing between each text track\r\n  }\r\n\r\n  setStartingClef(clef) {\r\n    this.startingClef = clef.clone();\r\n  }\r\n\r\n  performLayout(ctxt) {\r\n\r\n    // start off with a rectangle that holds at least the four staff lines\r\n    // we fudge the 3 to 3.1 so that the svg doesn't crop off the upper/lower staff lines...\r\n    this.notationBounds = new Rect(this.staffLeft, -3.1 * ctxt.staffInterval,\r\n      this.staffRight - this.staffLeft, 6.2 * ctxt.staffInterval);\r\n\r\n    // run through all the elements of the line and calculate the bounds of the notations,\r\n    // as well as the bounds of each text track we will use\r\n    var i;\r\n    var notation = null;\r\n\r\n    for (i = 0; i < this.notations.length; i++)\r\n      this.notationBounds.union(this.notations[i].bounds);\r\n\r\n    this.lyricVerticalOffset = this.notationBounds.y + this.notationBounds.height + ctxt.lyricTextSize;\r\n\r\n    // finalize the lyrics placement\r\n    for (i = 0; i < this.notations.length; i++) {\r\n      notation = this.notations[i];\r\n\r\n      if (!notation.hasLyric())\r\n        continue;\r\n\r\n      notation.lyric.bounds.y = this.lyricVerticalOffset;\r\n    }\r\n\r\n    // dropCap and the annotations\r\n    if (this.scoreNotationStart == 0 && this.score.dropCap != null) {\r\n\r\n      // drop caps and annotations are drawn from their center, so aligning them\r\n      // horizontally is as easy as this.staffLeft / 2\r\n\r\n      this.score.dropCap.bounds.x = this.staffLeft / 2;\r\n      this.score.dropCap.bounds.y = this.lyricVerticalOffset;\r\n\r\n      if (this.score.annotation != null) {\r\n        this.score.annotation.bounds.x += this.staffLeft / 2;\r\n        this.score.annotation.bounds.y += -ctxt.staffInterval * 1.5;\r\n      }\r\n    }\r\n\r\n    this.notationBounds.height += ctxt.lyricTextSize;\r\n\r\n    this.bounds.x = 0;\r\n    this.bounds.y = this.notationBounds.y;\r\n    this.bounds.width = this.notationBounds.right();\r\n    this.bounds.height = this.notationBounds.height;\r\n\r\n    // the origin of the chant line's coordinate space is at the center line of the left extremity of the staff\r\n    this.origin = new Point(this.staffLeft, -this.notationBounds.y);\r\n  }\r\n\r\n  createDrawable(ctxt) {\r\n    var inner = \"\";\r\n\r\n    // add the chant lines\r\n    var x1 = this.staffLeft, x2 = this.staffRight;\r\n\r\n    // create the staff lines\r\n    for (var i = -3; i <= 3; i += 2) {\r\n\r\n      inner += QuickSvg.createFragment('line', {\r\n        'x1': x1,\r\n        'y1': ctxt.staffInterval * i,\r\n        'x2': x2,\r\n        'y2': ctxt.staffInterval * i,\r\n        'stroke': ctxt.staffLineColor,\r\n        'stroke-width': ctxt.staffLineWeight,\r\n        'class': 'StaffLine'\r\n      });\r\n    }\r\n\r\n    // dropCap and the annotations\r\n    if (this.scoreNotationStart == 0 && this.score.dropCap != null) {\r\n\r\n      inner += this.score.dropCap.createDrawable(ctxt);\r\n\r\n      if (this.score.annotation != null)\r\n        inner += this.score.annotation.createDrawable(ctxt);\r\n    }\r\n\r\n    // add all of the notations\r\n    for (var i = 0; i < this.notations.length; i++)\r\n      inner += this.notations[i].createDrawable(ctxt);\r\n\r\n    return QuickSvg.createFragment('g', {\r\n      'class': 'ChantLine',\r\n      'transform': 'translate(' + this.bounds.x + ',' + this.bounds.y + ')'\r\n    }, inner);\r\n  }\r\n\r\n\r\n  buildFromChantNotationIndex(ctxt, newElementStart, width) {\r\n\r\n    // todo: reset / clear the children we have in case they have data\r\n    this.scoreNotationStart = newElementStart;\r\n    this.scoreNotationCount = 0;\r\n    this.notations = [];\r\n\r\n    this.staffLeft = 0;\r\n\r\n    if (width > 0)\r\n      this.staffRight = this.staffLeft + width;\r\n    else\r\n      this.staffRight = 99999999; // no limit to staff size\r\n\r\n    // Begin with the drop cap\r\n    if (this.scoreNotationStart == 0 && this.score.dropCap != null) {\r\n      // add a little padding around the dropcap\r\n      this.staffLeft += this.score.dropCap.bounds.width + this.score.dropCap.padding * 2;\r\n    }\r\n\r\n    // set up the clef...\r\n    // Also, add the clef as a child (which will also set the clef in the context)\r\n    this.setStartingClef(ctxt.activeClef);\r\n    this.startingClef.performLayout(ctxt);\r\n    this.startingClef.bounds.x = this.staffLeft;\r\n    this.notations.push(this.startingClef);\r\n\r\n    var current = this.startingClef, previous = null, previousWithLyric = null;\r\n\r\n    // todo: estimate how much space we have available to us\r\n    var rightBoundary = this.staffRight - Glyphs.CustodLong.bounds.width - ctxt.intraNeumeSpacing * 4; // possible custod on the line\r\n\r\n    // todo: iterate through the notations, fittng what we can on this line\r\n    var scoreNotations = this.score.notations;\r\n\r\n    for (var i = newElementStart; i < scoreNotations.length; i++) {\r\n\r\n      if (current.hasLyric())\r\n        previousWithLyric = current;\r\n\r\n      previous = current;\r\n      current = scoreNotations[i];\r\n\r\n      // try to fit the current element on this line.\r\n      // if it doesn't fit, we finish up here.\r\n      var fitsOnLine = this.positionNotationElement(ctxt, previousWithLyric, previous, current, rightBoundary);\r\n      if (fitsOnLine === false) {\r\n\r\n        // check if the previous elements want to be kept with this one\r\n        for (var k = i - 1; k > this.scoreNotationStart; k--) {\r\n          var cne = this.score.notations[k];\r\n\r\n          if (cne.keepWithNext === true) {\r\n            this.notations.pop(); // remove it from our notations\r\n            this.scoreNotationCount--;\r\n          } else\r\n            break;\r\n        }\r\n\r\n        // we are at the end of the line!\r\n        break;\r\n      }\r\n\r\n      current.chantLine = this;\r\n      this.notations.push(current);\r\n      this.scoreNotationCount++;\r\n\r\n      // line breaks are a special case indicating to stop processing here\r\n      if (current.constructor.name == 'ChantLineBreak' && width > 0) {\r\n        this.justify = current.justify;\r\n        break;\r\n      }\r\n    }\r\n\r\n    var extraSpace = 0;\r\n\r\n    if (this.notations.length > 0) {\r\n      var last = this.notations[this.notations.length - 1];\r\n\r\n      if (last.hasLyric() && last.getLyricRight() > (last.bounds.right() + last.trailingSpace))\r\n        extraSpace = this.staffRight - last.getLyricRight();\r\n      else\r\n        extraSpace = this.staffRight - (last.bounds.right() + last.trailingSpace);\r\n    }\r\n\r\n    // create the custod at the end of the line (if we need it!)\r\n    // if we find an element following this one that is a neume, we create a custod for it\r\n    for (var i = this.scoreNotationStart + this.scoreNotationCount; i < this.score.notations.length; i++) {\r\n      var notation = this.score.notations[i];\r\n\r\n      if ('notes' in notation && notation.notes.length > 0) {\r\n\r\n        var custod = new Custod();\r\n        custod.referringNeume = notation;\r\n\r\n        custod.performLayout(ctxt);\r\n\r\n        if (this.notations.length > 0) {\r\n          var last = this.notations[this.notations.length - 1];\r\n          custod.bounds.x = last.bounds.x + last.bounds.width;\r\n        }\r\n\r\n        this.custod = custod;\r\n        this.notations.push(custod);\r\n\r\n        extraSpace -= custod.bounds.width + custod.leadingSpace;\r\n\r\n        // nothing more to see here...\r\n        break;\r\n      }\r\n    }\r\n\r\n    if (width <= 0 && this.notations.length > 0) {\r\n      // set the staff width based on the notations.\r\n      this.staffRight = this.notations[this.notations.length - 1].bounds.right();\r\n    }\r\n\r\n    // Justify the line if we are not the last one\r\n    if (this.justify === true && width > 0 && this.scoreNotationStart + this.scoreNotationCount < this.score.notations.length && extraSpace > 0)\r\n      this.justifyElements(extraSpace);\r\n  }\r\n\r\n\r\n  justifyElements(extraSpace) {\r\n\r\n    var indices = [];\r\n\r\n    var prev = null, curr = null, prevWithLyrics = null;\r\n\r\n    // if we have a custod, place it at the end of the line\r\n    if (this.custod != null) \r\n      this.custod.bounds.x = this.staffRight - this.custod.bounds.width - this.custod.leadingSpace;\r\n\r\n    // first pass: determine the neumes we can space apart\r\n    // start at 1 to skip the clef\r\n    for (var i = 1; i < this.notations.length - 1; i++) {\r\n\r\n      if (curr != null && curr.hasLyric())\r\n        prevWithLyrics = curr;\r\n\r\n      prev = curr;\r\n      curr = this.notations[i];\r\n\r\n      if (prev != null && prev.keepWithNext === true)\r\n        continue;\r\n\r\n      if (prevWithLyrics != null && prevWithLyrics.lyric.allowsConnector() && !prevWithLyrics.lyric.needsConnector)\r\n        continue;\r\n\r\n      if (curr.constructor.name == 'ChantLineBreak')\r\n        continue;\r\n\r\n      // otherwise, we can add space before this element\r\n      indices.push(i);\r\n    }\r\n\r\n    if (indices.length == 0)\r\n      return;\r\n\r\n    var offset = 0;\r\n    var increment = extraSpace / indices.length;\r\n    var lastIndex = (this.notations[this.notations.length - 1].constructor.name == 'Custod') ? this.notations.length - 1 : this.notations.length;\r\n    for (var i = 1; i < lastIndex; i++) {\r\n\r\n      curr = this.notations[i];\r\n\r\n      if (indices.indexOf(i) >= 0) {\r\n        curr.bounds.x += offset + increment;\r\n        offset += increment;\r\n      } else\r\n        curr.bounds.x += offset;\r\n    }\r\n\r\n    offset = offset;\r\n  }\r\n\r\n\r\n  // this is where the real core of positioning neumes takes place\r\n  // returns true if positioning was able to fit the neume before rightBoundary.\r\n  // returns false if cannot fit before given right margin.\r\n  // fixme: if this returns false, shouldn't we set the connectors on prev to be activated?!\r\n  positionNotationElement(ctxt, prevWithLyric, prev, curr, rightBoundary) {\r\n\r\n    // To begin we just place the current notation right after the previous,\r\n    // irrespective of lyrics.\r\n    curr.bounds.x = prev.bounds.right() + prev.trailingSpace;\r\n\r\n    if (prevWithLyric == null) {\r\n\r\n      var maxRight = curr.bounds.right() + curr.trailingSpace;\r\n\r\n      // if the lyric left is negative, then offset the neume appropriately\r\n      if (curr.hasLyric()) {\r\n        curr.lyric.setNeedsConnector(false); // we hope for the best!\r\n\r\n        if (curr.getLyricLeft() < 0)\r\n          curr.bounds.x += -curr.getLyricLeft();\r\n\r\n        maxRight = Math.max(maxRight, curr.getLyricRight());\r\n      }\r\n\r\n      if (maxRight > rightBoundary)\r\n        return false;\r\n      else\r\n        return true;\r\n    }\r\n\r\n    if (curr.hasLyric() === false) {\r\n\r\n      if (prevWithLyric.lyric.allowsConnector())\r\n        prevWithLyric.lyric.setNeedsConnector(true);\r\n\r\n      if (curr.bounds.right() + curr.trailingSpace < rightBoundary)\r\n        return true;\r\n      else {\r\n        //curr.bounds.x = this.startingClef.bounds.right();\r\n        return false;\r\n      }\r\n    }\r\n\r\n    curr.lyric.setNeedsConnector(false); // we hope for the best!\r\n\r\n    var currLyricLeft = curr.getLyricLeft();\r\n    var prevLyricRight = prevWithLyric.getLyricRight();\r\n\r\n    if (prevWithLyric.lyric.allowsConnector() === false) {\r\n\r\n      // No connector needed, but include space between words if necessary!\r\n      if (prevLyricRight + ctxt.minLyricWordSpacing > currLyricLeft) {\r\n        // push the current element over a bit.\r\n        curr.bounds.x += prevLyricRight + ctxt.minLyricWordSpacing - currLyricLeft;\r\n      }\r\n\r\n    } else {\r\n\r\n      // we may need a connector yet...\r\n\r\n      if (prevLyricRight > currLyricLeft) {\r\n        // in this case, the lyric elements actually overlap.\r\n        // so nope, no connector needed. instead, we just place the lyrics together\r\n        // fixme: for better text layout, we could actually use the kerning values\r\n        // between the prev and curr lyric elements!\r\n        curr.bounds.x += prevLyricRight - currLyricLeft;\r\n\r\n      } else {\r\n\r\n        // bummer, looks like we couldn't merge the syllables together. Better add a connector...\r\n        prevWithLyric.lyric.setNeedsConnector(true);\r\n        prevLyricRight = prevWithLyric.getLyricRight();\r\n\r\n        if (prevLyricRight > currLyricLeft)\r\n          curr.bounds.x += prevLyricRight - currLyricLeft;\r\n      }\r\n    }\r\n\r\n    if (curr.bounds.right() + curr.trailingSpace < rightBoundary)\r\n      return true;\r\n\r\n    // if we made it this far, then the element won't fit on this line.\r\n    // set the position of the current element to the beginning of a chant line,\r\n    // and mark the previous lyric as connecting if needed.\r\n    // curr.bounds.x = this.startingClef.bounds.right();\r\n\r\n    if (prevWithLyric.lyric != null && prevWithLyric.lyric.allowsConnector())\r\n      prevWithLyric.lyric.setNeedsConnector(true);\r\n\r\n    return false;\r\n  }\r\n}\r\n\r\n/*\r\n * Score, document\r\n */\r\nexport class ChantScore {\r\n\r\n  constructor() {\r\n\r\n    this.startingClef = null; // Clef\r\n\r\n    this.notations = [];\r\n    this.lines = [];\r\n    this.notes = [];\r\n\r\n    this.dropCap = null;\r\n    this.annotation = null;\r\n\r\n    this.compiled = false;\r\n\r\n    this.autoColoring = true;\r\n\r\n    // valid after chant lines are created...\r\n    this.bounds = new Rect();\r\n  }\r\n\r\n  performLayout(ctxt, finishedCallback) {\r\n\r\n    // first order of business: let the clef perform layout\r\n    this.startingClef.performLayout(ctxt);\r\n\r\n    if (this.dropCap)\r\n      this.dropCap.recalculateMetrics(ctxt);\r\n\r\n    if (this.annotation)\r\n      this.annotation.recalculateMetrics(ctxt);\r\n\r\n    // add all text items to the svg measurer in order to calculate their bounds\r\n    /*for (var i = 0; i < this.notations.length; i++) {\r\n      if (this.notations[i].hasLyric())\r\n        ctxt.svgTextMeasurer.insertAdjacentHTML('beforeend', this.notations[i].lyric.createDrawable(ctxt));\r\n    }\r\n\r\n    // annotations and drop caps\r\n    if (this.dropCap != null)\r\n      ctxt.svgTextMeasurer.insertAdjacentHTML('beforeend', this.dropCap.createDrawable(ctxt));\r\n\r\n    if (this.annotation != null)\r\n      ctxt.svgTextMeasurer.insertAdjacentHTML('beforeend', this.annotation.createDrawable(ctxt));\r\n*/\r\n\r\n    // give the system a chance to render the text items, then measure them\r\n    // and boot the compilation process\r\n    setTimeout(() => {\r\n      for (var i = 0; i < this.notations.length; i++) {\r\n        if (this.notations[i].hasLyric())\r\n          ;//this.notations[i].lyric.updateMetricsFromSvg();\r\n      }\r\n\r\n      this.compileElement(ctxt, 0, finishedCallback);\r\n    }, 0);\r\n  }\r\n\r\n  compileElement(ctxt, index, finishedCallback) {\r\n\r\n    if (index >= this.notations.length) {\r\n\r\n      if (!this.compiled) {\r\n        this.compiled = true;\r\n        setTimeout(() => {\r\n          if (finishedCallback)\r\n            finishedCallback();\r\n        }, 0);\r\n      }\r\n\r\n      return;\r\n    }\r\n\r\n    var timeout = new Date().getTime() + 50; // process for fifty milliseconds\r\n    do {\r\n      var notation = this.notations[index++];\r\n      notation.performLayout(ctxt);\r\n    } while (index < this.notations.length && timeout < new Date().getTime());\r\n\r\n    // schedule the next block of processing\r\n    setTimeout(() => {\r\n      this.compileElement(ctxt, index, finishedCallback);\r\n    }, 0);\r\n  }\r\n\r\n  layoutChantLines(ctxt, width, finishedCallback) {\r\n\r\n    this.lines = [];\r\n\r\n    var y = 0;\r\n    var currIndex = 0;\r\n\r\n    if (ctxt.activeClef == null)\r\n      ctxt.activeClef = this.startingClef;\r\n\r\n    do {\r\n\r\n      var line = new ChantLine(this);\r\n\r\n      line.buildFromChantNotationIndex(ctxt, currIndex, width);\r\n      currIndex += line.scoreNotationCount;\r\n      line.performLayout(ctxt);\r\n      this.lines.push(line);\r\n\r\n      line.bounds.y = -line.bounds.y + y;\r\n      y += line.bounds.height + ctxt.staffInterval * 3;\r\n\r\n    } while (currIndex < this.notations.length);\r\n\r\n    var lastLine = this.lines[this.lines.length - 1];\r\n\r\n    this.bounds.x = 0;\r\n    this.bounds.y = 0;\r\n    this.bounds.width = lastLine.bounds.width;\r\n    this.bounds.height = y;\r\n\r\n    if (finishedCallback)\r\n      finishedCallback(this);\r\n  }\r\n\r\n  createDrawable(ctxt) {\r\n\r\n    var drawable = \"\";\r\n\r\n    // create defs section\r\n    for (var def in ctxt.defs)\r\n      drawable += ctxt.defs[def];\r\n\r\n    drawable = QuickSvg.createFragment('defs', {}, drawable);\r\n\r\n    for (var i = 0; i < this.lines.length; i++)\r\n      drawable += this.lines[i].createDrawable(ctxt);\r\n\r\n    drawable = QuickSvg.createFragment('g', {}, drawable);\r\n\r\n    drawable = QuickSvg.createFragment('svg', {\r\n      'xmlns': 'http://www.w3.org/2000/svg',\r\n      'version': '1.1',\r\n      'xmlns:xlink': 'http://www.w3.org/1999/xlink',\r\n      'class': 'ChantScore',\r\n      'width': this.bounds.width,\r\n      'height': this.bounds.height\r\n    }, drawable);\r\n\r\n    return drawable;\r\n  }\r\n\r\n  prepareNotesForAudio() {\r\n\r\n    this.notes = [];\r\n\r\n    // run through all of the notations...\r\n    var prevNeume = null;\r\n    var currNotation = null;\r\n    for (var i = 0; i < this.notations.length; i++) {\r\n      var currNotation = this.notations[i];\r\n\r\n      if (typeof currNotation.notes !== 'undefined') {\r\n\r\n        // copy the notes to the score for playback\r\n        for (var j = 0; j < currNotation.notes.length; j++)\r\n          this.notes.push(currNotation.notes[j]);\r\n\r\n        prevNeume = currNotation;\r\n      } else {\r\n        // not a neume...if it's a full bar or a double bar, we can lengthen the notes here\r\n        if (prevNeume != null && currNotation.constructor.name == 'FullBar' || currNotation.constructor.name == 'DoubleBar') {\r\n\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  unserializeFromJson(data) {\r\n    this.autoColoring = data['auto-coloring'];\r\n\r\n    if (data.annotation != null && data.annotation != \"\") {\r\n      // create the annotation\r\n      this.annotation = new Annotation(ctxt, data.annotation);\r\n    } else\r\n      this.annotation = null;\r\n\r\n    var createDropCap = data['drop-cap'] == 'auto' ? true : false;\r\n\r\n    Gabc.parseChantNotations(data.notations, this, createDropCap);\r\n  }\r\n\r\n  serializeToJson() {\r\n    var data = {};\r\n\r\n    data['type'] = \"score\";\r\n    data['auto-coloring'] = true;\r\n\r\n    if (this.annotation != null)\r\n      data.annotation = this.annotation.unsanitizedText;\r\n    else\r\n      data.annotation = \"\";\r\n\r\n    \r\n\r\n    return data;\r\n  }\r\n}\r\n\r\nexport class ChantDocument {\r\n  constructor() {\r\n\r\n    var defaults = {\r\n      layout: {\r\n        units: \"mm\",\r\n        'default-font': {\r\n          'font-family': \"Crimson\",\r\n          'font-size': 14\r\n        },\r\n        page: {\r\n          width: 8.5,\r\n          height: 11,\r\n          'margin-left': 0,\r\n          'margin-top': 0,\r\n          'margin-right': 0,\r\n          'margin-bottom': 0,\r\n        }\r\n      },\r\n      scores: [],\r\n    };\r\n\r\n    // default layout\r\n    this.copyLayout(this, defaults);\r\n\r\n    this.scores = defaults.scores;\r\n  }\r\n\r\n  copyLayout(to, from) {\r\n\r\n    to.layout = {\r\n      units: from.layout.units,\r\n      'default-font': {\r\n        'font-family': from.layout['default-font']['font-family'],\r\n        'font-size': from.layout['default-font']['font-size']\r\n      },\r\n      page: {\r\n        width: from.layout.page.width,\r\n        height: from.layout.page.height,\r\n        'margin-left': from.layout.page['margin-left'],\r\n        'margin-top': from.layout.page['margin-top'],\r\n        'margin-right': from.layout.page['margin-right'],\r\n        'margin-bottom': from.layout.page['margin-bottom'],\r\n      }\r\n    };\r\n  }\r\n\r\n  unserializeFromJson(data) {\r\n\r\n    this.copyLayout(this, data);\r\n\r\n    this.scores = [];\r\n\r\n    // read in the scores\r\n    for (var i = 0; i < data.scores.length; i++) {\r\n      var score = new ChantScore();\r\n\r\n      score.unserializeFromJson(data.scores[i]);\r\n      this.scores.push(score);\r\n    }\r\n  }\r\n\r\n  serializeToJson() {\r\n    var data = {};\r\n\r\n    this.copyLayout(data, this);\r\n\r\n    data.scores = [];\r\n\r\n    // save scores...\r\n    for (var i = 0; i < this.scores.length; i++)\r\n      data.scores.push(this.scores[i].serializeToJson());\r\n\r\n    return data;\r\n  }\r\n}\r\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/Exsurge.Chant.js\n **/","//\r\n// Author(s):\r\n// Fr. Matthew Spencer, OSJ <mspencer@osjusa.org>\r\n//\r\n// Copyright (c) 2008-2016 Fr. Matthew Spencer, OSJ\r\n//\r\n// Permission is hereby granted, free of charge, to any person obtaining a copy\r\n// of this software and associated documentation files (the \"Software\"), to deal\r\n// in the Software without restriction, including without limitation the rights\r\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\n// copies of the Software, and to permit persons to whom the Software is\r\n// furnished to do so, subject to the following conditions:\r\n//\r\n// The above copyright notice and this permission notice shall be included in\r\n// all copies or substantial portions of the Software.\r\n//\r\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n// THE SOFTWARE.\r\n//\r\n\r\nimport * as Exsurge from './Exsurge.Core'\r\nimport { ctxt, GlyphCode, GlyphVisualizer, DividerLineVisualizer, ChantNotationElement } from './Exsurge.Drawing'\r\n\r\n/*\r\n *\r\n */\r\nexport class Custod extends ChantNotationElement {\r\n\r\n  constructor() {\r\n    super();\r\n    this.referringNeume = null;\r\n    this.note = null;\r\n  }\r\n\r\n  performLayout(ctxt) {\r\n    super.performLayout(ctxt);\r\n\r\n    var staffPosition = 0; // a default value just to make sure we don't fail rebuilding\r\n    var glyphCode;\r\n\r\n    if (this.referringNeume != null) {\r\n      if (this.referringNeume.notes.length > 0)\r\n        staffPosition = this.referringNeume.notes[0].staffPosition;\r\n    } else if (note != null)\r\n      staffPosition = this.note.staffPosition;\r\n\r\n    glyphCode = Custod.getGlyphCode(staffPosition);\r\n\r\n    var glyph = new GlyphVisualizer(ctxt, glyphCode);\r\n    glyph.setStaffPosition(ctxt, staffPosition);\r\n    this.addVisualizer(glyph);\r\n\r\n    this.finishLayout(ctxt);\r\n  }\r\n\r\n  static getGlyphCode(staffPosition) {\r\n\r\n    if (staffPosition <= 2) {\r\n\r\n      // ascending custodes\r\n      if (Math.abs(staffPosition) % 2 == 1)\r\n        return GlyphCode.CustodLong;\r\n      else\r\n        return GlyphCode.CustodShort;\r\n    } else {\r\n\r\n      // descending custodes\r\n      if (Math.abs(staffPosition) % 2 == 1)\r\n        return GlyphCode.CustodDescLong;\r\n      else\r\n        return GlyphCode.CustodDescShort;\r\n    }\r\n  }\r\n}\r\n\r\n/*\r\n * DividingLine\r\n */\r\nexport class DividingLine extends ChantNotationElement {\r\n\r\n  constructor() {\r\n    super();\r\n\r\n    this.resetsAccidentals = true;\r\n  }\r\n}\r\n\r\n/*\r\n * QuarterBar\r\n */\r\nexport class QuarterBar extends DividingLine {\r\n\r\n  performLayout(ctxt) {\r\n    super.performLayout(ctxt);\r\n    this.addVisualizer(new DividerLineVisualizer(ctxt, 2, 4));\r\n\r\n    this.origin.x = this.bounds.width / 2;\r\n\r\n    this.finishLayout(ctxt);\r\n  }\r\n}\r\n\r\n/*\r\n * HalfBar\r\n */\r\nexport class HalfBar extends DividingLine {\r\n\r\n  performLayout(ctxt) {\r\n    super.performLayout(ctxt);\r\n\r\n    this.addVisualizer(new DividerLineVisualizer(ctxt, -2, 2));\r\n\r\n    this.origin.x = this.bounds.width / 2;\r\n\r\n    this.finishLayout(ctxt);\r\n  }\r\n}\r\n\r\n/*\r\n * FullBar\r\n */\r\nexport class FullBar extends DividingLine {\r\n\r\n  performLayout(ctxt) {\r\n    super.performLayout(ctxt);\r\n    \r\n    this.addVisualizer(new DividerLineVisualizer(ctxt, -3, 3));\r\n\r\n    this.origin.x = this.bounds.width / 2;\r\n\r\n    this.finishLayout(ctxt);\r\n  }\r\n}\r\n\r\n/*\r\n * DoubleBar\r\n */\r\nexport class DoubleBar extends DividingLine {\r\n\r\n  performLayout(ctxt) {\r\n    super.performLayout(ctxt);\r\n\r\n    var line0 = new DividerLineVisualizer(ctxt, -3, 3);\r\n    line0.bounds.x = 0;\r\n    this.addVisualizer(line0);\r\n\r\n    var line1 = new DividerLineVisualizer(ctxt, -3, 3);\r\n    line1.bounds.x = ctxt.intraNeumeSpacing * 2;\r\n    this.addVisualizer(line1);\r\n\r\n    this.origin.x = this.bounds.width / 2;\r\n\r\n    this.finishLayout(ctxt);\r\n  }\r\n}\r\n\r\nexport const AccidentalType = {\r\n  Flat: -1,\r\n  Natural: 0,\r\n  Sharp: 1,\r\n};\r\n\r\n/*\r\n * Accidental\r\n */\r\nexport class Accidental extends ChantNotationElement {\r\n\r\n  constructor(staffPosition, accidentalType) {\r\n    super();\r\n    this.isAccidental = true;\r\n    this.keepWithNext = true; // accidentals should always stay connected...\r\n    \r\n    this.staffPosition = staffPosition;\r\n    this.accidentalType = accidentalType;\r\n  }\r\n\r\n  performLayout(ctxt) {\r\n    super.performLayout(ctxt);\r\n\r\n    var glyphCode = GlyphCode.Flat;\r\n\r\n    switch (this.accidentalType) {\r\n      case AccidentalType.Natural:\r\n        glyphCode = GlyphCode.Natural;\r\n        break;\r\n      case AccidentalType.Sharp:\r\n        glyphCode = GlyphCode.Sharp;\r\n        break;\r\n      default:\r\n        glyphCode = GlyphCode.Flat;\r\n        break;\r\n    }\r\n\r\n    var glyph = new GlyphVisualizer(ctxt, glyphCode);\r\n    glyph.setStaffPosition(ctxt, this.staffPosition);\r\n\r\n    this.addVisualizer(glyph);\r\n\r\n    this.finishLayout(ctxt);\r\n  }\r\n\r\n  adjustStep(step) {\r\n    switch (this.accidentalType) {\r\n      case AccidentalType.Flat:\r\n        if (step == Step.Ti) return Step.Te;\r\n        if (step == Step.Mi) return Step.Me;\r\n        break;\r\n      case AccidentalType.Sharp:\r\n        if (step == Step.Do) return Step.Du;\r\n        if (step == Step.Fa) return Step.Fu;\r\n        break;\r\n      case AccidentalType.Natural:\r\n        if (step == Step.Te) return Step.Ti;\r\n        if (step == Step.Me) return Step.Mi;\r\n        if (step == Step.Du) return Step.Do;\r\n        if (step == Step.Fu) return Step.Fa;\r\n        break;\r\n    }\r\n\r\n    // no adjustment needed\r\n    return step;\r\n  }\r\n\r\n  applyToPitch(pitch) {\r\n\r\n    // fixme: this is broken since we changed to staff positions\r\n\r\n    // no adjusment needed\r\n    if (this.octave != pitch.octave)\r\n      return;\r\n\r\n    pitch.step = this.adjustStep(pitch.step);\r\n  }\r\n}\r\n\r\n/*\r\n * Virgula\r\n */\r\nexport class Virgula extends ChantNotationElement {\r\n\r\n  constructor() {\r\n    super();\r\n\r\n    // fixme: the staff position of the virgula is customizable, so that it\r\n    // can be placed on different lines (top or bottom) depending on the\r\n    // notation tradition of what is being notated (e.g., Benedictine has it\r\n    //  on top line, Norbertine at the bottom)\r\n    this.staffPosition = 3;\r\n  }\r\n\r\n  performLayout(ctxt) {\r\n    super.performLayout(ctxt);\r\n\r\n    var glyph = new GlyphVisualizer(ctxt, GlyphCode.Virgula);\r\n    glyph.setStaffPosition(ctxt, this.staffPosition);\r\n\r\n    this.addVisualizer(glyph);\r\n\r\n    this.origin.x = this.bounds.width / 2;\r\n\r\n    this.finishLayout(ctxt);\r\n  }\r\n}\r\n\r\n\r\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/Exsurge.Chant.Signs.js\n **/","//\r\n// Author(s):\r\n// Fr. Matthew Spencer, OSJ <mspencer@osjusa.org>\r\n//\r\n// Copyright (c) 2008-2016 Fr. Matthew Spencer, OSJ\r\n//\r\n// Permission is hereby granted, free of charge, to any person obtaining a copy\r\n// of this software and associated documentation files (the \"Software\"), to deal\r\n// in the Software without restriction, including without limitation the rights\r\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\n// copies of the Software, and to permit persons to whom the Software is\r\n// furnished to do so, subject to the following conditions:\r\n//\r\n// The above copyright notice and this permission notice shall be included in\r\n// all copies or substantial portions of the Software.\r\n//\r\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n// THE SOFTWARE.\r\n//\r\n\r\nimport { Units, Pitch, Point, Rect, Margins, Size, Step, MarkingPositionHint } from './Exsurge.Core'\r\nimport { LyricType, Lyric, DropCap } from './Exsurge.Drawing'\r\nimport { Note, NoteShape, ChantScore, ChantDocument, Clef, DoClef, FaClef, ChantLineBreak } from './Exsurge.Chant'\r\nimport * as Markings from './Exsurge.Chant.Markings'\r\nimport * as Signs from './Exsurge.Chant.Signs'\r\nimport * as Neumes from './Exsurge.Chant.Neumes'\r\nimport { ctxt } from './Exsurge.Drawing'\r\n\r\n\r\n\r\n// reusable reg exps\r\nvar __syllablesRegex = /(?=.)((?:[^(])*)(?:\\(?([^)]*)\\)?)?/g;\r\nvar __notationsRegex = /z0|z|Z|::|:|;|,|`|c1|c2|c3|c4|f3|f4|cb3|cb4|\\/\\/|\\/|\\!|[a-mA-M][owWvVrRsxy#~\\+><_\\.'012345]*/g;\r\n\r\nexport var Gabc = {\r\n\r\n  loadChantScore: function (ctxt, gabcNotations, createDropCap) {\r\n\r\n    var score = new ChantScore();\r\n\r\n    // fixme: no dropcap until the text engine is working again\r\n    this.parseChantNotations(ctxt, gabcNotations, score, createDropCap);\r\n\r\n    score.prepareNotesForAudio();\r\n\r\n    return score;\r\n  },\r\n\r\n  parseChantNotations: function (ctxt, gabcNotations, score, createDropCap) {\r\n\r\n    score.notations = [];\r\n\r\n    var passByRef = {\r\n      activeClef: null\r\n    };\r\n\r\n    // split the notations on whitespace boundaries\r\n    var words = gabcNotations.match(/\\S+/g);\r\n\r\n    for (var i = 0; i < words.length; i++) {\r\n      var word = words[i];\r\n\r\n      var currSyllable = 0;\r\n\r\n      if (word == '')\r\n        continue;\r\n\r\n      word = word.trim()\r\n\r\n      var matches = [];\r\n      \r\n      while (match = __syllablesRegex.exec(word))\r\n        matches.push(match);\r\n\r\n      for (var j = 0; j < matches.length; j++) {\r\n        var match = matches[j];\r\n\r\n        var lyricText = match[1].trim();\r\n        var notationData = match[2];\r\n\r\n        var items = this.createNotations(ctxt, score, notationData, passByRef);\r\n\r\n        if (items.length == 0)\r\n          continue;\r\n\r\n        // if we are to create a dropCap and we haven't done so yet, do it now\r\n        if (createDropCap && score.dropCap == null && lyricText != \"\") {\r\n          score.dropCap = new DropCap(ctxt, lyricText.substring(0, 1));\r\n          lyricText = lyricText.substring(1);\r\n        }\r\n\r\n        // create lyric if we have it...\r\n        if (lyricText != \"\") {\r\n\r\n          var lyricType;\r\n          if (currSyllable == 0 && matches.length == 1)\r\n            lyricType = LyricType.SingleSyllable;\r\n          else if (currSyllable == 0 && matches.length > 1)\r\n            lyricType = LyricType.BeginningSyllable;\r\n          else if (currSyllable == matches.length - 1)\r\n            lyricType = LyricType.EndingSyllable;\r\n          else\r\n            lyricType = LyricType.MiddleSyllable;\r\n\r\n          // add the lyrics to the first notation that makes sense...\r\n          var notationWithLyrics = null;\r\n          for (var k = 0; k < items.length; k++) {\r\n            var cne = items[k];\r\n            if (cne.constructor.name == \"Accidental\")\r\n              continue;\r\n\r\n            notationWithLyrics = cne;\r\n            break;\r\n          }\r\n\r\n          // if it's not a neume then make the lyric a directive\r\n          if (notationWithLyrics.notes == null)\r\n            lyricType = LyricType.Directive;\r\n\r\n          var lyric = this.makeLyric(ctxt, lyricText, lyricType);\r\n\r\n          // also, new words reset the accidentals, per the Solesmes style (see LU xviij)\r\n          if (lyric.lyricType == LyricType.BeginningSyllable ||\r\n            lyric.lyricType == LyricType.SingleSyllable)\r\n            passByRef.activeClef.resetAccidentals();\r\n\r\n          // fixme: lyrics are broken! for now, just ignore them\r\n          notationWithLyrics.lyric = lyric;\r\n        }\r\n\r\n        score.notations = score.notations.concat(items);\r\n\r\n        currSyllable++;\r\n      }\r\n    }\r\n  },\r\n\r\n  makeLyric: function (ctxt, text, lyricType) {\r\n\r\n    if (text.length > 1 && text[text.length - 1] == '-') {\r\n      if (lyricType == LyricType.EndingSyllable)\r\n        lyricType = LyricType.MiddleSyllable;\r\n      else if (lyricType == LyricType.SingleSyllable)\r\n        lyricType = LyricType.BeginningSyllable;\r\n\r\n      text = text.substring(0, text.length - 1);\r\n    }\r\n\r\n    var elides = false;\r\n    if (text.length > 1 && text[text.length - 1] == '_') {\r\n      // must be an elision\r\n      elides = true;\r\n      text = text.substring(0, text.length - 1);\r\n    }\r\n\r\n    // replace special gabc characters\r\n    text = text.replace(\"<sp>R/</sp>\", \"R/\");\r\n    text = text.replace(\"<sp>V/</sp>\", \"V/\");\r\n\r\n    // check for italic/bold in the silliest way possible\r\n    // only works if italic is the outer tag\r\n    var italic = false;\r\n    if (text.startsWith('<i>') && text.endsWith('</i>')) {\r\n      text = text.substring(3, text.length - 4);\r\n      italic = true;\r\n    }\r\n\r\n    var bold = false;\r\n    if (text.startsWith('<b>') && text.endsWith('</b>')) {\r\n      text = text.substring(3, text.length - 4);\r\n      bold = true\r\n    }\r\n\r\n    var s = new Lyric(ctxt, text, lyricType);\r\n    s.elidesToNext = elides;\r\n\r\n    if (italic)\r\n      s.italic = true;\r\n    \r\n    if (bold)\r\n      s.bold = true;\r\n\r\n    // a hack to make the response/versicle characters work...\r\n    //if (text.search('℟') >= 0 || text.search('℣') >= 0)\r\n    //  s.NativeText.font = new Font(\"Arial Unicode MS\");\r\n\r\n    return s;\r\n  },\r\n\r\n  createNotations: function (ctxt, score, data, passByRef) {\r\n\r\n    var notations = [];\r\n\r\n    // if there is no data, then this must be a text only object\r\n    if (data === undefined || data === null || data === \"\") {\r\n      notations.push(new Neumes.TextOnly());\r\n      return notations;\r\n    }\r\n\r\n    var notes = [];\r\n    var out = { trailingSpace: -1 };\r\n\r\n    var that = this;\r\n    var addNotation = function(notation) {\r\n\r\n      // first, if we have any notes left over, we create a neume out of them\r\n      if (notes.length > 0) {\r\n        // create neume(s)\r\n\r\n        var neumes = that.createNeumesFromNotes(ctxt, score, notes, out.trailingSpace);\r\n        for (var i = 0; i < neumes.length; i++)\r\n          notations.push(neumes[i]);\r\n\r\n        // reset the trailing space\r\n        out.trailingSpace = -1;\r\n\r\n        notes = [];\r\n      }\r\n\r\n      // then, if we're passed a notation, let's add it\r\n      // also, perform chant logic here\r\n      if (notation != null) {\r\n\r\n        if (notation.isClef) {\r\n          if (score.startingClef == null) {\r\n            score.startingClef = notation;\r\n            return;\r\n          }\r\n        } else if (notation.isAccidental)\r\n          passByRef.activeClef.activeAccidental = notation;\r\n        else if (notation.resetsAccidentals)\r\n          passByRef.activeClef.resetAccidentals();\r\n\r\n          notations.push(notation);\r\n      }\r\n    };\r\n\r\n    var atoms = data.match(__notationsRegex);\r\n\r\n    for (var i = 0; i < atoms.length; i++) {\r\n\r\n      var atom = atoms[i], lineBreak = null;\r\n\r\n      // handle the clefs and dividers here\r\n      switch (atom) {\r\n        case \",\":\r\n          addNotation(new Signs.QuarterBar());\r\n          break;\r\n        case \"`\":\r\n          addNotation(new Signs.Virgula());\r\n          break;\r\n        case \";\":\r\n          addNotation(new Signs.HalfBar());\r\n          break;\r\n        case \":\":\r\n          addNotation(new Signs.FullBar());\r\n          break;\r\n        case \"::\":\r\n          addNotation(new Signs.DoubleBar());\r\n          break;\r\n          // other gregorio dividers are not supported\r\n\r\n        case \"c1\":\r\n          passByRef.activeClef = new DoClef(-3, 2);\r\n          addNotation(passByRef.activeClef);\r\n          break;\r\n\r\n        case \"c2\":\r\n          passByRef.activeClef = new DoClef(-1, 2);\r\n          addNotation(passByRef.activeClef);\r\n          break;\r\n\r\n        case \"c3\":\r\n          passByRef.activeClef = new DoClef(1, 2);\r\n          addNotation(passByRef.activeClef);\r\n          break;\r\n\r\n        case \"c4\":\r\n          passByRef.activeClef = new DoClef(3, 2);\r\n          addNotation(passByRef.activeClef);\r\n          break;\r\n\r\n        case \"f3\":\r\n          passByRef.activeClef = new FaClef(1, 2);\r\n          addNotation(passByRef.activeClef);\r\n          break;\r\n\r\n        case \"f4\":\r\n          passByRef.activeClef = new FaClef(3, 2);\r\n          addNotation(passByRef.activeClef);\r\n          break;\r\n\r\n        case \"cb3\":\r\n          passByRef.activeClef = new DoClef(1, 2);\r\n          passByRef.activeClef.defaultAccidental = new Accidental(Step.Te, passByRef.activeClef.octave, Signs.AccidentalType.Flat);\r\n          addNotation(passByRef.activeClef);\r\n          break;\r\n\r\n        case \"cb4\":\r\n          passByRef.activeClef = new DoClef(3, 2);\r\n          passByRef.activeClef.defaultAccidental = new Accidental(Step.Te, passByRef.activeClef.octave, Signs.AccidentalType.Flat);\r\n          addNotation(passByRef.activeClef);\r\n          break;\r\n\r\n          case \"z\":\r\n            lineBreak = new ChantLineBreak(true);\r\n            addNotation(lineBreak);\r\n            break;\r\n          case \"Z\":\r\n            lineBreak = new ChantLineBreak(false);\r\n            addNotation(lineBreak);\r\n            break;\r\n          case \"z0\":\r\n            // unsupported for now...\r\n            break;\r\n\r\n          // spacing indicators\r\n          case \"!\":\r\n            out.trailingSpace = 0;\r\n            addNotation(null);\r\n            break;\r\n          case \"/\":\r\n            out.trailingSpace = ctxt.intraNeumeSpacing;\r\n            addNotation(null);\r\n            break;\r\n          case \"//\":\r\n            out.trailingSpace = ctxt.intraNeumeSpacing * 2;\r\n            addNotation(null);\r\n            break;\r\n\r\n\r\n          default:\r\n            // might be a custod, might be an accidental, or might be a note\r\n            if (atom.length > 1 && atom[1] == '+') {\r\n              // custod\r\n              var custod = new Custod();\r\n\r\n              custod.note = new Note(this.convertGabcStaffPositionToScribamPitch(passByRef.activeClef, data[0]));\r\n\r\n              addNotation(custod);\r\n\r\n            } else if (atom.length > 1 && (atom[1] == 'x' || atom[1] == 'y' || atom[1] == '#')) {\r\n\r\n              var accidentalType;\r\n\r\n              switch (atom[1]) {\r\n                case 'y':\r\n                  accidentalType = Signs.AccidentalType.Natural;\r\n                  break;\r\n                case '#':\r\n                  accidentalType = Signs.AccidentalType.Sharp;\r\n                  break;\r\n                default:\r\n                  accidentalType = Signs.AccidentalType.Flat;\r\n                  break;\r\n              }\r\n\r\n              var note = this.createNoteFromData(passByRef.activeClef, atom);\r\n              var accidental = new Signs.Accidental(note.staffPosition, accidentalType);\r\n              accidental.trailingSpace = ctxt.intraNeumeSpacing * 2;\r\n\r\n              passByRef.activeClef.activeAccidental = accidental;\r\n              \r\n              addNotation(accidental);\r\n            } else {\r\n\r\n              // to make our interpreter more robust, make sure we have a clef to work with\r\n              if (passByRef.activeClef == null)\r\n                passByRef.activeClef = new DoClef(1, 2);\r\n\r\n              // looks like it's a note\r\n              notes.push(this.createNoteFromData(passByRef.activeClef, atom));\r\n            }\r\n            break;\r\n      }\r\n    }\r\n\r\n    // finish up any remaining notes we have left\r\n    addNotation(null);\r\n\r\n    return notations;\r\n  },\r\n\r\n  createNeumesFromNotes: function (ctxt, score, notes, finalTrailingSpace) {\r\n    \r\n    var neumes = [];\r\n    var intraNeumeSpacing = ctxt.intraNeumeSpacing;\r\n\r\n    var prevNote = null, currNote = null;\r\n    var firstNoteIndex = 0;\r\n    var currNoteIndex = 0;\r\n\r\n    // here we use a simple finite state machine to create the neumes from the notes\r\n    // createNeume is helper function which returns the next state after a neume is created\r\n    // (unknownState). Each state object has a neume() function and a handle() function.\r\n    // neume() allows us to create the neume of the state in the event that we run out\r\n    // of notes. handle() gives the state an opportunity to examine the currNote and\r\n    // determine what to do...either transition to a different neume/state, or\r\n    // continue building the neume of that state. handle() returns the next state\r\n\r\n    var createNeume = function (neume, includeCurrNote) {\r\n\r\n      // add the notes to the neume\r\n      var lastNoteIndex = includeCurrNote ? currNoteIndex : currNoteIndex - 1;\r\n      for (var i = firstNoteIndex; i <= lastNoteIndex; i++)\r\n        neume.notes.push(notes[i]);\r\n\r\n      neumes.push(neume);\r\n\r\n      if (includeCurrNote === false) {\r\n        firstNoteIndex = currNoteIndex;\r\n        currNoteIndex--;\r\n        neume.keepWithNext = true;\r\n        neume.trailingSpace = intraNeumeSpacing;\r\n      }\r\n\r\n      return unknownState;\r\n    };\r\n\r\n    var unknownState = {\r\n      neume: function() {\r\n        return new Punctum();\r\n      },\r\n      handle: function(currNote, prevNote) {\r\n      \r\n        switch (currNote.shape) {\r\n          case NoteShape.Apostropha:\r\n            return apostrophaState;\r\n          case NoteShape.Cavum:\r\n            return createNeume(new Punctum(), true);\r\n          case NoteShape.OriscusAscending:\r\n            break;\r\n          case NoteShape.OriscusDescending:\r\n            break;\r\n          case NoteShape.Virga:\r\n            return virgaState;\r\n          default:\r\n            return punctumState;\r\n        }\r\n      }\r\n    };\r\n\r\n    var punctumState = {\r\n      neume: function() {\r\n        return new Neumes.Punctum();\r\n      },\r\n      handle: function(currNote, prevNote) {\r\n        \r\n        if (currNote.staffPosition > prevNote.staffPosition)\r\n          return podatusState;\r\n        else if (currNote.staffPosition < prevNote.staffPosition) {\r\n          if (currNote.shape == NoteShape.Inclinatum)\r\n            return climacusState;\r\n          else\r\n            return clivisState;\r\n        } else\r\n          return distrophaState;\r\n      }\r\n    };\r\n\r\n    var oriscusState = {\r\n      neume: function() {\r\n        return new Neumes.Oriscus();\r\n      },\r\n      handle: function(currNote, prevNote) {\r\n        \r\n        if (currNote.shape == NoteShape.Default && currNote.staffPosition > prevNote.staffPosition)\r\n          return podatusState;\r\n        else\r\n          // stand alone oriscus\r\n          return createNeume(new Neumes.Oriscus(), true);\r\n      }\r\n    };\r\n\r\n    var podatusState = {\r\n      neume: function() {\r\n        return new Neumes.Podatus();\r\n      },\r\n      handle: function(currNote, prevNote) {\r\n\r\n        if (currNote.staffPosition > prevNote.staffPosition) {\r\n          return scandicusState;\r\n        } else if (currNote.staffPosition < prevNote.staffPosition) {\r\n          if (currNote.shape == NoteShape.Inclinatum)\r\n            return pesSubpunctisState;\r\n          else\r\n            return torculusState;\r\n        } else\r\n          return createNeume(new Neumes.Podatus(), false);\r\n      }\r\n    };\r\n\r\n    var clivisState = {\r\n      neume: function() {\r\n        return new Neumes.Clivis();\r\n      },\r\n      handle: function(currNote, prevNote) {\r\n\r\n        if (currNote.shape == NoteShape.Default && currNote.staffPosition > prevNote.staffPosition)\r\n          return porrectusState;\r\n        else\r\n          return createNeume(new Neumes.Clivis(), false);\r\n      }\r\n    };\r\n\r\n    var climacusState = {\r\n      neume: function() {\r\n        return new Neumes.Climacus();\r\n      },\r\n      handle: function(currNote, prevNote) {\r\n        if (currNote.shape != NoteShape.Inclinatum)\r\n          return createNeume(this.neume(), false);\r\n        else\r\n          return state;\r\n      }\r\n    };\r\n\r\n    var porrectusState = {\r\n      neume: function() {\r\n        return new Neumes.Porrectus();\r\n      },\r\n      handle: function(currNote, prevNote) {\r\n\r\n        if (currNote.shape == NoteShape.Default && currNote.staffPosition < prevNote.staffPosition)\r\n          return createNeume(new Neumes.PorrectusFlexus(), true);\r\n        else\r\n          return createNeume(new Neumes.Porrectus(), false);\r\n      }\r\n    };\r\n\r\n    var pesSubpunctisState = {\r\n      neume: function() {\r\n        return new Neumes.PesSubpunctis();\r\n      },\r\n      handle: function(currNote, prevNote) {\r\n    \r\n        if (currNote.shape != NoteShape.Inclinatum)\r\n          return createNeume(new Neumes.PesSubpunctis(), false);\r\n        else\r\n          return state;\r\n      }\r\n    };\r\n\r\n    var scandicusState = {\r\n      neume: function() {\r\n        return new Neumes.Scandicus();\r\n      },\r\n      handle: function(currNote, prevNote) {\r\n\r\n        if (currNote.shape == NoteShape.Default && currNote.staffPosition < prevNote.staffPosition)\r\n          return scandicusFlexusState;\r\n        else\r\n          return createNeume(new Neumes.Scandicus(), false);\r\n      }\r\n    };\r\n\r\n    var scandicusFlexusState = {\r\n      neume: function() {\r\n        return new Neumes.ScandicusFlexus();\r\n      },\r\n      handle: function(currNote, prevNote) {\r\n        return createNeume(new Neumes.ScandicusFlexus(), false);\r\n      }\r\n    };\r\n\r\n    var virgaState = {\r\n      neume: function() {\r\n        return new Neumes.Virga();\r\n      },\r\n      handle: function(currNote, prevNote) {\r\n    \r\n        if (currNote.shape == NoteShape.Inclinatum && currNote.staffPosition < prevNote.staffPosition)\r\n          return climacusState;\r\n        else if (currNote.shape == NoteShape.Virga && currNote.staffPosition == prevNote.staffPosition)\r\n          return bivirgaState;\r\n        else\r\n          return createNeume(new Neumes.Virga(), false);\r\n      }\r\n    };\r\n\r\n    var bivirgaState = {\r\n      neume: function() {\r\n        return new Neumes.Bivirga();\r\n      },\r\n      handle: function(currNote, prevNote) {\r\n    \r\n        if (currNote.shape == NoteShape.Virga && currNote.staffPosition == prevNote.staffPosition)\r\n          return createNeume(new Neumes.Trivirga(), false);\r\n        else\r\n          return createNeume(new Neumes.Bivirga(), false);\r\n      }\r\n    };\r\n\r\n    var apostrophaState = {\r\n      neume: function() {\r\n        return new Neumes.Apostropha();\r\n      },\r\n      handle: function(currNote, prevNote) {\r\n        if (currNote.staffPosition == prevNote.staffPosition && currNote.shape == NoteShape.Apostropha)\r\n          return distrophaState;\r\n        else\r\n          return createNeume(new Neumes.Apostropha(), false);\r\n      }\r\n    };\r\n\r\n    var distrophaState = {\r\n      neume: function() {\r\n        return new Neumes.Distropha();\r\n      },\r\n      handle: function(currNote, prevNote) {\r\n        if (currNote.staffPosition == prevNote.staffPosition && currNote.shape == NoteShape.Apostropha)\r\n          return createNeume(new Neumes.Tristropha(), true);\r\n        else\r\n          return createNeume(new Neumes.Distropha(), false);\r\n      }\r\n    };\r\n\r\n    var torculusState = {\r\n      neume: function() {\r\n        return new Neumes.Torculus();\r\n      },\r\n      handle: function(currNote, prevNote) {\r\n        if (currNote.shape == NoteShape.Default && currNote.staffPosition > prevNote.staffPosition)\r\n          return torculusResupinusState;\r\n        else\r\n          return createNeume(new Neumes.Torculus(), false);\r\n      }\r\n    };\r\n\r\n    var torculusResupinusState = {\r\n      neume: function() {\r\n        return new Neumes.TorculusResupinus();\r\n      },\r\n      handle: function(currNote, prevNote) {\r\n        if (currNote.shape == NoteShape.Default && currNote.staffPosition < prevNote.staffPosition)\r\n          return createNeume(new Neumes.TorculusResupinusFlexus(), true);\r\n        else\r\n          return createNeume(new Neumes.TorculusResupinus(), false);\r\n      }\r\n    };\r\n\r\n    var state = unknownState;\r\n\r\n    while (currNoteIndex < notes.length) {\r\n\r\n      prevNote = currNote;\r\n      currNote = notes[currNoteIndex];\r\n\r\n      state = state.handle(currNote, prevNote);\r\n\r\n      // if we are on the last note, then try to create a neume if we need to.\r\n      if (currNoteIndex == notes.length - 1 && state != unknownState)\r\n        createNeume(state.neume(), true);\r\n\r\n      currNoteIndex++;\r\n    }\r\n\r\n    if (neumes.length > 0) {\r\n      if (finalTrailingSpace >= 0) {\r\n        neumes[neumes.length - 1].keepWithNext = true;\r\n        neumes[neumes.length - 1].trailingSpace = finalTrailingSpace;\r\n      }\r\n    }\r\n\r\n    return neumes;\r\n  },\r\n\r\n  createNoteFromData: function (clef, data) {\r\n\r\n    var note = new Note();\r\n\r\n    if (data.length < 1)\r\n      throw 'Invalid note data: ' + data;\r\n\r\n    if (data[0] == '-') { // liquescent\r\n      note.isLiquescent = true;\r\n      data = data.substring(1);\r\n    }\r\n\r\n    if (data.length < 1)\r\n      throw 'Invalid note data: ' + data;\r\n\r\n    // the next char is always the pitch\r\n    var pitch = this.convertGabcStaffPositionToScribamPitch(clef, data[0]);\r\n\r\n    if (data[0] == data[0].toUpperCase())\r\n      note.shape = NoteShape.Inclinatum;\r\n\r\n    note.staffPosition = this.convertGabcStaffPositionToScribamStaffPosition(clef, data[0]);\r\n    note.pitch = pitch;\r\n\r\n    // process the modifiers\r\n    for (var i = 1; i < data.length; i++) {\r\n\r\n      var c = data[i];\r\n      var lookahead = '\\0';\r\n\r\n      var haveLookahead = i + 1 < data.length;\r\n      if (haveLookahead)\r\n        lookahead = data[i + 1];\r\n\r\n      switch (c) {\r\n\r\n        // rhythmic markings\r\n        case '.':\r\n          note.markings.push(new Markings.Mora(note));\r\n          break;\r\n\r\n        case '_':\r\n          var mark = new Markings.HorizontalEpisema(note);\r\n          if (haveLookahead && lookahead == '0') {\r\n            mark.positionHint = MarkingPositionHint.Below;\r\n            i++;\r\n          }\r\n          note.markings.push(mark);\r\n          break;\r\n\r\n        case '\\'':\r\n          note.markings.push(new Markings.Ictus(note));\r\n          break;\r\n\r\n          //note shapes\r\n        case 'r':\r\n          if (haveLookahead && lookahead == '1') {\r\n            note.markings.push(new Markings.AcuteAccent(note));\r\n            i++;\r\n          } else\r\n            note.shape = NoteShape.Cavum;\r\n          break;\r\n\r\n        case 'v':\r\n          note.shape = NoteShape.Virga;\r\n          break;\r\n\r\n        case 'w':\r\n          note.shape = NoteShape.Quilisma;\r\n          break;\r\n\r\n        case 'o':\r\n          if (haveLookahead && lookahead == '<') {\r\n            note.shape = NoteShape.OriscusAscending;\r\n            i++;\r\n          } else if (haveLookahead && lookahead == '>') {\r\n            note.shape = NoteShape.OriscusDescending;\r\n            i++;\r\n          } else\r\n            note.shape = NoteShape.OriscusAscending;\r\n          break;\r\n\r\n        // liquescents\r\n        case '~':\r\n          note.isLiquescent = true;\r\n          break;\r\n        case '<':\r\n          note.isLiquescent = true;\r\n          note.shape = NoteShape.AscLiquescent;\r\n          break;\r\n        case '>':\r\n          note.isLiquescent = true;\r\n          note.shape = NoteShape.DesLiquescent;\r\n          break;\r\n\r\n        // accidentals\r\n        case 'x':\r\n          if (note.pitch.step == Step.Mi)\r\n            note.pitch.step = Step.Me;\r\n          else if (note.pitch.step == Step.Ti)\r\n            note.pitch.step = Step.Te;\r\n          break;\r\n        case 'y':\r\n          if (note.pitch.step == Step.Te)\r\n            note.pitch.step = Step.Ti;\r\n          else if (note.pitch.step == Step.Me)\r\n            note.pitch.step = Step.Mi;\r\n          else if (note.pitch.step == Step.Du)\r\n            note.pitch.step = Step.Do;\r\n          else if (note.pitch.step == Step.Fu)\r\n            note.pitch.step = Step.Fa;\r\n          break;\r\n        case '#':\r\n          if (note.pitch.step == Step.Do)\r\n            note.pitch.step = Step.Du;\r\n          else if (note.pitch.step == Step.Fa)\r\n            note.pitch.step = Step.Fu;\r\n          break;\r\n      }\r\n    }\r\n\r\n    return note;\r\n  },\r\n\r\n  // returns pitch\r\n  convertGabcStaffPositionToScribamStaffPosition: function (clef, gabcStaffPos) {\r\n    return gabcStaffPos.toLowerCase().charCodeAt(0) - 'a'.charCodeAt(0) - 6;\r\n  },\r\n\r\n  // returns pitch\r\n  convertGabcStaffPositionToScribamPitch: function (clef, gabcStaffPos) {\r\n    var scribamStaffPosition = this.convertGabcStaffPositionToScribamStaffPosition(clef, gabcStaffPos)\r\n\r\n    var pitch = clef.staffPositionToPitch(scribamStaffPosition);\r\n\r\n    if (clef.activeAccidental != null)\r\n      clef.activeAccidental.applyToPitch(pitch);\r\n\r\n    return pitch;\r\n  },\r\n};\r\n\r\n//export default Gabc;\n\n\n/** WEBPACK FOOTER **\n ** ./src/Exsurge.Gabc.js\n **/","//\r\n// Author(s):\r\n// Fr. Matthew Spencer, OSJ <mspencer@osjusa.org>\r\n//\r\n// Copyright (c) 2008-2016 Fr. Matthew Spencer, OSJ\r\n//\r\n// Permission is hereby granted, free of charge, to any person obtaining a copy\r\n// of this software and associated documentation files (the \"Software\"), to deal\r\n// in the Software without restriction, including without limitation the rights\r\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\n// copies of the Software, and to permit persons to whom the Software is\r\n// furnished to do so, subject to the following conditions:\r\n//\r\n// The above copyright notice and this permission notice shall be included in\r\n// all copies or substantial portions of the Software.\r\n//\r\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n// THE SOFTWARE.\r\n//\r\n\r\nimport * as Exsurge from './Exsurge.Core'\r\nimport { ctxt, QuickSvg, ChantLayoutElement, GlyphCode, GlyphVisualizer } from './Exsurge.Drawing'\r\nimport { Note, NoteShape } from './Exsurge.Chant'\r\n\r\nexport class Marking extends ChantLayoutElement {\r\n\r\n  constructor(note) {\r\n    super();\r\n\r\n    this.note = note;\r\n    this.horizontalOffset = 0;\r\n    this.verticalOffset = 0;\r\n    this.positionHint = Exsurge.MarkingPositionHint.Default;\r\n  }\r\n\r\n  performLayout(ctxt) {\r\n\r\n  }\r\n}\r\n\r\nexport class AcuteAccent extends Marking {\r\n\r\n  constructor(note) {\r\n    super(note);\r\n\r\n    this.positionHint = Exsurge.MarkingPositionHint.Above;\r\n    this.glyph = null;\r\n  }\r\n\r\n  performLayout(ctxt) {\r\n\r\n    this.glyph = new GlyphVisualizer(ctxt, GlyphCode.AcuteAccent);\r\n\r\n    this.glyph.performLayout(ctxt);\r\n\r\n    // fixme: acute markings might need to be positioned vertically over\r\n    // the notation bounds of the chantline after everything has already\r\n    // been laid out on the line...for now we just place them a\r\n    // reasonable height above the staff line.\r\n    this.verticalOffset = -ctxt.staffInterval * 5;\r\n    this.horizontalOffset = -this.glyph.bounds.x; // center on the note itself\r\n\r\n    this.bounds = this.glyph.bounds.clone();\r\n    this.bounds.x += this.orizontalOffset;\r\n    this.bounds.y += this.verticalOffset;\r\n\r\n    super.performLayout(ctxt);\r\n  }\r\n}\r\n\r\n/*\r\n * HorizontalEpisema\r\n */\r\nexport class HorizontalEpisema extends Marking {\r\n\r\n  constructor(note) {\r\n    super(note);\r\n  }\r\n\r\n  performLayout(ctxt) {\r\n    super.performLayout(ctxt);\r\n\r\n    // the horizontal episema object is a little different from other markings in that it is a\r\n    // logical object and doesn't do layout on its own. the layout for the episema happens in\r\n    // Neume.finishLayout\r\n  }\r\n}\r\n\r\n/*\r\n * Ictus\r\n */\r\nexport class Ictus extends Marking {\r\n\r\n  constructor(note) {\r\n    super(note);\r\n\r\n    this.glyph = null;\r\n  }\r\n\r\n  performLayout(ctxt) {\r\n\r\n    var glyphCode;\r\n    var staffPosition;\r\n\r\n    // fixme: this positioning logic doesn't work for the ictus on a virga apparently...?\r\n\r\n    if (this.positionHint == Exsurge.MarkingPositionHint.Above) {\r\n      glyphCode = GlyphCode.VerticalEpisemaAbove;\r\n    } else {\r\n      glyphCode = GlyphCode.VerticalEpisemaBelow;\r\n    }\r\n\r\n    staffPosition = this.note.staffPosition;\r\n    \r\n    this.horizontalOffset = this.note.bounds.width / 2;\r\n    this.verticalOffset = 0;\r\n\r\n    switch (glyphCode) {\r\n      case GlyphCode.VerticalEpisemaAbove:\r\n        if (staffPosition % 2 == 0)\r\n          this.verticalOffset -= ctxt.staffInterval * 1.5;\r\n        else\r\n          this.verticalOffset -= ctxt.staffInterval * .8;\r\n        break;\r\n\r\n      case GlyphCode.VerticalEpisemaBelow:\r\n      default:\r\n        if (staffPosition % 2 == 0)\r\n          this.verticalOffset += ctxt.staffInterval * 1.5;\r\n        else\r\n          this.verticalOffset += ctxt.staffInterval * .8;\r\n        break;\r\n    }\r\n\r\n    this.glyph = new GlyphVisualizer(ctxt, glyphCode);\r\n    this.glyph.setStaffPosition(ctxt, staffPosition);\r\n\r\n    this.bounds = this.glyph.bounds.clone();\r\n    this.bounds.x += this.note.bounds.x + this.horizontalOffset;\r\n    this.bounds.y += this.verticalOffset;\r\n\r\n    super.performLayout(ctxt);\r\n  }\r\n}\r\n\r\n/*\r\n * Mora\r\n */\r\nexport class Mora extends Marking {\r\n\r\n  constructor(note) {\r\n    super(note);\r\n\r\n    this.glyph = null;\r\n  }\r\n\r\n  performLayout(ctxt) {\r\n\r\n    var staffPosition = this.note.staffPosition;\r\n\r\n    this.glyph = new GlyphVisualizer(ctxt, GlyphCode.Mora);\r\n    this.glyph.setStaffPosition(ctxt, staffPosition);\r\n\r\n    this.verticalOffset = 0;\r\n    switch (this.positionHint) {\r\n      case Exsurge.MarkingPositionHint.Below:\r\n        if (staffPosition % 2 == 0)\r\n          this.verticalOffset += ctxt.staffInterval / 3.0;\r\n        else\r\n          this.verticalOffset += (ctxt.staffInterval * 2) / 3.0;\r\n        break;\r\n\r\n      case Exsurge.MarkingPositionHint.Default:\r\n      case Exsurge.MarkingPositionHint.Above:\r\n      default:\r\n        if (staffPosition % 2 == 0)\r\n          this.verticalOffset -= ctxt.staffInterval / 3.0;\r\n        else\r\n          this.verticalOffset -= (ctxt.staffInterval * 2) / 3.0;\r\n        break;\r\n    }\r\n\r\n    this.bounds = this.glyph.bounds.clone();\r\n    this.bounds.x += this.note.bounds.right() + this.horizontalOffset;\r\n    this.bounds.y += this.verticalOffset;\r\n\r\n    // this.drawable = this.glyph.drawable;\r\n    // this.drawable.classList.add('Mora');\r\n    // QuickSvg.translate(this.drawable, this.bounds.x, this.bounds.y);\r\n\r\n    super.performLayout(ctxt);\r\n  }\r\n}\n\n\n/** WEBPACK FOOTER **\n ** ./src/Exsurge.Chant.Markings.js\n **/","//\r\n// Author(s):\r\n// Fr. Matthew Spencer, OSJ <mspencer@osjusa.org>\r\n//\r\n// Copyright (c) 2008-2016 Fr. Matthew Spencer, OSJ\r\n//\r\n// Permission is hereby granted, free of charge, to any person obtaining a copy\r\n// of this software and associated documentation files (the \"Software\"), to deal\r\n// in the Software without restriction, including without limitation the rights\r\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\n// copies of the Software, and to permit persons to whom the Software is\r\n// furnished to do so, subject to the following conditions:\r\n//\r\n// The above copyright notice and this permission notice shall be included in\r\n// all copies or substantial portions of the Software.\r\n//\r\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n// THE SOFTWARE.\r\n//\r\n\r\nimport * as Exsurge from './Exsurge.Core'\r\nimport { Step, Pitch, Rect, Point, Margins } from './Exsurge.Core'\r\nimport { ctxt, QuickSvg, ChantLayoutElement, ChantNotationElement, GlyphCode, GlyphVisualizer, NeumeLineVisualizer, HorizontalEpisemaLineVisualizer } from './Exsurge.Drawing'\r\nimport { Note, NoteShape } from './Exsurge.Chant'\r\n\r\n/*\r\n * Neumes base class\r\n */\r\nexport class Neume extends ChantNotationElement {\r\n\r\n  constructor() {\r\n    super();\r\n\r\n    this.notes = [];\r\n  }\r\n\r\n  performLayout(ctxt) {\r\n    super.performLayout(ctxt);\r\n  }\r\n\r\n  finishLayout(ctxt) {\r\n\r\n/*\r\n    var startEpisema = null;\r\n    var boundsToMark;\r\n\r\n    var neume = this;\r\n    var createEpisema = function() {\r\n      var line = new HorizontalEpisemaLineVisualizer(ctxt, boundsToMark, startEpisema.positionHint);\r\n      neume.drawable.appendChild(line.drawable);\r\n    };\r\n\r\n    // layout the markings of the notes\r\n    for (var i = 0; i < this.notes.length; i++) {\r\n      var note = this.notes[i];\r\n\r\n      for (var j = 0; j < note.markings.length; j++) {\r\n        var marking = note.markings[j];\r\n\r\n        // episemas we treat specially because we try to combine them when possible\r\n        if (marking.constructor.name == \"HorizontalEpisema\") {\r\n\r\n          if (startEpisema == null) {\r\n            // first one we've seen\r\n            startEpisema = marking;\r\n            boundsToMark = note.bounds.clone();\r\n          } else {\r\n            // try to continue the previous one if possible\r\n            if (marking.positionHint == startEpisema.positionHint) {\r\n              boundsToMark.union(note.bounds);\r\n            } else {\r\n              // can't combine them, terminate the previous one and start a new one.\r\n              createEpisema();\r\n\r\n              startEpisema = marking;\r\n              boundsToMark = note.bounds.clone();\r\n            }\r\n          }\r\n        } else {\r\n\r\n          if (marking.drawable != null) {\r\n            this.drawable.appendChild(marking.drawable);\r\n\r\n            QuickSvg.translate(marking.drawable, note.bounds.x + note.origin.x + marking.bounds.x, marking.bounds.y);\r\n          }\r\n        }\r\n      }\r\n\r\n      // end of the note processing...if we are the last one and we have an episema started, we need to terminate it here\r\n      if (i == this.notes.length - 1 && startEpisema != null)\r\n        createEpisema();\r\n    }\r\n\r\n    if (this.hasLyric()) {\r\n      // add ui support for note playback on click\r\n      this.lyric.svgText.setAttribute('onclick', \"alert('Clicked lyric: \" + this.lyric.text + \"');\");\r\n    }\r\n*/\r\n    super.finishLayout(ctxt);\r\n  }\r\n\r\n  // this will handle quilismae, mora, and horizontal episemae.\r\n  // subclasses can override for their own nuances to note rhythms\r\n  generatePlaybackData() {\r\n\r\n    var playbackData = [];\r\n\r\n    var prevIsQuilisma = false;\r\n    for (var i = 0; i < this.notes; i++) {\r\n      var note = this.notes[i];\r\n\r\n      var duration = 1.0; // reset to standard length\r\n      var multiplier = 1.0;\r\n\r\n      if (prevIsQuilisma)\r\n        multiplier *= 0.5;\r\n\r\n      if (note.shape == NoteShape.Quilisma) {\r\n        multiplier *= 2;\r\n        prevIsQuilisma = true;\r\n      } else\r\n        prevIsQuilisma = false;\r\n       \r\n      // check markings\r\n      for (var j = 0; j < note.markings.length; j++) {\r\n        var marking = note.markings[j];\r\n\r\n        if (marking.className == 'Mora')\r\n          multiplier = Math.max(multiplier, 2);\r\n        else if (marking.className == 'HorizontalEpisema' || ctxt.horizontalEpisemaActive)\r\n          multiplier = Math.max(multiplier, 2);\r\n      }\r\n\r\n      duration *= multiplier;\r\n\r\n      playbackData.push({\r\n        type: 'note',\r\n        duration: duration,\r\n        pitch: note.pitch\r\n      })\r\n    }\r\n\r\n    return playbackData;\r\n  }\r\n}\r\n\r\n/*\r\n * Apostropha\r\n */\r\nexport class Apostropha extends Neume {\r\n\r\n  performLayout(ctxt) {\r\n    super.performLayout(ctxt);\r\n\r\n    // determine the glyph to use\r\n    var note = this.notes[0];\r\n\r\n    if (note.isLiquescent)\r\n      note.setGlyphShape(ctxt, GlyphCode.ApostrophaLiquescent);\r\n    else\r\n      note.setGlyphShape(ctxt, GlyphCode.Apostropha);\r\n\r\n    note.performLayout(ctxt);\r\n    this.addVisualizer(note);\r\n\r\n    this.origin.x = note.origin.x;\r\n    this.origin.y = note.origin.y;\r\n\r\n    this.finishLayout(ctxt);\r\n  }\r\n}\r\n\r\n/*\r\n * Bivirga\r\n *\r\n * For simplicity in implementation, Bivirga's have two notes in the object\r\n * structure. These technically must be the same pitch though.\r\n */\r\nexport class Bivirga extends Neume {\r\n\r\n  performLayout(ctxt) {\r\n    super.performLayout(ctxt);\r\n\r\n    var note1 = this.notes[0];\r\n    var note2 = this.notes[1];\r\n\r\n    note1.setGlyphShape(ctxt, Virga.getGlyphCode(note1.staffPosition));\r\n    note1.performLayout(ctxt);\r\n\r\n    note2.setGlyphShape(ctxt, Virga.getGlyphCode(note1.staffPosition));\r\n    note2.performLayout(ctxt);\r\n    note2.bounds.x += note1.bounds.width + ctxt.intraNeumeSpacing;\r\n\r\n    this.addVisualizer(note1);\r\n    this.addVisualizer(note2);\r\n\r\n    this.origin.x = note1.origin.x;\r\n    this.origin.y = note1.origin.y;\r\n\r\n    this.finishLayout(ctxt);\r\n  }\r\n}\r\n\r\n/*\r\n * Trivirga\r\n *\r\n * For simplicity in implementation, Trivirga's have three notes in the object\r\n * structure. These technically must be the same pitch though.\r\n */\r\nexport class Trivirga extends Neume {\r\n\r\n  performLayout(ctxt) {\r\n    super.performLayout(ctxt);\r\n\r\n    var note1 = this.notes[0];\r\n    var note2 = this.notes[1];\r\n    var note3 = this.notes[2];\r\n\r\n    note1.setGlyphShape(ctxt, Virga.getGlyphCode(note1.staffPosition));\r\n    note1.performLayout(ctxt);\r\n\r\n    note2.setGlyphShape(ctxt, Virga.getGlyphCode(note1.staffPosition));\r\n    note2.performLayout(ctxt);\r\n    note2.bounds.x += note1.bounds.width + ctxt.intraNeumeSpacing;\r\n\r\n    note3.setGlyphShape(ctxt, Virga.getGlyphCode(staffPosition));\r\n    note3.performLayout(ctxt);\r\n    note3.bounds.x += note1.bounds.width + ctxt.intraNeumeSpacing + note2.bounds.width + ctxt.intraNeumeSpacing;\r\n\r\n    this.addVisualizer(note1);\r\n    this.addVisualizer(note2);\r\n    this.addVisualizer(note3);\r\n\r\n    this.origin.x = note1.origin.x;\r\n    this.origin.y = note1.origin.y;\r\n\r\n    this.finishLayout(ctxt);\r\n  }\r\n}\r\n\r\n/*\r\n * Climacus\r\n */\r\nexport class Climacus extends Neume {\r\n\r\n  performLayout(ctxt) {\r\n    super.performLayout(ctxt);\r\n\r\n    // the first note is always a virga...\r\n    var staffPosition, prevStaffPosition;\r\n    var x = 0;\r\n\r\n    var note = this.notes[0];\r\n    staffPosition = note.staffPosition;\r\n    note.setGlyphShape(ctxt, Virga.getGlyphCode(staffPosition));\r\n    note.performLayout(ctxt);\r\n\r\n    x += note.bounds.width * 1.2; // fixme: correct spacing after virga\r\n\r\n    this.addVisualizer(note);\r\n\r\n    this.origin.x = note.origin.x;\r\n    this.origin.y = note.origin.y;\r\n\r\n    // now add all the punctum inclinati\r\n    prevStaffPosition = this.notes[1].staffPosition;\r\n    for (var i = 1; i < this.notes.length; i++, prevStaffPosition = staffPosition) {\r\n      note = this.notes[i];\r\n\r\n      if (note.isLiquescent)\r\n        note.setGlyphShape(ctxt, GlyphCode.punctumInclinatumLiquescent);\r\n      else {\r\n        // fixme: some climaci in the new chant books end with a punctum cuadratum\r\n        // (see, for example, the antiphon \"Sancta Maria\" for October 7).\r\n        note.setGlyphShape(ctxt, GlyphCode.PunctumInclinatum);\r\n      }\r\n\r\n      staffPosition = note.staffPosition;\r\n\r\n      note.performLayout(ctxt);\r\n\r\n      // fixme: how do these calculations look for puncti inclinati based on staff position offsets?\r\n      var multiple;\r\n      switch (Math.abs(prevStaffPosition - staffPosition)) {\r\n        case 0:\r\n          multiple = 0;\r\n          break;\r\n        case 1:\r\n          multiple = 0.8;\r\n          break;\r\n        default:\r\n          multiple = 1.2;\r\n          break;\r\n      }\r\n\r\n      x += note.bounds.width * multiple;\r\n      note.bounds.x += x;\r\n\r\n      this.addVisualizer(note);\r\n    }\r\n\r\n    this.finishLayout(ctxt);\r\n  }\r\n}\r\n\r\n/*\r\n * Clivis\r\n */\r\nexport class Clivis extends Neume {\r\n\r\n  performLayout(ctxt) {\r\n    super.performLayout(ctxt);\r\n\r\n    var line;\r\n    var isLiquescent;\r\n\r\n    var upper = this.notes[0];\r\n    var lower = this.notes[1];\r\n\r\n    if (lower.isLiquescent || upper.isLiquescent) {\r\n      upper.setGlyphShape(ctxt, GlyphCode.BeginningDesLiquescent);\r\n      lower.setGlyphShape(ctxt, GlyphCode.TerminatingDesLiquescent);\r\n      isLiquescent = true;\r\n    } else {\r\n      upper.setGlyphShape(ctxt, GlyphCode.PunctumCuadratum);\r\n      lower.setGlyphShape(ctxt, GlyphCode.PunctumCuadratum);\r\n      isLiquescent = false;\r\n    }\r\n\r\n    var upperStaffPos = upper.staffPosition;\r\n    var lowerStaffPos = lower.staffPosition;\r\n\r\n    upper.performLayout(ctxt);\r\n    lower.performLayout(ctxt);\r\n\r\n    // add the ascending line\r\n    line = new NeumeLineVisualizer(ctxt, lower, upper, true);\r\n    line.bounds.x = upper.bounds.x;\r\n\r\n    this.addVisualizer(line);\r\n    line = null;\r\n\r\n    var x = upper.bounds.right();\r\n\r\n    // do we need to draw a descending line?\r\n    if (upperStaffPos - lowerStaffPos > 1) {\r\n      line = new NeumeLineVisualizer(ctxt, upper, lower, false);\r\n      x -= line.bounds.width;\r\n      line.bounds.x = x;\r\n      this.addVisualizer(line);\r\n    }\r\n\r\n    if (isLiquescent) {\r\n      if (line != null)\r\n        x -= lower.bounds.width - line.bounds.width;\r\n      else\r\n        x -= lower.bounds.width;\r\n    }\r\n\r\n    lower.bounds.x = x;\r\n\r\n    this.addVisualizer(upper);\r\n    this.addVisualizer(lower);\r\n\r\n    this.origin.x = upper.origin.x;\r\n    this.origin.y = upper.origin.y;\r\n\r\n    this.finishLayout(ctxt);\r\n  }\r\n}\r\n\r\n\r\n\r\n/*\r\n * Distropha\r\n *\r\n * For simplicity in implementation, Distropha's have two notes in the object\r\n * structure. These technically must be the same pitch though (like Bivirga).\r\n */\r\nexport class Distropha extends Neume {\r\n\r\n  performLayout(ctxt) {\r\n    super.performLayout(ctxt);\r\n\r\n    var note1 = this.notes[0];\r\n    var note2 = this.notes[1];\r\n\r\n    note1.setGlyphShape(ctxt, GlyphCode.PunctumCuadratum);\r\n    note1.performLayout(ctxt);\r\n\r\n    note2.setGlyphShape(ctxt, GlyphCode.PunctumCuadratum);\r\n    note2.performLayout(ctxt);\r\n    note2.bounds.x += note1.bounds.width + ctxt.intraNeumeSpacing;\r\n\r\n    this.addVisualizer(note1);\r\n    this.addVisualizer(note2);\r\n\r\n    this.origin.x = note1.origin.x;\r\n    this.origin.y = note1.origin.y;\r\n\r\n    this.finishLayout(ctxt);\r\n  }\r\n}\r\n\r\n/*\r\n * Oriscus\r\n */\r\nexport class Oriscus extends Neume {\r\n\r\n  performLayout(ctxt) {\r\n    super.performLayout(ctxt);\r\n\r\n    // determine the glyph to use\r\n    var note = this.notes[0];\r\n\r\n    if (note.shape == NoteShape.OriscusAscending)\r\n      note.setGlyphShape(ctxt, GlyphCode.OriscusAsc);\r\n    else\r\n      note.setGlyphShape(ctxt, GlyphCode.OriscusDes);\r\n\r\n    note.performLayout(ctxt);\r\n    this.addVisualizer(note);\r\n\r\n    this.origin.x = note.origin.x;\r\n    this.origin.y = note.origin.y;\r\n\r\n    this.finishLayout(ctxt);\r\n  }\r\n}\r\n\r\n/*\r\n * PesQuassus\r\n */\r\nexport class PesQuassus extends Neume {\r\n\r\n  performLayout(ctxt) {\r\n    super.performLayout(ctxt);\r\n\r\n    var x = 0;\r\n\r\n    var lower = this.notes[0];\r\n    var upper = this.notes[1];\r\n    var line;\r\n\r\n    var lowerStaffPos = lower.staffPosition;\r\n    var upperStaffPos = upper.staffPosition;\r\n\r\n    lower.setGlyphShape(ctxt, GlyphCode.PunctumCuadratum);\r\n\r\n    if (upper.isLiquescent)\r\n      upper.setGlyphShape(ctxt, GlyphCode.PunctumCuadratumDesLiquescent);\r\n    else\r\n      upper.setGlyphShape(ctxt, GlyphCode.PunctumCuadratum);\r\n\r\n    lower.performLayout(ctxt);\r\n    lower.bounds.x = x;\r\n    this.addVisualizer(lower);\r\n\r\n    x += lower.bounds.right();\r\n\r\n    var needsLines = upperStaffPos - lowerStaffPos > 1;\r\n    if (needsLines) {\r\n      line = new NeumeLineVisualizer(ctxt, lower, upper, false);\r\n      x -= line.bounds.width;\r\n      line.bounds.x = x;\r\n      this.addVisualizer(line);\r\n    }\r\n\r\n    upper.bounds.x = x;\r\n\r\n    upper.performLayout(ctxt);\r\n    upper.bounds.x = x;\r\n    this.addVisualizer(upper);\r\n\r\n    x += upper.bounds.width;\r\n\r\n    // add a hanging line if we need it\r\n    if (needsLines) {\r\n      line = new NeumeLineVisualizer(ctxt, upper, lower, true);\r\n      x -= line.bounds.width;\r\n      line.bounds.x = x;\r\n      this.addVisualizer(line);\r\n    }\r\n\r\n    this.origin.x = lower.origin.x;\r\n    this.origin.y = lower.origin.y;\r\n\r\n    this.finishLayout(ctxt);\r\n  }\r\n}\r\n\r\n/*\r\n * PesSubpunctis\r\n */\r\nexport class PesSubpunctis extends Neume {\r\n\r\n  performLayout(ctxt) {\r\n    super.performLayout(ctxt);\r\n\r\n    var lower = this.notes[0];\r\n    var upper = this.notes[1];\r\n    var staffPosition, prevStaffPosition;\r\n    var x = 0;\r\n\r\n    if (lower.isLiquescent || upper.isLiquescent) {\r\n      lower.setGlyphShape(ctxt, GlyphCode.BeginningAscLiquescent);\r\n      upper.setGlyphShape(ctxt, GlyphCode.TerminatingAscLiquescent);\r\n    } else {\r\n      lower.setGlyphShape(ctxt, GlyphCode.PodatusLower);\r\n      upper.setGlyphShape(ctxt, GlyphCode.PodatusUpper);\r\n    }\r\n\r\n    if (lower.shape == NoteShape.Quilisma)\r\n      lower.setGlyphShape(ctxt, GlyphCode.Quilisma);\r\n\r\n    lower.performLayout(ctxt);\r\n    upper.performLayout(ctxt);\r\n\r\n    var line = new NeumeLineVisualizer(ctxt, lower, upper, false);\r\n\r\n    line.bounds.x = lower.bounds.right() - line.bounds.width;\r\n    upper.bounds.x = lower.bounds.right() - upper.bounds.width;\r\n\r\n    // add the elements\r\n    this.addVisualizer(lower);\r\n    this.addVisualizer(line);\r\n    this.addVisualizer(upper);\r\n\r\n    x += Math.max(lower.bounds.width, upper.bounds.width) * 1.2; // fixme: correct spacing after podatus\r\n\r\n    // now add all the punctum inclinati\r\n    staffPosition = upper.staffPosition;\r\n    prevStaffPosition = lower.staffPosition;\r\n    for (var i = 2; i < this.notes.length; i++, prevStaffPosition = staffPosition) {\r\n      var note = this.notes[i];\r\n\r\n      if (note.isLiquescent)\r\n        note.setGlyphShape(ctxt, GlyphCode.PunctumInclinatumLiquescent);\r\n      else {\r\n        // fixme: some climaci in the new chant books end with a punctum cuadratum\r\n        // (see, for example, the antiphon \"Sancta Maria\" for October 7).\r\n        note.setGlyphShape(ctxt, GlyphCode.PunctumInclinatum);\r\n      }\r\n\r\n      staffPosition = note.staffPosition;\r\n\r\n      note.performLayout(ctxt);\r\n\r\n      // fixme: how do these calculations look for puncti inclinati based on staff position offsets?\r\n      var multiple;\r\n      switch (Math.abs(prevStaffPosition - staffPosition)) {\r\n        case 0:\r\n          multiple = 0;\r\n          break;\r\n        case 1:\r\n          multiple = 0.8;\r\n          break;\r\n        default:\r\n          multiple = 1.2;\r\n          break;\r\n      }\r\n\r\n      x += note.bounds.width * multiple;\r\n      note.bounds.x += x;\r\n\r\n      this.addVisualizer(note);\r\n    }\r\n\r\n    this.origin.x = lower.origin.x;\r\n    this.origin.y = lower.origin.y;\r\n\r\n    this.finishLayout(ctxt);\r\n  }\r\n}\r\n\r\n/*\r\n * Podatus\r\n */\r\nexport class Podatus extends Neume {\r\n\r\n  performLayout(ctxt) {\r\n    super.performLayout(ctxt);\r\n\r\n    var lower = this.notes[0];\r\n    var upper = this.notes[1];\r\n\r\n    if (lower.isLiquescent || upper.isLiquescent) {\r\n      lower.setGlyphShape(ctxt, GlyphCode.BeginningAscLiquescent);\r\n      upper.setGlyphShape(ctxt, GlyphCode.TerminatingAscLiquescent);\r\n    } else {\r\n      lower.setGlyphShape(ctxt, GlyphCode.PodatusLower);\r\n      upper.setGlyphShape(ctxt, GlyphCode.PodatusUpper);\r\n    }\r\n\r\n    if (lower.shape == NoteShape.Quilisma)\r\n      lower.setGlyphShape(ctxt, GlyphCode.Quilisma);\r\n\r\n    upper.performLayout(ctxt);\r\n    lower.performLayout(ctxt);\r\n\r\n    var line = new NeumeLineVisualizer(ctxt, lower, upper, false);\r\n\r\n    line.bounds.x = lower.bounds.right() - line.bounds.width;\r\n    upper.bounds.x = lower.bounds.right() - upper.bounds.width;\r\n\r\n    // add the elements\r\n    this.addVisualizer(lower);\r\n    this.addVisualizer(line);\r\n    this.addVisualizer(upper);\r\n\r\n    this.origin.x = lower.origin.x;\r\n    this.origin.y = lower.origin.y;\r\n\r\n    this.finishLayout(ctxt);\r\n  }\r\n}\r\n\r\n/*\r\n * Porrectus\r\n */\r\nexport class Porrectus extends Neume {\r\n\r\n  performLayout(ctxt) {\r\n    super.performLayout(ctxt);\r\n\r\n    var line;\r\n    var first = this.notes[0];\r\n    var second = this.notes[1];\r\n    var third = this.notes[2];\r\n    var x = 0.0;\r\n\r\n    var firstStaffPosition = first.staffPosition;\r\n    var secondStaffPosition = second.staffPosition;\r\n    var thirdStaffPosition = third.staffPosition;\r\n\r\n    switch (firstStaffPosition - secondStaffPosition) {\r\n      case 1:\r\n        first.setGlyphShape(ctxt, GlyphCode.Porrectus1);\r\n        break;\r\n      case 2:\r\n        first.setGlyphShape(ctxt, GlyphCode.Porrectus2);\r\n        break;\r\n      case 3:\r\n        first.setGlyphShape(ctxt, GlyphCode.Porrectus3);\r\n        break;\r\n      case 4:\r\n        first.setGlyphShape(ctxt, GlyphCode.Porrectus4);\r\n        break;\r\n      default:\r\n        // fixme: should we generate an error here?\r\n        first.setGlyphShape(ctxt, GlyphCode.None);\r\n        break;\r\n    }\r\n\r\n    first.performLayout(ctxt);\r\n\r\n    // the second glyph does not draw anything, but it still has logical importance for the editing\r\n    // environment...it can respond to changes which will then change the swash glyph of the first.\r\n    second.setGlyphShape(ctxt, GlyphCode.None);\r\n    second.performLayout(ctxt);\r\n\r\n    // add the first line and the swash\r\n    line = new NeumeLineVisualizer(ctxt, first, second, true);\r\n\r\n    x = line.bounds.x = first.bounds.x;\r\n    x = first.bounds.right();\r\n    second.bounds.x = x - second.bounds.width;\r\n    x = second.bounds.right();\r\n\r\n    this.addVisualizer(line);\r\n    this.addVisualizer(first);\r\n    this.addVisualizer(second);\r\n\r\n\r\n    // add the connecting line\r\n    if (thirdStaffPosition - secondStaffPosition > 1) {\r\n      line = new NeumeLineVisualizer(ctxt, second, third, false);\r\n      line.bounds.x = x - line.bounds.width;\r\n      this.addVisualizer(line);\r\n    }\r\n\r\n    if (third.isLiquescent)\r\n      third.setGlyphShape(ctxt, GlyphCode.TerminatingAscLiquescent);\r\n    else\r\n      third.setGlyphShape(ctxt, GlyphCode.PodatusUpper);\r\n\r\n    third.performLayout(ctxt);\r\n    third.bounds.x += x;\r\n\r\n    this.addVisualizer(third);\r\n\r\n    this.origin.x = first.origin.x;\r\n    this.origin.y = first.origin.y;\r\n\r\n    this.finishLayout(ctxt);\r\n  }\r\n}\r\n\r\n/*\r\n * PorrectusFlexus\r\n */\r\nexport class PorrectusFlexus extends Neume {\r\n\r\n  performLayout(ctxt) {\r\n    super.performLayout(ctxt);\r\n\r\n    var line;\r\n    var first = this.notes[0];\r\n    var second = this.notes[1];\r\n    var third = this.notes[2];\r\n    var fourth = this.notes[3];\r\n    var x = 0;\r\n\r\n    var firstStaffPosition = first.staffPosition;\r\n    var secondStaffPosition = second.staffPosition;\r\n    var thirdStaffPosition = third.staffPosition;\r\n    var fourthStaffPosition = fourth.staffPosition;\r\n\r\n    switch (firstStaffPosition - secondStaffPosition) {\r\n      case 1:\r\n        first.setGlyphShape(ctxt, GlyphCode.Porrectus1);\r\n        break;\r\n      case 2:\r\n        first.setGlyphShape(ctxt, GlyphCode.Porrectus2);\r\n        break;\r\n      case 3:\r\n        first.setGlyphShape(ctxt, GlyphCode.Porrectus3);\r\n        break;\r\n      case 4:\r\n        first.setGlyphShape(ctxt, GlyphCode.Porrectus4);\r\n        break;\r\n      default:\r\n        // fixme: should we generate an error here?\r\n        first.setGlyphShape(ctxt, GlyphCode.None);\r\n        break;\r\n    }\r\n\r\n    first.performLayout(ctxt);\r\n\r\n    // add the first line and the swash\r\n    line = new NeumeLineVisualizer(ctxt, first, second, true);\r\n\r\n    x = line.bounds.x = first.bounds.x;\r\n    x = first.bounds.right();\r\n    this.addVisualizer(line);\r\n    this.addVisualizer(first);\r\n\r\n\r\n    // the second glyph does not draw anything, but it still has logical importance for the editing\r\n    // environment...it can respond to changes which will then change the swash glyph of the first.\r\n    second.setGlyphShape(ctxt, GlyphCode.None);\r\n    second.performLayout(ctxt);\r\n    second.bounds.x = x;\r\n    x = second.bounds.right();\r\n    this.addVisualizer(second);\r\n\r\n\r\n    // add a connecting line\r\n    if (thirdStaffPosition - secondStaffPosition > 1) {\r\n      line = new NeumeLineVisualizer(ctxt, second, third, false);\r\n      x -= line.bounds.width;\r\n      line.bounds.x += x;\r\n      this.addVisualizer(line);\r\n    }\r\n\r\n    third.setGlyphShape(ctxt, GlyphCode.PunctumCuadratum);\r\n    third.performLayout(ctxt);\r\n    third.bounds.x = x;\r\n    x = third.bounds.right();\r\n    this.addVisualizer(third);\r\n\r\n    // add a connecting line\r\n    if (thirdStaffPosition - fourthStaffPosition > 1) {\r\n      line = new NeumeLineVisualizer(ctxt, third, fourth, false);\r\n      x -= line.bounds.width;\r\n      line.bounds.x += x;\r\n      this.addVisualizer(line);\r\n    }\r\n\r\n    fourth.setGlyphShape(ctxt, GlyphCode.PunctumCuadratum);\r\n    fourth.performLayout(ctxt);\r\n    fourth.bounds.x = x;\r\n    this.addVisualizer(fourth);\r\n\r\n    this.origin.x = first.origin.x;\r\n    this.origin.y = first.origin.y;\r\n\r\n    this.finishLayout(ctxt);\r\n  }\r\n}\r\n\r\n/*\r\n * Punctum\r\n */\r\nexport class Punctum extends Neume {\r\n\r\n  performLayout(ctxt) {\r\n    super.performLayout(ctxt);\r\n\r\n    // determine the glyph to use\r\n\r\n    var note = this.notes[0];\r\n\r\n    if (note.isLiquescent) {\r\n      if (note.shape == NoteShape.Inclinatum)\r\n        note.setGlyphShape(ctxt, GlyphCode.PunctumInclinatumLiquescent);\r\n      else {\r\n        // fixme: implement two types of punctum liquescents\r\n        note.setGlyphShape(ctxt, GlyphCode.PunctumCuadratumAscLiquescent);\r\n      }\r\n    } else {\r\n      switch (note.shape) {\r\n        case NoteShape.Cavum:\r\n          note.setGlyphShape(ctxt, GlyphCode.PunctumCavum);\r\n          break;\r\n\r\n        case NoteShape.Inclinatum:\r\n          note.setGlyphShape(ctxt, GlyphCode.PunctumInclinatum);\r\n          break;\r\n\r\n        case NoteShape.Quilisma:\r\n          note.setGlyphShape(ctxt, GlyphCode.Quilisma);\r\n          break;\r\n\r\n        default:\r\n          note.setGlyphShape(ctxt, GlyphCode.PunctumCuadratum);\r\n          break;\r\n      }\r\n    }\r\n\r\n    note.performLayout(ctxt);\r\n    this.addVisualizer(note);\r\n\r\n    this.origin.x = note.origin.x;\r\n    this.origin.y = note.origin.y;\r\n\r\n    this.finishLayout(ctxt);\r\n  }\r\n}\r\n\r\n/*\r\n * Scandicus\r\n */\r\nexport class Scandicus extends Neume {\r\n\r\n  // fixme: for now, we render the scandicus as a punctum followed by a podatus. however,\r\n  // it could also be a podatus followed by a virga...see LU, \"Preface,\" xj.\r\n  //\r\n  // perhaps the best way to indicate the virga form is to check if the note shape of\r\n  // the third note is a virga!\r\n  performLayout(ctxt) {\r\n    super.performLayout(ctxt);\r\n\r\n    var first = this.notes[0];\r\n    var second = this.notes[1];\r\n    var third = this.notes[2];\r\n\r\n    first.setGlyphShape(ctxt, GlyphCode.PunctumCuadratum);\r\n\r\n    if (second.isLiquescent || third.isLiquescent) {\r\n      second.setGlyphShape(ctxt, GlyphCode.BeginningAscLiquescent);\r\n      third.setGlyphShape(ctxt, GlyphCode.TerminatingAscLiquescent);\r\n    } else {\r\n      second.setGlyphShape(ctxt, GlyphCode.PodatusLower);\r\n      third.setGlyphShape(ctxt, GlyphCode.PodatusUpper);\r\n    }\r\n\r\n    // fixme: can a scandicus have a quilisma like this?\r\n    if (second.shape == NoteShape.Quilisma)\r\n      second.setGlyphShape(ctxt, GlyphCode.Quilisma);\r\n\r\n    first.performLayout(ctxt);\r\n    second.performLayout(ctxt);\r\n    third.performLayout(ctxt);\r\n\r\n    var line = new NeumeLineVisualizer(ctxt, second, third, false);\r\n\r\n    second.bounds.x = first.bounds.right();\r\n    line.bounds.x = second.bounds.right() - line.bounds.width;\r\n    third.bounds.x = second.bounds.right() - third.bounds.width;\r\n\r\n    // add the elements\r\n    this.addVisualizer(first);\r\n    this.addVisualizer(second);\r\n    this.addVisualizer(line);\r\n    this.addVisualizer(third);\r\n\r\n    this.origin.x = first.origin.x;\r\n    this.origin.y = first.origin.y;\r\n\r\n    this.finishLayout(ctxt);\r\n  }\r\n}\r\n\r\n\r\n/*\r\n * Scandicus Flexus\r\n */\r\nexport class ScandicusFlexus extends Neume {\r\n\r\n  // see notes in Scandicus about determining the first three notes.\r\n  performLayout(ctxt) {\r\n    super.performLayout(ctxt);\r\n\r\n    var first = this.notes[0];\r\n    var second = this.notes[1];\r\n    var third = this.notes[2];\r\n    var fourth = this.notes[3];\r\n\r\n    first.setGlyphShape(ctxt, GlyphCode.PunctumCuadratum);\r\n\r\n    if (second.iisLiquescent || third.isLiquescent) {\r\n      second.setGlyphShape(ctxt, GlyphCode.BeginningAscLiquescent);\r\n      third.setGlyphShape(ctxt, GlyphCode.TerminatingAscLiquescent);\r\n    } else {\r\n      second.setGlyphShape(ctxt, GlyphCode.PodatusLower);\r\n      third.setGlyphShape(ctxt, GlyphCode.PodatusUpper);\r\n    }\r\n\r\n    // fixme: can a scandicus have a quilisma like this?\r\n    if (second.shape == NoteShape.Quilisma)\r\n      second.setGlyphShape(ctxt, GlyphCode.Quilisma);\r\n\r\n    first.performLayout(ctxt);\r\n    second.performLayout(ctxt);\r\n    third.performLayout(ctxt);\r\n    fourth.performLayout(ctxt);\r\n\r\n    var line = new NeumeLineVisualizer(ctxt, second, third, false);\r\n\r\n    second.bounds.x = first.bounds.right();\r\n    line.bounds.x = second.bounds.right() - line.bounds.width;\r\n    third.bounds.x = second.bounds.right() - third.bounds.width;\r\n    fourth.bounds.x = third.bounds.right();\r\n\r\n    // do we need to draw a descending line?\r\n    var staffPos3 = third.staffPosition;\r\n    var staffPos4 = fourth.staffPosition;\r\n    if (staffPos3 - staffPos4 > 1) {\r\n      var extraLine = new NeumeLineVisualizer(ctxt, third, fourth, false);\r\n      fourth.bounds.x -= extraLine.bounds.width;\r\n      extraLine.bounds.x -= extraLine.bounds.width;\r\n      this.addVisualizer(extraLine);\r\n    }\r\n\r\n    // add the elements\r\n    this.addVisualizer(first);\r\n    this.addVisualizer(second);\r\n    this.addVisualizer(line);\r\n    this.addVisualizer(third);\r\n    this.addVisualizer(fourth);\r\n\r\n    this.origin.x = first.origin.x;\r\n    this.origin.y = first.origin.y;\r\n\r\n    this.finishLayout(ctxt);\r\n  }\r\n}\r\n\r\n/*\r\n * TextOnly\r\n */\r\nexport class TextOnly extends Neume {\r\n\r\n  performLayout(ctxt) {\r\n    super.performLayout(ctxt);\r\n\r\n    // add an empty glyph as a placeholder\r\n    this.addVisualizer(new GlyphVisualizer(ctxt, GlyphCode.None));\r\n\r\n    this.origin.x = 0;\r\n    this.origin.y = 0;\r\n\r\n    this.finishLayout(ctxt);\r\n  }\r\n}\r\n\r\n/*\r\n * Torculus\r\n */\r\nexport class Torculus extends Neume {\r\n\r\n  performLayout(ctxt) {\r\n    super.performLayout(ctxt);\r\n\r\n    var note1 = this.notes[0];\r\n    var note2 = this.notes[1];\r\n    var note3 = this.notes[2];\r\n    var line;\r\n\r\n    // fixme: implement liquescents\r\n    note1.setGlyphShape(ctxt, GlyphCode.PunctumCuadratum);\r\n    note2.setGlyphShape(ctxt, GlyphCode.PunctumCuadratum);\r\n    note3.setGlyphShape(ctxt, GlyphCode.PunctumCuadratum);\r\n\r\n    var staffPos1 = note1.staffPosition;\r\n    var staffPos2 = note2.staffPosition;\r\n    var staffPos3 = note3.staffPosition;\r\n\r\n    note1.performLayout(ctxt);\r\n    note2.performLayout(ctxt);\r\n    note3.performLayout(ctxt);\r\n\r\n    var x = note1.bounds.right();\r\n\r\n    // do we need to draw the first (ascending) line?\r\n    if (staffPos2 - staffPos1 > 1) {\r\n      line = new NeumeLineVisualizer(ctxt, note1, note2, false);\r\n      x -= line.bounds.width;\r\n      line.bounds.x = x;\r\n      this.addVisualizer(line);\r\n    }\r\n\r\n    note2.bounds.x = x;\r\n    x += note2.bounds.width;\r\n\r\n    // do we need to draw a descending line?\r\n    if (staffPos2 - staffPos3 > 1) {\r\n      line = new NeumeLineVisualizer(ctxt, note2, note3, false);\r\n      x -= line.bounds.width;\r\n      line.bounds.x = x;\r\n      this.addVisualizer(line);\r\n    }\r\n\r\n    note3.bounds.x = x;\r\n\r\n    this.addVisualizer(note1);\r\n    this.addVisualizer(note2);\r\n    this.addVisualizer(note3);\r\n\r\n    this.origin.x = note1.origin.x;\r\n    this.origin.y = note1.origin.y;\r\n\r\n    this.finishLayout(ctxt);\r\n  }\r\n}\r\n\r\n/*\r\n * TorculusResupinus\r\n */\r\nexport class TorculusResupinus extends Neume {\r\n\r\n  performLayout(ctxt) {\r\n    super.performLayout(ctxt);\r\n\r\n    var line;\r\n    var first = this.notes[0];\r\n    var second = this.notes[1];\r\n    var third = this.notes[2];\r\n    var fourth = this.notes[3];\r\n    var x = 0;\r\n\r\n    // first, figure out the porrectus swash\r\n    var firstStaffPosition = first.staffPosition;\r\n    var secondStaffPosition = second.staffPosition;\r\n    var thirdStaffPosition = third.staffPosition;\r\n    var fourthStaffPosition = fourth.staffPosition;\r\n\r\n    switch (first.shape) {\r\n      case NoteShape.Quilisma:\r\n        first.setGlyphShape(ctxt, GlyphCode.Quilisma);\r\n        break;\r\n\r\n      default:\r\n        first.setGlyphShape(ctxt, GlyphCode.PunctumCuadratum);\r\n        break;\r\n    }\r\n\r\n    first.performLayout(ctxt);\r\n    x = first.bounds.right();\r\n    this.addVisualizer(first);\r\n\r\n    // if we need a line between the first punctum and the porrectus swash, add it now\r\n    if (secondStaffPosition - firstStaffPosition > 1) {\r\n      line = new NeumeLineVisualizer(ctxt, first, second, false);\r\n      x -= line.bounds.width;\r\n      line.bounds.x = x;\r\n      this.addVisualizer(line);\r\n    }\r\n\r\n\r\n    switch (Math.abs(secondStaffPosition - thirdStaffPosition)) {\r\n      case 1:\r\n        second.setGlyphShape(ctxt, GlyphCode.Porrectus1);\r\n        break;\r\n      case 2:\r\n        second.setGlyphShape(ctxt, GlyphCode.Porrectus2);\r\n        break;\r\n      case 3:\r\n        second.setGlyphShape(ctxt, GlyphCode.Porrectus3);\r\n        break;\r\n      case 4:\r\n        second.setGlyphShape(ctxt, GlyphCode.Porrectus4);\r\n        break;\r\n      default:\r\n        // fixme: this should be an error!\r\n        second.setGlyphShape(ctxt, GlyphCode.Porrectus1);\r\n        break;\r\n    }\r\n\r\n    second.performLayout(ctxt);\r\n    second.bounds.x = x;\r\n    x = second.bounds.right();\r\n    this.addVisualizer(second);\r\n\r\n    // the third glyph does not draw anything, but it still has logical importance for the editing\r\n    // environment...it can respond to changes which will then change the swash glyph of the first.\r\n    third.setGlyphShape(ctxt, GlyphCode.None);\r\n    third.performLayout(ctxt);\r\n\r\n    // do we need an ascending line after the porrectus swash?\r\n    if (fourthStaffPosition - thirdStaffPosition > 1) {\r\n      line = new NeumeLineVisualizer(ctxt, third, fourth, false);\r\n      line.bounds.x = x - line.bounds.width;\r\n      this.addVisualizer(line);\r\n    }\r\n\r\n    if (fourth.isLiquescent)\r\n      fourth.setGlyphShape(ctxt, GlyphCode.TerminatingAscLiquescent);\r\n    else\r\n      fourth.setGlyphShape(ctxt, GlyphCode.PodatusUpper);\r\n\r\n    fourth.performLayout(ctxt);\r\n    fourth.bounds.x += x;\r\n    this.addVisualizer(fourth);\r\n\r\n    this.origin.x = first.origin.x;\r\n    this.origin.y = first.origin.y;\r\n\r\n    this.finishLayout(ctxt);\r\n  }\r\n}\r\n\r\n/*\r\n * TorculusResupinusFlexus\r\n */\r\nexport class TorculusResupinusFlexus extends Neume {\r\n\r\n  performLayout(ctxt) {\r\n    super.performLayout(ctxt);\r\n\r\n    var line;\r\n    var first = this.notes[0];\r\n    var second = this.notes[1];\r\n    var third = this.notes[2];\r\n    var fourth = this.notes[3];\r\n    var fifth = this.notes[4];\r\n    var x = 0;\r\n\r\n    var firstStaffPosition = first.staffPosition;\r\n    var secondStaffPosition = second.staffPosition;\r\n    var thirdStaffPosition = third.staffPosition;\r\n    var fourthStaffPosition = fourth.staffPosition;\r\n    var fifthStaffPosition = fifth.staffPosition;\r\n\r\n    switch (first.shape) {\r\n      case NoteShape.Quilisma:\r\n        first.setGlyphShape(ctxt, GlyphCode.Quilisma);\r\n        break;\r\n\r\n      default:\r\n        first.setGlyphShape(ctxt, GlyphCode.PunctumCuadratum);\r\n        break;\r\n    }\r\n\r\n    first.performLayout(ctxt);\r\n    x = first.bounds.right();\r\n    this.addVisualizer(first);\r\n\r\n    // if we need a line between the first punctum and the porrectus swash, add it now\r\n    if (secondStaffPosition - firstStaffPosition > 1) {\r\n      line = new NeumeLineVisualizer(ctxt, first, second, false);\r\n      x -= line.bounds.width;\r\n      line.bounds.x = x;\r\n      this.addVisualizer(line);\r\n    }\r\n\r\n\r\n    switch (secondStaffPosition - thirdStaffPosition) {\r\n      case 1:\r\n        second.setGlyphShape(ctxt, GlyphCode.Porrectus1);\r\n        break;\r\n      case 2:\r\n        second.setGlyphShape(ctxt, GlyphCode.Porrectus2);\r\n        break;\r\n      case 3:\r\n        second.setGlyphShape(ctxt, GlyphCode.Porrectus3);\r\n        break;\r\n      case 4:\r\n        second.setGlyphShape(ctxt, GlyphCode.Porrectus4);\r\n        break;\r\n      default:\r\n        // fixme: should we generate an error here?\r\n        second.setGlyphShape(ctxt, GlyphCode.None);\r\n        break;\r\n    }\r\n\r\n    second.performLayout(ctxt);\r\n    second.bounds.x = x;\r\n    x = second.bounds.right();\r\n    this.addVisualizer(second);\r\n\r\n    // the second glyph does not draw anything, but it still has logical importance for the editing\r\n    // environment...it can respond to changes which will then change the swash glyph of the first.\r\n    third.setGlyphShape(ctxt, GlyphCode.None);\r\n    third.performLayout(ctxt);\r\n    third.bounds.x = x;\r\n    x = third.bounds.right();\r\n    this.addVisualizer(third);\r\n\r\n    // add a connecting line\r\n    if (fourthStaffPosition - thirdStaffPosition > 1) {\r\n      line = new NeumeLineVisualizer(ctxt, third, fourth, false);\r\n      x -= line.bounds.width;\r\n      line.bounds.x += x;\r\n      this.addVisualizer(line);\r\n    }\r\n\r\n    fourth.setGlyphShape(ctxt, GlyphCode.PunctumCuadratum);\r\n    fourth.performLayout(ctxt);\r\n    fourth.bounds.x = x;\r\n    x = fourth.bounds.right();\r\n    this.addVisualizer(fourth);\r\n\r\n    // add a connecting line\r\n    if (fourthStaffPosition - fifthStaffPosition > 1) {\r\n      line = new NeumeLineVisualizer(ctxt, fourth, fifth, false);\r\n      x -= line.bounds.width * 1.5;\r\n      line.bounds.x += x;\r\n      this.addVisualizer(line);\r\n    }\r\n\r\n    fifth.setGlyphShape(ctxt, GlyphCode.PunctumCuadratum);\r\n    fifth.performLayout(ctxt);\r\n    fifth.bounds.x = x;\r\n    this.addVisualizer(fifth);\r\n\r\n    this.origin.x = first.origin.x;\r\n    this.origin.y = first.origin.y;\r\n\r\n    this.finishLayout(ctxt);\r\n  }\r\n}\r\n\r\n/*\r\n * Tristropha\r\n *\r\n * For simplicity in implementation, Tristropha's have three notes in the object\r\n * structure. These technically must be the same pitch though (like the\r\n * Distropha and Bivirga).\r\n */\r\nexport class Tristropha extends Neume {\r\n\r\n  performLayout(ctxt) {\r\n    super.performLayout(ctxt);\r\n\r\n    var note1 = this.notes[0];\r\n    var note2 = this.notes[1];\r\n    var note3 = this.notes[2];\r\n\r\n    var staffPosition = note1.staffPosition;\r\n\r\n    note1.setGlyphShape(ctxt, GlyphCode.PunctumCuadratum);\r\n    note1.performLayout(ctxt);\r\n\r\n    note2.setGlyphShape(ctxt, GlyphCode.PunctumCuadratum);\r\n    note2.performLayout(ctxt);\r\n    note2.bounds.x += note1.bounds.width + ctxt.intraNeumeSpacing;\r\n\r\n    note3.setGlyphShape(ctxt, GlyphCode.PunctumCuadratum);\r\n    note3.performLayout(ctxt);\r\n    note3.bounds.x += note1.bounds.width + note2.bounds.width + ctxt.intraNeumeSpacing * 2;\r\n\r\n    this.addVisualizer(note1);\r\n    this.addVisualizer(note2);\r\n    this.addVisualizer(note3);\r\n\r\n    this.origin.x = note1.origin.x;\r\n    this.origin.y = note1.origin.y;\r\n\r\n    this.finishLayout(ctxt);\r\n  }\r\n}\r\n\r\n/*\r\n * Virga\r\n */\r\nexport class Virga extends Neume {\r\n\r\n  performLayout(ctxt) {\r\n    super.performLayout(ctxt);\r\n\r\n    var note = this.notes[0];\r\n\r\n    var staffPosition = note.staffPosition;\r\n\r\n    var glyphCode = Virga.getGlyphCode(staffPosition);\r\n    note.setGlyphShape(ctxt, glyphCode);\r\n    note.performLayout(ctxt);\r\n\r\n    this.addVisualizer(note);\r\n\r\n    this.origin.x = note.origin.x;\r\n    this.origin.y = note.origin.y;\r\n\r\n    this.finishLayout(ctxt);\r\n  }\r\n\r\n  // The virga's glyph depends on its staff position. This is a helper function\r\n  // that can be used by other neumes that use the virga glyphs...\r\n  static getGlyphCode(staffPosition) {\r\n    if (Math.abs(staffPosition) % 2 == 1)\r\n      return GlyphCode.VirgaLong;\r\n    else\r\n      return GlyphCode.VirgaShort;\r\n\r\n    // fixme: add logic for virgas low on the staff that are probably short also...\r\n  }\r\n}\n\n\n/** WEBPACK FOOTER **\n ** ./src/Exsurge.Chant.Neumes.js\n **/"],"sourceRoot":""}